{
    "abi": [
      {
        "inputs": [
          {
            "internalType": "address",
            "name": "owner",
            "type": "address"
          }
        ],
        "stateMutability": "nonpayable",
        "type": "constructor"
      },
      {
        "inputs": [
          {
            "internalType": "address",
            "name": "account",
            "type": "address"
          }
        ],
        "name": "Unauthorized",
        "type": "error"
      },
      {
        "inputs": [
          {
            "internalType": "address",
            "name": "host",
            "type": "address"
          },
          {
            "internalType": "uint256",
            "name": "",
            "type": "uint256"
          }
        ],
        "name": "activeRequests",
        "outputs": [
          {
            "internalType": "uint256",
            "name": "uniqueCode",
            "type": "uint256"
          },
          {
            "internalType": "uint256",
            "name": "feesPaid",
            "type": "uint256"
          }
        ],
        "stateMutability": "view",
        "type": "function"
      },
      {
        "inputs": [
          {
            "internalType": "string",
            "name": "url",
            "type": "string"
          },
          {
            "internalType": "address",
            "name": "account",
            "type": "address"
          },
          {
            "internalType": "uint256",
            "name": "price",
            "type": "uint256"
          }
        ],
        "name": "addHost",
        "outputs": [
          {
            "internalType": "bool",
            "name": "",
            "type": "bool"
          }
        ],
        "stateMutability": "nonpayable",
        "type": "function"
      },
      {
        "inputs": [
          {
            "internalType": "uint256",
            "name": "code",
            "type": "uint256"
          },
          {
            "internalType": "address",
            "name": "host",
            "type": "address"
          }
        ],
        "name": "addRequest",
        "outputs": [
          {
            "internalType": "bool",
            "name": "",
            "type": "bool"
          }
        ],
        "stateMutability": "payable",
        "type": "function"
      },
      {
        "inputs": [
          {
            "internalType": "uint256",
            "name": "",
            "type": "uint256"
          }
        ],
        "name": "allHosts",
        "outputs": [
          {
            "internalType": "string",
            "name": "url",
            "type": "string"
          },
          {
            "internalType": "address",
            "name": "hostAccount",
            "type": "address"
          },
          {
            "internalType": "uint256",
            "name": "price",
            "type": "uint256"
          }
        ],
        "stateMutability": "view",
        "type": "function"
      },
      {
        "inputs": [],
        "name": "clearListAndReedemFunds",
        "outputs": [
          {
            "internalType": "bool",
            "name": "",
            "type": "bool"
          }
        ],
        "stateMutability": "nonpayable",
        "type": "function"
      },
      {
        "inputs": [
          {
            "internalType": "address",
            "name": "host",
            "type": "address"
          }
        ],
        "name": "getActiveRequests",
        "outputs": [
          {
            "components": [
              {
                "internalType": "uint256",
                "name": "uniqueCode",
                "type": "uint256"
              },
              {
                "internalType": "uint256",
                "name": "feesPaid",
                "type": "uint256"
              }
            ],
            "internalType": "struct LLMMarket.Request[]",
            "name": "",
            "type": "tuple[]"
          }
        ],
        "stateMutability": "view",
        "type": "function"
      },
      {
        "inputs": [],
        "name": "getHosts",
        "outputs": [
          {
            "components": [
              {
                "internalType": "string",
                "name": "url",
                "type": "string"
              },
              {
                "internalType": "address",
                "name": "hostAccount",
                "type": "address"
              },
              {
                "internalType": "uint256",
                "name": "price",
                "type": "uint256"
              }
            ],
            "internalType": "struct LLMMarket.Hoster[]",
            "name": "",
            "type": "tuple[]"
          }
        ],
        "stateMutability": "view",
        "type": "function"
      },
      {
        "inputs": [
          {
            "internalType": "address",
            "name": "host",
            "type": "address"
          }
        ],
        "name": "getPaused",
        "outputs": [
          {
            "internalType": "bool",
            "name": "",
            "type": "bool"
          }
        ],
        "stateMutability": "view",
        "type": "function"
      },
      {
        "inputs": [],
        "name": "pause",
        "outputs": [
          {
            "internalType": "bool",
            "name": "",
            "type": "bool"
          }
        ],
        "stateMutability": "nonpayable",
        "type": "function"
      },
      {
        "inputs": [
          {
            "internalType": "address",
            "name": "host",
            "type": "address"
          }
        ],
        "name": "paused",
        "outputs": [
          {
            "internalType": "bool",
            "name": "",
            "type": "bool"
          }
        ],
        "stateMutability": "view",
        "type": "function"
      },
      {
        "inputs": [
          {
            "internalType": "address",
            "name": "account",
            "type": "address"
          }
        ],
        "name": "removeHost",
        "outputs": [
          {
            "internalType": "bool",
            "name": "",
            "type": "bool"
          }
        ],
        "stateMutability": "nonpayable",
        "type": "function"
      },
      {
        "inputs": [],
        "name": "unpause",
        "outputs": [
          {
            "internalType": "bool",
            "name": "",
            "type": "bool"
          }
        ],
        "stateMutability": "nonpayable",
        "type": "function"
      }
    ],
    "allSourcePaths": {
      "0": "contracts/LLMMarket.sol"
    },
    "ast": {
      "absolutePath": "contracts/LLMMarket.sol",
      "exportedSymbols": {
        "LLMMarket": [
          288
        ]
      },
      "id": 289,
      "nodeType": "SourceUnit",
      "nodes": [
        {
          "id": 1,
          "literals": [
            "solidity",
            ">=",
            "0.8",
            ".2",
            "<",
            "0.9",
            ".0"
          ],
          "nodeType": "PragmaDirective",
          "src": "0:31:0"
        },
        {
          "abstract": false,
          "baseContracts": [],
          "canonicalName": "LLMMarket",
          "contractDependencies": [],
          "contractKind": "contract",
          "fullyImplemented": true,
          "id": 288,
          "linearizedBaseContracts": [
            288
          ],
          "name": "LLMMarket",
          "nameLocation": "42:9:0",
          "nodeType": "ContractDefinition",
          "nodes": [
            {
              "constant": false,
              "id": 3,
              "mutability": "mutable",
              "name": "_owner",
              "nameLocation": "74:6:0",
              "nodeType": "VariableDeclaration",
              "scope": 288,
              "src": "58:22:0",
              "stateVariable": true,
              "storageLocation": "default",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              },
              "typeName": {
                "id": 2,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "58:7:0",
                "stateMutability": "nonpayable",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "visibility": "private"
            },
            {
              "errorSelector": "8e4a23d6",
              "id": 7,
              "name": "Unauthorized",
              "nameLocation": "119:12:0",
              "nodeType": "ErrorDefinition",
              "parameters": {
                "id": 6,
                "nodeType": "ParameterList",
                "parameters": [
                  {
                    "constant": false,
                    "id": 5,
                    "mutability": "mutable",
                    "name": "account",
                    "nameLocation": "140:7:0",
                    "nodeType": "VariableDeclaration",
                    "scope": 7,
                    "src": "132:15:0",
                    "stateVariable": false,
                    "storageLocation": "default",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    },
                    "typeName": {
                      "id": 4,
                      "name": "address",
                      "nodeType": "ElementaryTypeName",
                      "src": "132:7:0",
                      "stateMutability": "nonpayable",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "visibility": "internal"
                  }
                ],
                "src": "131:17:0"
              },
              "src": "113:36:0"
            },
            {
              "body": {
                "id": 21,
                "nodeType": "Block",
                "src": "175:105:0",
                "statements": [
                  {
                    "condition": {
                      "commonType": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "id": 12,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "expression": {
                          "id": 9,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "188:3:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 10,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "192:6:0",
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "188:10:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "!=",
                      "rightExpression": {
                        "id": 11,
                        "name": "_owner",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3,
                        "src": "200:6:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "src": "188:18:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "id": 19,
                    "nodeType": "IfStatement",
                    "src": "185:78:0",
                    "trueBody": {
                      "id": 18,
                      "nodeType": "Block",
                      "src": "207:56:0",
                      "statements": [
                        {
                          "errorCall": {
                            "arguments": [
                              {
                                "expression": {
                                  "id": 14,
                                  "name": "msg",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": -15,
                                  "src": "241:3:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_magic_message",
                                    "typeString": "msg"
                                  }
                                },
                                "id": 15,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberLocation": "245:6:0",
                                "memberName": "sender",
                                "nodeType": "MemberAccess",
                                "src": "241:10:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              ],
                              "id": 13,
                              "name": "Unauthorized",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 7,
                              "src": "228:12:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
                                "typeString": "function (address) pure"
                              }
                            },
                            "id": 16,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "228:24:0",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_tuple$__$",
                              "typeString": "tuple()"
                            }
                          },
                          "id": 17,
                          "nodeType": "RevertStatement",
                          "src": "221:31:0"
                        }
                      ]
                    }
                  },
                  {
                    "id": 20,
                    "nodeType": "PlaceholderStatement",
                    "src": "272:1:0"
                  }
                ]
              },
              "id": 22,
              "name": "onlyOwner",
              "nameLocation": "164:9:0",
              "nodeType": "ModifierDefinition",
              "parameters": {
                "id": 8,
                "nodeType": "ParameterList",
                "parameters": [],
                "src": "173:2:0"
              },
              "src": "155:125:0",
              "virtual": false,
              "visibility": "internal"
            },
            {
              "body": {
                "id": 31,
                "nodeType": "Block",
                "src": "313:31:0",
                "statements": [
                  {
                    "expression": {
                      "id": 29,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftHandSide": {
                        "id": 27,
                        "name": "_owner",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3,
                        "src": "323:6:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "nodeType": "Assignment",
                      "operator": "=",
                      "rightHandSide": {
                        "id": 28,
                        "name": "owner",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 24,
                        "src": "332:5:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "src": "323:14:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "id": 30,
                    "nodeType": "ExpressionStatement",
                    "src": "323:14:0"
                  }
                ]
              },
              "id": 32,
              "implemented": true,
              "kind": "constructor",
              "modifiers": [],
              "name": "",
              "nameLocation": "-1:-1:-1",
              "nodeType": "FunctionDefinition",
              "parameters": {
                "id": 25,
                "nodeType": "ParameterList",
                "parameters": [
                  {
                    "constant": false,
                    "id": 24,
                    "mutability": "mutable",
                    "name": "owner",
                    "nameLocation": "306:5:0",
                    "nodeType": "VariableDeclaration",
                    "scope": 32,
                    "src": "298:13:0",
                    "stateVariable": false,
                    "storageLocation": "default",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    },
                    "typeName": {
                      "id": 23,
                      "name": "address",
                      "nodeType": "ElementaryTypeName",
                      "src": "298:7:0",
                      "stateMutability": "nonpayable",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "visibility": "internal"
                  }
                ],
                "src": "297:15:0"
              },
              "returnParameters": {
                "id": 26,
                "nodeType": "ParameterList",
                "parameters": [],
                "src": "313:0:0"
              },
              "scope": 288,
              "src": "286:58:0",
              "stateMutability": "nonpayable",
              "virtual": false,
              "visibility": "public"
            },
            {
              "canonicalName": "LLMMarket.Hoster",
              "id": 39,
              "members": [
                {
                  "constant": false,
                  "id": 34,
                  "mutability": "mutable",
                  "name": "url",
                  "nameLocation": "380:3:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 39,
                  "src": "373:10:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_storage_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 33,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "373:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 36,
                  "mutability": "mutable",
                  "name": "hostAccount",
                  "nameLocation": "401:11:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 39,
                  "src": "393:19:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 35,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "393:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 38,
                  "mutability": "mutable",
                  "name": "price",
                  "nameLocation": "430:5:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 39,
                  "src": "422:13:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 37,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "422:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "name": "Hoster",
              "nameLocation": "357:6:0",
              "nodeType": "StructDefinition",
              "scope": 288,
              "src": "350:92:0",
              "visibility": "public"
            },
            {
              "canonicalName": "LLMMarket.Request",
              "id": 44,
              "members": [
                {
                  "constant": false,
                  "id": 41,
                  "mutability": "mutable",
                  "name": "uniqueCode",
                  "nameLocation": "480:10:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 44,
                  "src": "472:18:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 40,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "472:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 43,
                  "mutability": "mutable",
                  "name": "feesPaid",
                  "nameLocation": "508:8:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 44,
                  "src": "500:16:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 42,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "500:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "name": "Request",
              "nameLocation": "455:7:0",
              "nodeType": "StructDefinition",
              "scope": 288,
              "src": "448:75:0",
              "visibility": "public"
            },
            {
              "constant": false,
              "functionSelector": "c766c2c7",
              "id": 48,
              "mutability": "mutable",
              "name": "allHosts",
              "nameLocation": "545:8:0",
              "nodeType": "VariableDeclaration",
              "scope": 288,
              "src": "529:24:0",
              "stateVariable": true,
              "storageLocation": "default",
              "typeDescriptions": {
                "typeIdentifier": "t_array$_t_struct$_Hoster_$39_storage_$dyn_storage",
                "typeString": "struct LLMMarket.Hoster[]"
              },
              "typeName": {
                "baseType": {
                  "id": 46,
                  "nodeType": "UserDefinedTypeName",
                  "pathNode": {
                    "id": 45,
                    "name": "Hoster",
                    "nameLocations": [
                      "529:6:0"
                    ],
                    "nodeType": "IdentifierPath",
                    "referencedDeclaration": 39,
                    "src": "529:6:0"
                  },
                  "referencedDeclaration": 39,
                  "src": "529:6:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_Hoster_$39_storage_ptr",
                    "typeString": "struct LLMMarket.Hoster"
                  }
                },
                "id": 47,
                "nodeType": "ArrayTypeName",
                "src": "529:8:0",
                "typeDescriptions": {
                  "typeIdentifier": "t_array$_t_struct$_Hoster_$39_storage_$dyn_storage_ptr",
                  "typeString": "struct LLMMarket.Hoster[]"
                }
              },
              "visibility": "public"
            },
            {
              "constant": false,
              "functionSelector": "44ddb944",
              "id": 54,
              "mutability": "mutable",
              "name": "activeRequests",
              "nameLocation": "602:14:0",
              "nodeType": "VariableDeclaration",
              "scope": 288,
              "src": "560:56:0",
              "stateVariable": true,
              "storageLocation": "default",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_array$_t_struct$_Request_$44_storage_$dyn_storage_$",
                "typeString": "mapping(address => struct LLMMarket.Request[])"
              },
              "typeName": {
                "id": 53,
                "keyName": "host",
                "keyNameLocation": "576:4:0",
                "keyType": {
                  "id": 49,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "568:7:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                },
                "nodeType": "Mapping",
                "src": "560:34:0",
                "typeDescriptions": {
                  "typeIdentifier": "t_mapping$_t_address_$_t_array$_t_struct$_Request_$44_storage_$dyn_storage_$",
                  "typeString": "mapping(address => struct LLMMarket.Request[])"
                },
                "valueName": "",
                "valueNameLocation": "-1:-1:-1",
                "valueType": {
                  "baseType": {
                    "id": 51,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 50,
                      "name": "Request",
                      "nameLocations": [
                        "584:7:0"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 44,
                      "src": "584:7:0"
                    },
                    "referencedDeclaration": 44,
                    "src": "584:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Request_$44_storage_ptr",
                      "typeString": "struct LLMMarket.Request"
                    }
                  },
                  "id": 52,
                  "nodeType": "ArrayTypeName",
                  "src": "584:9:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_struct$_Request_$44_storage_$dyn_storage_ptr",
                    "typeString": "struct LLMMarket.Request[]"
                  }
                }
              },
              "visibility": "public"
            },
            {
              "constant": false,
              "functionSelector": "2e48152c",
              "id": 58,
              "mutability": "mutable",
              "name": "paused",
              "nameLocation": "659:6:0",
              "nodeType": "VariableDeclaration",
              "scope": 288,
              "src": "622:43:0",
              "stateVariable": true,
              "storageLocation": "default",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                "typeString": "mapping(address => bool)"
              },
              "typeName": {
                "id": 57,
                "keyName": "host",
                "keyNameLocation": "638:4:0",
                "keyType": {
                  "id": 55,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "630:7:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                },
                "nodeType": "Mapping",
                "src": "622:29:0",
                "typeDescriptions": {
                  "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                  "typeString": "mapping(address => bool)"
                },
                "valueName": "",
                "valueNameLocation": "-1:-1:-1",
                "valueType": {
                  "id": 56,
                  "name": "bool",
                  "nodeType": "ElementaryTypeName",
                  "src": "646:4:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  }
                }
              },
              "visibility": "public"
            },
            {
              "body": {
                "id": 83,
                "nodeType": "Block",
                "src": "774:80:0",
                "statements": [
                  {
                    "expression": {
                      "arguments": [
                        {
                          "arguments": [
                            {
                              "id": 75,
                              "name": "url",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 60,
                              "src": "805:3:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_string_memory_ptr",
                                "typeString": "string memory"
                              }
                            },
                            {
                              "id": 76,
                              "name": "account",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 62,
                              "src": "810:7:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 77,
                              "name": "price",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 64,
                              "src": "819:5:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_string_memory_ptr",
                                "typeString": "string memory"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 74,
                            "name": "Hoster",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 39,
                            "src": "798:6:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_struct$_Hoster_$39_storage_ptr_$",
                              "typeString": "type(struct LLMMarket.Hoster storage pointer)"
                            }
                          },
                          "id": 78,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "structConstructorCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "798:27:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Hoster_$39_memory_ptr",
                            "typeString": "struct LLMMarket.Hoster memory"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_struct$_Hoster_$39_memory_ptr",
                            "typeString": "struct LLMMarket.Hoster memory"
                          }
                        ],
                        "expression": {
                          "id": 71,
                          "name": "allHosts",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 48,
                          "src": "784:8:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_struct$_Hoster_$39_storage_$dyn_storage",
                            "typeString": "struct LLMMarket.Hoster storage ref[] storage ref"
                          }
                        },
                        "id": 73,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "793:4:0",
                        "memberName": "push",
                        "nodeType": "MemberAccess",
                        "src": "784:13:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_arraypush_nonpayable$_t_array$_t_struct$_Hoster_$39_storage_$dyn_storage_ptr_$_t_struct$_Hoster_$39_storage_$returns$__$attached_to$_t_array$_t_struct$_Hoster_$39_storage_$dyn_storage_ptr_$",
                          "typeString": "function (struct LLMMarket.Hoster storage ref[] storage pointer,struct LLMMarket.Hoster storage ref)"
                        }
                      },
                      "id": 79,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "784:42:0",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$__$",
                        "typeString": "tuple()"
                      }
                    },
                    "id": 80,
                    "nodeType": "ExpressionStatement",
                    "src": "784:42:0"
                  },
                  {
                    "expression": {
                      "hexValue": "74727565",
                      "id": 81,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "843:4:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "true"
                    },
                    "functionReturnParameters": 70,
                    "id": 82,
                    "nodeType": "Return",
                    "src": "836:11:0"
                  }
                ]
              },
              "functionSelector": "37977771",
              "id": 84,
              "implemented": true,
              "kind": "function",
              "modifiers": [
                {
                  "id": 67,
                  "kind": "modifierInvocation",
                  "modifierName": {
                    "id": 66,
                    "name": "onlyOwner",
                    "nameLocations": [
                      "749:9:0"
                    ],
                    "nodeType": "IdentifierPath",
                    "referencedDeclaration": 22,
                    "src": "749:9:0"
                  },
                  "nodeType": "ModifierInvocation",
                  "src": "749:9:0"
                }
              ],
              "name": "addHost",
              "nameLocation": "681:7:0",
              "nodeType": "FunctionDefinition",
              "parameters": {
                "id": 65,
                "nodeType": "ParameterList",
                "parameters": [
                  {
                    "constant": false,
                    "id": 60,
                    "mutability": "mutable",
                    "name": "url",
                    "nameLocation": "703:3:0",
                    "nodeType": "VariableDeclaration",
                    "scope": 84,
                    "src": "689:17:0",
                    "stateVariable": false,
                    "storageLocation": "memory",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_memory_ptr",
                      "typeString": "string"
                    },
                    "typeName": {
                      "id": 59,
                      "name": "string",
                      "nodeType": "ElementaryTypeName",
                      "src": "689:6:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_storage_ptr",
                        "typeString": "string"
                      }
                    },
                    "visibility": "internal"
                  },
                  {
                    "constant": false,
                    "id": 62,
                    "mutability": "mutable",
                    "name": "account",
                    "nameLocation": "716:7:0",
                    "nodeType": "VariableDeclaration",
                    "scope": 84,
                    "src": "708:15:0",
                    "stateVariable": false,
                    "storageLocation": "default",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    },
                    "typeName": {
                      "id": 61,
                      "name": "address",
                      "nodeType": "ElementaryTypeName",
                      "src": "708:7:0",
                      "stateMutability": "nonpayable",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "visibility": "internal"
                  },
                  {
                    "constant": false,
                    "id": 64,
                    "mutability": "mutable",
                    "name": "price",
                    "nameLocation": "733:5:0",
                    "nodeType": "VariableDeclaration",
                    "scope": 84,
                    "src": "725:13:0",
                    "stateVariable": false,
                    "storageLocation": "default",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "typeName": {
                      "id": 63,
                      "name": "uint256",
                      "nodeType": "ElementaryTypeName",
                      "src": "725:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "visibility": "internal"
                  }
                ],
                "src": "688:51:0"
              },
              "returnParameters": {
                "id": 70,
                "nodeType": "ParameterList",
                "parameters": [
                  {
                    "constant": false,
                    "id": 69,
                    "mutability": "mutable",
                    "name": "",
                    "nameLocation": "-1:-1:-1",
                    "nodeType": "VariableDeclaration",
                    "scope": 84,
                    "src": "768:4:0",
                    "stateVariable": false,
                    "storageLocation": "default",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "typeName": {
                      "id": 68,
                      "name": "bool",
                      "nodeType": "ElementaryTypeName",
                      "src": "768:4:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "visibility": "internal"
                  }
                ],
                "src": "767:6:0"
              },
              "scope": 288,
              "src": "672:182:0",
              "stateMutability": "nonpayable",
              "virtual": false,
              "visibility": "external"
            },
            {
              "body": {
                "id": 123,
                "nodeType": "Block",
                "src": "931:219:0",
                "statements": [
                  {
                    "body": {
                      "id": 119,
                      "nodeType": "Block",
                      "src": "981:142:0",
                      "statements": [
                        {
                          "condition": {
                            "commonType": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            "id": 109,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "expression": {
                                "baseExpression": {
                                  "id": 104,
                                  "name": "allHosts",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 48,
                                  "src": "998:8:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_array$_t_struct$_Hoster_$39_storage_$dyn_storage",
                                    "typeString": "struct LLMMarket.Hoster storage ref[] storage ref"
                                  }
                                },
                                "id": 106,
                                "indexExpression": {
                                  "id": 105,
                                  "name": "i",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 94,
                                  "src": "1007:1:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "IndexAccess",
                                "src": "998:11:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_Hoster_$39_storage",
                                  "typeString": "struct LLMMarket.Hoster storage ref"
                                }
                              },
                              "id": 107,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "1010:11:0",
                              "memberName": "hostAccount",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 36,
                              "src": "998:23:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "==",
                            "rightExpression": {
                              "id": 108,
                              "name": "account",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 86,
                              "src": "1025:7:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "src": "998:34:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "id": 118,
                          "nodeType": "IfStatement",
                          "src": "995:118:0",
                          "trueBody": {
                            "id": 117,
                            "nodeType": "Block",
                            "src": "1033:80:0",
                            "statements": [
                              {
                                "expression": {
                                  "id": 113,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "nodeType": "UnaryOperation",
                                  "operator": "delete",
                                  "prefix": true,
                                  "src": "1051:18:0",
                                  "subExpression": {
                                    "baseExpression": {
                                      "id": 110,
                                      "name": "allHosts",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 48,
                                      "src": "1058:8:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_array$_t_struct$_Hoster_$39_storage_$dyn_storage",
                                        "typeString": "struct LLMMarket.Hoster storage ref[] storage ref"
                                      }
                                    },
                                    "id": 112,
                                    "indexExpression": {
                                      "id": 111,
                                      "name": "i",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 94,
                                      "src": "1067:1:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": true,
                                    "nodeType": "IndexAccess",
                                    "src": "1058:11:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_struct$_Hoster_$39_storage",
                                      "typeString": "struct LLMMarket.Hoster storage ref"
                                    }
                                  },
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_tuple$__$",
                                    "typeString": "tuple()"
                                  }
                                },
                                "id": 114,
                                "nodeType": "ExpressionStatement",
                                "src": "1051:18:0"
                              },
                              {
                                "expression": {
                                  "hexValue": "74727565",
                                  "id": 115,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "bool",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "1094:4:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bool",
                                    "typeString": "bool"
                                  },
                                  "value": "true"
                                },
                                "functionReturnParameters": 92,
                                "id": 116,
                                "nodeType": "Return",
                                "src": "1087:11:0"
                              }
                            ]
                          }
                        }
                      ]
                    },
                    "condition": {
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 100,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "id": 97,
                        "name": "i",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 94,
                        "src": "958:1:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "<",
                      "rightExpression": {
                        "expression": {
                          "id": 98,
                          "name": "allHosts",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 48,
                          "src": "960:8:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_struct$_Hoster_$39_storage_$dyn_storage",
                            "typeString": "struct LLMMarket.Hoster storage ref[] storage ref"
                          }
                        },
                        "id": 99,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "969:6:0",
                        "memberName": "length",
                        "nodeType": "MemberAccess",
                        "src": "960:15:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "src": "958:17:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "id": 120,
                    "initializationExpression": {
                      "assignments": [
                        94
                      ],
                      "declarations": [
                        {
                          "constant": false,
                          "id": 94,
                          "mutability": "mutable",
                          "name": "i",
                          "nameLocation": "953:1:0",
                          "nodeType": "VariableDeclaration",
                          "scope": 120,
                          "src": "945:9:0",
                          "stateVariable": false,
                          "storageLocation": "default",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "typeName": {
                            "id": 93,
                            "name": "uint256",
                            "nodeType": "ElementaryTypeName",
                            "src": "945:7:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "visibility": "internal"
                        }
                      ],
                      "id": 96,
                      "initialValue": {
                        "hexValue": "30",
                        "id": 95,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "955:1:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      },
                      "nodeType": "VariableDeclarationStatement",
                      "src": "945:11:0"
                    },
                    "isSimpleCounterLoop": true,
                    "loopExpression": {
                      "expression": {
                        "id": 102,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "UnaryOperation",
                        "operator": "++",
                        "prefix": false,
                        "src": "977:3:0",
                        "subExpression": {
                          "id": 101,
                          "name": "i",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 94,
                          "src": "977:1:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "id": 103,
                      "nodeType": "ExpressionStatement",
                      "src": "977:3:0"
                    },
                    "nodeType": "ForStatement",
                    "src": "941:182:0"
                  },
                  {
                    "expression": {
                      "hexValue": "74727565",
                      "id": 121,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "1139:4:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "true"
                    },
                    "functionReturnParameters": 92,
                    "id": 122,
                    "nodeType": "Return",
                    "src": "1132:11:0"
                  }
                ]
              },
              "functionSelector": "dd6388fb",
              "id": 124,
              "implemented": true,
              "kind": "function",
              "modifiers": [
                {
                  "id": 89,
                  "kind": "modifierInvocation",
                  "modifierName": {
                    "id": 88,
                    "name": "onlyOwner",
                    "nameLocations": [
                      "906:9:0"
                    ],
                    "nodeType": "IdentifierPath",
                    "referencedDeclaration": 22,
                    "src": "906:9:0"
                  },
                  "nodeType": "ModifierInvocation",
                  "src": "906:9:0"
                }
              ],
              "name": "removeHost",
              "nameLocation": "869:10:0",
              "nodeType": "FunctionDefinition",
              "parameters": {
                "id": 87,
                "nodeType": "ParameterList",
                "parameters": [
                  {
                    "constant": false,
                    "id": 86,
                    "mutability": "mutable",
                    "name": "account",
                    "nameLocation": "888:7:0",
                    "nodeType": "VariableDeclaration",
                    "scope": 124,
                    "src": "880:15:0",
                    "stateVariable": false,
                    "storageLocation": "default",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    },
                    "typeName": {
                      "id": 85,
                      "name": "address",
                      "nodeType": "ElementaryTypeName",
                      "src": "880:7:0",
                      "stateMutability": "nonpayable",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "visibility": "internal"
                  }
                ],
                "src": "879:17:0"
              },
              "returnParameters": {
                "id": 92,
                "nodeType": "ParameterList",
                "parameters": [
                  {
                    "constant": false,
                    "id": 91,
                    "mutability": "mutable",
                    "name": "",
                    "nameLocation": "-1:-1:-1",
                    "nodeType": "VariableDeclaration",
                    "scope": 124,
                    "src": "925:4:0",
                    "stateVariable": false,
                    "storageLocation": "default",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "typeName": {
                      "id": 90,
                      "name": "bool",
                      "nodeType": "ElementaryTypeName",
                      "src": "925:4:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "visibility": "internal"
                  }
                ],
                "src": "924:6:0"
              },
              "scope": 288,
              "src": "860:290:0",
              "stateMutability": "nonpayable",
              "virtual": false,
              "visibility": "external"
            },
            {
              "body": {
                "id": 138,
                "nodeType": "Block",
                "src": "1196:63:0",
                "statements": [
                  {
                    "expression": {
                      "id": 134,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftHandSide": {
                        "baseExpression": {
                          "id": 129,
                          "name": "paused",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 58,
                          "src": "1206:6:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                            "typeString": "mapping(address => bool)"
                          }
                        },
                        "id": 132,
                        "indexExpression": {
                          "expression": {
                            "id": 130,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -15,
                            "src": "1213:3:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 131,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "1217:6:0",
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "1213:10:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": true,
                        "nodeType": "IndexAccess",
                        "src": "1206:18:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "nodeType": "Assignment",
                      "operator": "=",
                      "rightHandSide": {
                        "hexValue": "74727565",
                        "id": 133,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "bool",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1227:4:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "value": "true"
                      },
                      "src": "1206:25:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "id": 135,
                    "nodeType": "ExpressionStatement",
                    "src": "1206:25:0"
                  },
                  {
                    "expression": {
                      "hexValue": "74727565",
                      "id": 136,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "1248:4:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "true"
                    },
                    "functionReturnParameters": 128,
                    "id": 137,
                    "nodeType": "Return",
                    "src": "1241:11:0"
                  }
                ]
              },
              "functionSelector": "8456cb59",
              "id": 139,
              "implemented": true,
              "kind": "function",
              "modifiers": [],
              "name": "pause",
              "nameLocation": "1165:5:0",
              "nodeType": "FunctionDefinition",
              "parameters": {
                "id": 125,
                "nodeType": "ParameterList",
                "parameters": [],
                "src": "1170:2:0"
              },
              "returnParameters": {
                "id": 128,
                "nodeType": "ParameterList",
                "parameters": [
                  {
                    "constant": false,
                    "id": 127,
                    "mutability": "mutable",
                    "name": "",
                    "nameLocation": "-1:-1:-1",
                    "nodeType": "VariableDeclaration",
                    "scope": 139,
                    "src": "1191:4:0",
                    "stateVariable": false,
                    "storageLocation": "default",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "typeName": {
                      "id": 126,
                      "name": "bool",
                      "nodeType": "ElementaryTypeName",
                      "src": "1191:4:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "visibility": "internal"
                  }
                ],
                "src": "1190:6:0"
              },
              "scope": 288,
              "src": "1156:103:0",
              "stateMutability": "nonpayable",
              "virtual": false,
              "visibility": "external"
            },
            {
              "body": {
                "id": 153,
                "nodeType": "Block",
                "src": "1307:64:0",
                "statements": [
                  {
                    "expression": {
                      "id": 149,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftHandSide": {
                        "baseExpression": {
                          "id": 144,
                          "name": "paused",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 58,
                          "src": "1317:6:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                            "typeString": "mapping(address => bool)"
                          }
                        },
                        "id": 147,
                        "indexExpression": {
                          "expression": {
                            "id": 145,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -15,
                            "src": "1324:3:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 146,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "1328:6:0",
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "1324:10:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": true,
                        "nodeType": "IndexAccess",
                        "src": "1317:18:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "nodeType": "Assignment",
                      "operator": "=",
                      "rightHandSide": {
                        "hexValue": "66616c7365",
                        "id": 148,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "bool",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1338:5:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "value": "false"
                      },
                      "src": "1317:26:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "id": 150,
                    "nodeType": "ExpressionStatement",
                    "src": "1317:26:0"
                  },
                  {
                    "expression": {
                      "hexValue": "74727565",
                      "id": 151,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "1360:4:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "true"
                    },
                    "functionReturnParameters": 143,
                    "id": 152,
                    "nodeType": "Return",
                    "src": "1353:11:0"
                  }
                ]
              },
              "functionSelector": "3f4ba83a",
              "id": 154,
              "implemented": true,
              "kind": "function",
              "modifiers": [],
              "name": "unpause",
              "nameLocation": "1274:7:0",
              "nodeType": "FunctionDefinition",
              "parameters": {
                "id": 140,
                "nodeType": "ParameterList",
                "parameters": [],
                "src": "1281:2:0"
              },
              "returnParameters": {
                "id": 143,
                "nodeType": "ParameterList",
                "parameters": [
                  {
                    "constant": false,
                    "id": 142,
                    "mutability": "mutable",
                    "name": "",
                    "nameLocation": "-1:-1:-1",
                    "nodeType": "VariableDeclaration",
                    "scope": 154,
                    "src": "1302:4:0",
                    "stateVariable": false,
                    "storageLocation": "default",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "typeName": {
                      "id": 141,
                      "name": "bool",
                      "nodeType": "ElementaryTypeName",
                      "src": "1302:4:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "visibility": "internal"
                  }
                ],
                "src": "1301:6:0"
              },
              "scope": 288,
              "src": "1265:106:0",
              "stateMutability": "nonpayable",
              "virtual": false,
              "visibility": "external"
            },
            {
              "body": {
                "id": 163,
                "nodeType": "Block",
                "src": "1436:32:0",
                "statements": [
                  {
                    "expression": {
                      "id": 161,
                      "name": "allHosts",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 48,
                      "src": "1453:8:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_struct$_Hoster_$39_storage_$dyn_storage",
                        "typeString": "struct LLMMarket.Hoster storage ref[] storage ref"
                      }
                    },
                    "functionReturnParameters": 160,
                    "id": 162,
                    "nodeType": "Return",
                    "src": "1446:15:0"
                  }
                ]
              },
              "functionSelector": "391d0b75",
              "id": 164,
              "implemented": true,
              "kind": "function",
              "modifiers": [],
              "name": "getHosts",
              "nameLocation": "1386:8:0",
              "nodeType": "FunctionDefinition",
              "parameters": {
                "id": 155,
                "nodeType": "ParameterList",
                "parameters": [],
                "src": "1394:2:0"
              },
              "returnParameters": {
                "id": 160,
                "nodeType": "ParameterList",
                "parameters": [
                  {
                    "constant": false,
                    "id": 159,
                    "mutability": "mutable",
                    "name": "",
                    "nameLocation": "-1:-1:-1",
                    "nodeType": "VariableDeclaration",
                    "scope": 164,
                    "src": "1420:15:0",
                    "stateVariable": false,
                    "storageLocation": "memory",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_struct$_Hoster_$39_memory_ptr_$dyn_memory_ptr",
                      "typeString": "struct LLMMarket.Hoster[]"
                    },
                    "typeName": {
                      "baseType": {
                        "id": 157,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 156,
                          "name": "Hoster",
                          "nameLocations": [
                            "1420:6:0"
                          ],
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 39,
                          "src": "1420:6:0"
                        },
                        "referencedDeclaration": 39,
                        "src": "1420:6:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Hoster_$39_storage_ptr",
                          "typeString": "struct LLMMarket.Hoster"
                        }
                      },
                      "id": 158,
                      "nodeType": "ArrayTypeName",
                      "src": "1420:8:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_struct$_Hoster_$39_storage_$dyn_storage_ptr",
                        "typeString": "struct LLMMarket.Hoster[]"
                      }
                    },
                    "visibility": "internal"
                  }
                ],
                "src": "1419:17:0"
              },
              "scope": 288,
              "src": "1377:91:0",
              "stateMutability": "view",
              "virtual": false,
              "visibility": "external"
            },
            {
              "body": {
                "id": 205,
                "nodeType": "Block",
                "src": "1554:213:0",
                "statements": [
                  {
                    "expression": {
                      "arguments": [
                        {
                          "commonType": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "id": 178,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "baseExpression": {
                              "id": 174,
                              "name": "paused",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 58,
                              "src": "1572:6:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                                "typeString": "mapping(address => bool)"
                              }
                            },
                            "id": 176,
                            "indexExpression": {
                              "id": 175,
                              "name": "host",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 168,
                              "src": "1579:4:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "1572:12:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "hexValue": "66616c7365",
                            "id": 177,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "bool",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "1588:5:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            },
                            "value": "false"
                          },
                          "src": "1572:21:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        {
                          "hexValue": "43757272656e746c792070617573656421",
                          "id": 179,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "string",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "1595:19:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_stringliteral_83fc35eddc44233171bda4411d2af7c91712edd9c165734dc2b99502420a289a",
                            "typeString": "literal_string \"Currently paused!\""
                          },
                          "value": "Currently paused!"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          {
                            "typeIdentifier": "t_stringliteral_83fc35eddc44233171bda4411d2af7c91712edd9c165734dc2b99502420a289a",
                            "typeString": "literal_string \"Currently paused!\""
                          }
                        ],
                        "id": 173,
                        "name": "require",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [
                          -18,
                          -18
                        ],
                        "referencedDeclaration": -18,
                        "src": "1564:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                          "typeString": "function (bool,string memory) pure"
                        }
                      },
                      "id": 180,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "1564:51:0",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$__$",
                        "typeString": "tuple()"
                      }
                    },
                    "id": 181,
                    "nodeType": "ExpressionStatement",
                    "src": "1564:51:0"
                  },
                  {
                    "expression": {
                      "arguments": [
                        {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 188,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "expression": {
                              "id": 183,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -15,
                              "src": "1633:3:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 184,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "1637:5:0",
                            "memberName": "value",
                            "nodeType": "MemberAccess",
                            "src": "1633:9:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": ">=",
                          "rightExpression": {
                            "commonType": {
                              "typeIdentifier": "t_rational_1000000000000000_by_1",
                              "typeString": "int_const 1000000000000000"
                            },
                            "id": 187,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "leftExpression": {
                              "hexValue": "3130",
                              "id": 185,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "1646:2:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_10_by_1",
                                "typeString": "int_const 10"
                              },
                              "value": "10"
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "**",
                            "rightExpression": {
                              "hexValue": "3135",
                              "id": 186,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "1650:2:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_15_by_1",
                                "typeString": "int_const 15"
                              },
                              "value": "15"
                            },
                            "src": "1646:6:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_1000000000000000_by_1",
                              "typeString": "int_const 1000000000000000"
                            }
                          },
                          "src": "1633:19:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        {
                          "hexValue": "496e73756666696369656e742066756e64696e6721",
                          "id": 189,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "string",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "1654:23:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_stringliteral_397e3daec409a1317a348489f49149fc2cddba806d38a8e67f49ce116de882c6",
                            "typeString": "literal_string \"Insufficient funding!\""
                          },
                          "value": "Insufficient funding!"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          {
                            "typeIdentifier": "t_stringliteral_397e3daec409a1317a348489f49149fc2cddba806d38a8e67f49ce116de882c6",
                            "typeString": "literal_string \"Insufficient funding!\""
                          }
                        ],
                        "id": 182,
                        "name": "require",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [
                          -18,
                          -18
                        ],
                        "referencedDeclaration": -18,
                        "src": "1625:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                          "typeString": "function (bool,string memory) pure"
                        }
                      },
                      "id": 190,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "1625:53:0",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$__$",
                        "typeString": "tuple()"
                      }
                    },
                    "id": 191,
                    "nodeType": "ExpressionStatement",
                    "src": "1625:53:0"
                  },
                  {
                    "expression": {
                      "arguments": [
                        {
                          "arguments": [
                            {
                              "id": 197,
                              "name": "code",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 166,
                              "src": "1722:4:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "expression": {
                                "id": 198,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -15,
                                "src": "1728:3:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 199,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "1732:5:0",
                              "memberName": "value",
                              "nodeType": "MemberAccess",
                              "src": "1728:9:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 196,
                            "name": "Request",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 44,
                            "src": "1714:7:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_struct$_Request_$44_storage_ptr_$",
                              "typeString": "type(struct LLMMarket.Request storage pointer)"
                            }
                          },
                          "id": 200,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "structConstructorCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1714:24:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Request_$44_memory_ptr",
                            "typeString": "struct LLMMarket.Request memory"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_struct$_Request_$44_memory_ptr",
                            "typeString": "struct LLMMarket.Request memory"
                          }
                        ],
                        "expression": {
                          "baseExpression": {
                            "id": 192,
                            "name": "activeRequests",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 54,
                            "src": "1688:14:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_array$_t_struct$_Request_$44_storage_$dyn_storage_$",
                              "typeString": "mapping(address => struct LLMMarket.Request storage ref[] storage ref)"
                            }
                          },
                          "id": 194,
                          "indexExpression": {
                            "id": 193,
                            "name": "host",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 168,
                            "src": "1703:4:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "1688:20:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_struct$_Request_$44_storage_$dyn_storage",
                            "typeString": "struct LLMMarket.Request storage ref[] storage ref"
                          }
                        },
                        "id": 195,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "1709:4:0",
                        "memberName": "push",
                        "nodeType": "MemberAccess",
                        "src": "1688:25:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_arraypush_nonpayable$_t_array$_t_struct$_Request_$44_storage_$dyn_storage_ptr_$_t_struct$_Request_$44_storage_$returns$__$attached_to$_t_array$_t_struct$_Request_$44_storage_$dyn_storage_ptr_$",
                          "typeString": "function (struct LLMMarket.Request storage ref[] storage pointer,struct LLMMarket.Request storage ref)"
                        }
                      },
                      "id": 201,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "1688:51:0",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$__$",
                        "typeString": "tuple()"
                      }
                    },
                    "id": 202,
                    "nodeType": "ExpressionStatement",
                    "src": "1688:51:0"
                  },
                  {
                    "expression": {
                      "hexValue": "74727565",
                      "id": 203,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "1756:4:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "true"
                    },
                    "functionReturnParameters": 172,
                    "id": 204,
                    "nodeType": "Return",
                    "src": "1749:11:0"
                  }
                ]
              },
              "functionSelector": "00a266d9",
              "id": 206,
              "implemented": true,
              "kind": "function",
              "modifiers": [],
              "name": "addRequest",
              "nameLocation": "1483:10:0",
              "nodeType": "FunctionDefinition",
              "parameters": {
                "id": 169,
                "nodeType": "ParameterList",
                "parameters": [
                  {
                    "constant": false,
                    "id": 166,
                    "mutability": "mutable",
                    "name": "code",
                    "nameLocation": "1502:4:0",
                    "nodeType": "VariableDeclaration",
                    "scope": 206,
                    "src": "1494:12:0",
                    "stateVariable": false,
                    "storageLocation": "default",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "typeName": {
                      "id": 165,
                      "name": "uint256",
                      "nodeType": "ElementaryTypeName",
                      "src": "1494:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "visibility": "internal"
                  },
                  {
                    "constant": false,
                    "id": 168,
                    "mutability": "mutable",
                    "name": "host",
                    "nameLocation": "1516:4:0",
                    "nodeType": "VariableDeclaration",
                    "scope": 206,
                    "src": "1508:12:0",
                    "stateVariable": false,
                    "storageLocation": "default",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    },
                    "typeName": {
                      "id": 167,
                      "name": "address",
                      "nodeType": "ElementaryTypeName",
                      "src": "1508:7:0",
                      "stateMutability": "nonpayable",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "visibility": "internal"
                  }
                ],
                "src": "1493:28:0"
              },
              "returnParameters": {
                "id": 172,
                "nodeType": "ParameterList",
                "parameters": [
                  {
                    "constant": false,
                    "id": 171,
                    "mutability": "mutable",
                    "name": "",
                    "nameLocation": "-1:-1:-1",
                    "nodeType": "VariableDeclaration",
                    "scope": 206,
                    "src": "1548:4:0",
                    "stateVariable": false,
                    "storageLocation": "default",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "typeName": {
                      "id": 170,
                      "name": "bool",
                      "nodeType": "ElementaryTypeName",
                      "src": "1548:4:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "visibility": "internal"
                  }
                ],
                "src": "1547:6:0"
              },
              "scope": 288,
              "src": "1474:293:0",
              "stateMutability": "payable",
              "virtual": false,
              "visibility": "external"
            },
            {
              "body": {
                "id": 260,
                "nodeType": "Block",
                "src": "1832:318:0",
                "statements": [
                  {
                    "assignments": [
                      212
                    ],
                    "declarations": [
                      {
                        "constant": false,
                        "id": 212,
                        "mutability": "mutable",
                        "name": "totalSendOut",
                        "nameLocation": "1850:12:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 260,
                        "src": "1842:20:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 211,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "1842:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "id": 214,
                    "initialValue": {
                      "hexValue": "30",
                      "id": 213,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "1865:1:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "nodeType": "VariableDeclarationStatement",
                    "src": "1842:24:0"
                  },
                  {
                    "body": {
                      "id": 241,
                      "nodeType": "Block",
                      "src": "1935:93:0",
                      "statements": [
                        {
                          "expression": {
                            "id": 239,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftHandSide": {
                              "id": 229,
                              "name": "totalSendOut",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 212,
                              "src": "1949:12:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "Assignment",
                            "operator": "=",
                            "rightHandSide": {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 238,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "id": 230,
                                "name": "totalSendOut",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 212,
                                "src": "1964:12:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "+",
                              "rightExpression": {
                                "expression": {
                                  "baseExpression": {
                                    "baseExpression": {
                                      "id": 231,
                                      "name": "activeRequests",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 54,
                                      "src": "1979:14:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_mapping$_t_address_$_t_array$_t_struct$_Request_$44_storage_$dyn_storage_$",
                                        "typeString": "mapping(address => struct LLMMarket.Request storage ref[] storage ref)"
                                      }
                                    },
                                    "id": 234,
                                    "indexExpression": {
                                      "expression": {
                                        "id": 232,
                                        "name": "msg",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": -15,
                                        "src": "1994:3:0",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_magic_message",
                                          "typeString": "msg"
                                        }
                                      },
                                      "id": 233,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "memberLocation": "1998:6:0",
                                      "memberName": "sender",
                                      "nodeType": "MemberAccess",
                                      "src": "1994:10:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_address",
                                        "typeString": "address"
                                      }
                                    },
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "nodeType": "IndexAccess",
                                    "src": "1979:26:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_array$_t_struct$_Request_$44_storage_$dyn_storage",
                                      "typeString": "struct LLMMarket.Request storage ref[] storage ref"
                                    }
                                  },
                                  "id": 236,
                                  "indexExpression": {
                                    "id": 235,
                                    "name": "i",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 216,
                                    "src": "2006:1:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "nodeType": "IndexAccess",
                                  "src": "1979:29:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_Request_$44_storage",
                                    "typeString": "struct LLMMarket.Request storage ref"
                                  }
                                },
                                "id": 237,
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberLocation": "2009:8:0",
                                "memberName": "feesPaid",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 43,
                                "src": "1979:38:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "src": "1964:53:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "src": "1949:68:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "id": 240,
                          "nodeType": "ExpressionStatement",
                          "src": "1949:68:0"
                        }
                      ]
                    },
                    "condition": {
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 225,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "id": 219,
                        "name": "i",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 216,
                        "src": "1892:1:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "<",
                      "rightExpression": {
                        "expression": {
                          "baseExpression": {
                            "id": 220,
                            "name": "activeRequests",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 54,
                            "src": "1896:14:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_array$_t_struct$_Request_$44_storage_$dyn_storage_$",
                              "typeString": "mapping(address => struct LLMMarket.Request storage ref[] storage ref)"
                            }
                          },
                          "id": 223,
                          "indexExpression": {
                            "expression": {
                              "id": 221,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -15,
                              "src": "1911:3:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 222,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "1915:6:0",
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "src": "1911:10:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "1896:26:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_struct$_Request_$44_storage_$dyn_storage",
                            "typeString": "struct LLMMarket.Request storage ref[] storage ref"
                          }
                        },
                        "id": 224,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "1923:6:0",
                        "memberName": "length",
                        "nodeType": "MemberAccess",
                        "src": "1896:33:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "src": "1892:37:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "id": 242,
                    "initializationExpression": {
                      "assignments": [
                        216
                      ],
                      "declarations": [
                        {
                          "constant": false,
                          "id": 216,
                          "mutability": "mutable",
                          "name": "i",
                          "nameLocation": "1885:1:0",
                          "nodeType": "VariableDeclaration",
                          "scope": 242,
                          "src": "1880:6:0",
                          "stateVariable": false,
                          "storageLocation": "default",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "typeName": {
                            "id": 215,
                            "name": "uint",
                            "nodeType": "ElementaryTypeName",
                            "src": "1880:4:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "visibility": "internal"
                        }
                      ],
                      "id": 218,
                      "initialValue": {
                        "hexValue": "30",
                        "id": 217,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1889:1:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      },
                      "nodeType": "VariableDeclarationStatement",
                      "src": "1880:10:0"
                    },
                    "isSimpleCounterLoop": true,
                    "loopExpression": {
                      "expression": {
                        "id": 227,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "UnaryOperation",
                        "operator": "++",
                        "prefix": false,
                        "src": "1931:3:0",
                        "subExpression": {
                          "id": 226,
                          "name": "i",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 216,
                          "src": "1931:1:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "id": 228,
                      "nodeType": "ExpressionStatement",
                      "src": "1931:3:0"
                    },
                    "nodeType": "ForStatement",
                    "src": "1876:152:0"
                  },
                  {
                    "expression": {
                      "id": 247,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "UnaryOperation",
                      "operator": "delete",
                      "prefix": true,
                      "src": "2037:33:0",
                      "subExpression": {
                        "baseExpression": {
                          "id": 243,
                          "name": "activeRequests",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 54,
                          "src": "2044:14:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_array$_t_struct$_Request_$44_storage_$dyn_storage_$",
                            "typeString": "mapping(address => struct LLMMarket.Request storage ref[] storage ref)"
                          }
                        },
                        "id": 246,
                        "indexExpression": {
                          "expression": {
                            "id": 244,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -15,
                            "src": "2059:3:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 245,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "2063:6:0",
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "2059:10:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": true,
                        "nodeType": "IndexAccess",
                        "src": "2044:26:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_struct$_Request_$44_storage_$dyn_storage",
                          "typeString": "struct LLMMarket.Request storage ref[] storage ref"
                        }
                      },
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$__$",
                        "typeString": "tuple()"
                      }
                    },
                    "id": 248,
                    "nodeType": "ExpressionStatement",
                    "src": "2037:33:0"
                  },
                  {
                    "expression": {
                      "arguments": [
                        {
                          "id": 255,
                          "name": "totalSendOut",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 212,
                          "src": "2109:12:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "expression": {
                          "arguments": [
                            {
                              "expression": {
                                "id": 251,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -15,
                                "src": "2088:3:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 252,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "2092:6:0",
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "src": "2088:10:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 250,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "2080:8:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_payable_$",
                              "typeString": "type(address payable)"
                            },
                            "typeName": {
                              "id": 249,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "2080:8:0",
                              "stateMutability": "payable",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 253,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2080:19:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "id": 254,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "2100:8:0",
                        "memberName": "transfer",
                        "nodeType": "MemberAccess",
                        "src": "2080:28:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_transfer_nonpayable$_t_uint256_$returns$__$",
                          "typeString": "function (uint256)"
                        }
                      },
                      "id": 256,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "2080:42:0",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$__$",
                        "typeString": "tuple()"
                      }
                    },
                    "id": 257,
                    "nodeType": "ExpressionStatement",
                    "src": "2080:42:0"
                  },
                  {
                    "expression": {
                      "hexValue": "74727565",
                      "id": 258,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "2139:4:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "true"
                    },
                    "functionReturnParameters": 210,
                    "id": 259,
                    "nodeType": "Return",
                    "src": "2132:11:0"
                  }
                ]
              },
              "functionSelector": "8417d0cb",
              "id": 261,
              "implemented": true,
              "kind": "function",
              "modifiers": [],
              "name": "clearListAndReedemFunds",
              "nameLocation": "1782:23:0",
              "nodeType": "FunctionDefinition",
              "parameters": {
                "id": 207,
                "nodeType": "ParameterList",
                "parameters": [],
                "src": "1805:2:0"
              },
              "returnParameters": {
                "id": 210,
                "nodeType": "ParameterList",
                "parameters": [
                  {
                    "constant": false,
                    "id": 209,
                    "mutability": "mutable",
                    "name": "",
                    "nameLocation": "-1:-1:-1",
                    "nodeType": "VariableDeclaration",
                    "scope": 261,
                    "src": "1826:4:0",
                    "stateVariable": false,
                    "storageLocation": "default",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "typeName": {
                      "id": 208,
                      "name": "bool",
                      "nodeType": "ElementaryTypeName",
                      "src": "1826:4:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "visibility": "internal"
                  }
                ],
                "src": "1825:6:0"
              },
              "scope": 288,
              "src": "1773:377:0",
              "stateMutability": "nonpayable",
              "virtual": false,
              "visibility": "external"
            },
            {
              "body": {
                "id": 274,
                "nodeType": "Block",
                "src": "2238:44:0",
                "statements": [
                  {
                    "expression": {
                      "baseExpression": {
                        "id": 270,
                        "name": "activeRequests",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 54,
                        "src": "2255:14:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_array$_t_struct$_Request_$44_storage_$dyn_storage_$",
                          "typeString": "mapping(address => struct LLMMarket.Request storage ref[] storage ref)"
                        }
                      },
                      "id": 272,
                      "indexExpression": {
                        "id": 271,
                        "name": "host",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 263,
                        "src": "2270:4:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "IndexAccess",
                      "src": "2255:20:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_struct$_Request_$44_storage_$dyn_storage",
                        "typeString": "struct LLMMarket.Request storage ref[] storage ref"
                      }
                    },
                    "functionReturnParameters": 269,
                    "id": 273,
                    "nodeType": "Return",
                    "src": "2248:27:0"
                  }
                ]
              },
              "functionSelector": "b0c0ef04",
              "id": 275,
              "implemented": true,
              "kind": "function",
              "modifiers": [],
              "name": "getActiveRequests",
              "nameLocation": "2165:17:0",
              "nodeType": "FunctionDefinition",
              "parameters": {
                "id": 264,
                "nodeType": "ParameterList",
                "parameters": [
                  {
                    "constant": false,
                    "id": 263,
                    "mutability": "mutable",
                    "name": "host",
                    "nameLocation": "2191:4:0",
                    "nodeType": "VariableDeclaration",
                    "scope": 275,
                    "src": "2183:12:0",
                    "stateVariable": false,
                    "storageLocation": "default",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    },
                    "typeName": {
                      "id": 262,
                      "name": "address",
                      "nodeType": "ElementaryTypeName",
                      "src": "2183:7:0",
                      "stateMutability": "nonpayable",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "visibility": "internal"
                  }
                ],
                "src": "2182:14:0"
              },
              "returnParameters": {
                "id": 269,
                "nodeType": "ParameterList",
                "parameters": [
                  {
                    "constant": false,
                    "id": 268,
                    "mutability": "mutable",
                    "name": "",
                    "nameLocation": "-1:-1:-1",
                    "nodeType": "VariableDeclaration",
                    "scope": 275,
                    "src": "2220:16:0",
                    "stateVariable": false,
                    "storageLocation": "memory",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_struct$_Request_$44_memory_ptr_$dyn_memory_ptr",
                      "typeString": "struct LLMMarket.Request[]"
                    },
                    "typeName": {
                      "baseType": {
                        "id": 266,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 265,
                          "name": "Request",
                          "nameLocations": [
                            "2220:7:0"
                          ],
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 44,
                          "src": "2220:7:0"
                        },
                        "referencedDeclaration": 44,
                        "src": "2220:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Request_$44_storage_ptr",
                          "typeString": "struct LLMMarket.Request"
                        }
                      },
                      "id": 267,
                      "nodeType": "ArrayTypeName",
                      "src": "2220:9:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_struct$_Request_$44_storage_$dyn_storage_ptr",
                        "typeString": "struct LLMMarket.Request[]"
                      }
                    },
                    "visibility": "internal"
                  }
                ],
                "src": "2219:18:0"
              },
              "scope": 288,
              "src": "2156:126:0",
              "stateMutability": "view",
              "virtual": false,
              "visibility": "external"
            },
            {
              "body": {
                "id": 286,
                "nodeType": "Block",
                "src": "2349:36:0",
                "statements": [
                  {
                    "expression": {
                      "baseExpression": {
                        "id": 282,
                        "name": "paused",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 58,
                        "src": "2366:6:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                          "typeString": "mapping(address => bool)"
                        }
                      },
                      "id": 284,
                      "indexExpression": {
                        "id": 283,
                        "name": "host",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 277,
                        "src": "2373:4:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "IndexAccess",
                      "src": "2366:12:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "functionReturnParameters": 281,
                    "id": 285,
                    "nodeType": "Return",
                    "src": "2359:19:0"
                  }
                ]
              },
              "functionSelector": "b55d9904",
              "id": 287,
              "implemented": true,
              "kind": "function",
              "modifiers": [],
              "name": "getPaused",
              "nameLocation": "2297:9:0",
              "nodeType": "FunctionDefinition",
              "parameters": {
                "id": 278,
                "nodeType": "ParameterList",
                "parameters": [
                  {
                    "constant": false,
                    "id": 277,
                    "mutability": "mutable",
                    "name": "host",
                    "nameLocation": "2315:4:0",
                    "nodeType": "VariableDeclaration",
                    "scope": 287,
                    "src": "2307:12:0",
                    "stateVariable": false,
                    "storageLocation": "default",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    },
                    "typeName": {
                      "id": 276,
                      "name": "address",
                      "nodeType": "ElementaryTypeName",
                      "src": "2307:7:0",
                      "stateMutability": "nonpayable",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "visibility": "internal"
                  }
                ],
                "src": "2306:14:0"
              },
              "returnParameters": {
                "id": 281,
                "nodeType": "ParameterList",
                "parameters": [
                  {
                    "constant": false,
                    "id": 280,
                    "mutability": "mutable",
                    "name": "",
                    "nameLocation": "-1:-1:-1",
                    "nodeType": "VariableDeclaration",
                    "scope": 287,
                    "src": "2344:4:0",
                    "stateVariable": false,
                    "storageLocation": "default",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "typeName": {
                      "id": 279,
                      "name": "bool",
                      "nodeType": "ElementaryTypeName",
                      "src": "2344:4:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "visibility": "internal"
                  }
                ],
                "src": "2343:6:0"
              },
              "scope": 288,
              "src": "2288:97:0",
              "stateMutability": "view",
              "virtual": false,
              "visibility": "external"
            }
          ],
          "scope": 289,
          "src": "33:2355:0",
          "usedErrors": [
            7
          ],
          "usedEvents": []
        }
      ],
      "src": "0:2388:0"
    },
    "bytecode": "608060405234801561001057600080fd5b50604051610e69380380610e6983398101604081905261002f91610054565b600080546001600160a01b0319166001600160a01b0392909216919091179055610084565b60006020828403121561006657600080fd5b81516001600160a01b038116811461007d57600080fd5b9392505050565b610dd6806100936000396000f3fe6080604052600436106100a65760003560e01c80638417d0cb116100645780638417d0cb146101a55780638456cb59146101ba578063b0c0ef04146101ea578063b55d990414610217578063c766c2c714610250578063dd6388fb1461027f57600080fd5b8062a266d9146100ab5780632e48152c146100d35780633797777114610103578063391d0b75146101235780633f4ba83a1461014557806344ddb94414610170575b600080fd5b6100be6100b936600461095d565b61029f565b60405190151581526020015b60405180910390f35b3480156100df57600080fd5b506100be6100ee366004610989565b60036020526000908152604090205460ff1681565b34801561010f57600080fd5b506100be61011e3660046109c1565b6103a8565b34801561012f57600080fd5b5061013861047a565b6040516100ca9190610ad2565b34801561015157600080fd5b50336000908152600360205260409020805460ff1916905560016100be565b34801561017c57600080fd5b5061019061018b366004610b5e565b61058e565b604080519283526020830191909152016100ca565b3480156101b157600080fd5b506100be6105ca565b3480156101c657600080fd5b506100be336000908152600360205260409020805460ff1916600190811790915590565b3480156101f657600080fd5b5061020a610205366004610989565b61067d565b6040516100ca9190610b88565b34801561022357600080fd5b506100be610232366004610989565b6001600160a01b031660009081526003602052604090205460ff1690565b34801561025c57600080fd5b5061027061026b366004610bd7565b610706565b6040516100ca93929190610bf0565b34801561028b57600080fd5b506100be61029a366004610989565b6107d2565b6001600160a01b03811660009081526003602052604081205460ff16156103015760405162461bcd60e51b815260206004820152601160248201527043757272656e746c79207061757365642160781b60448201526064015b60405180910390fd5b66038d7ea4c680003410156103505760405162461bcd60e51b8152602060048201526015602482015274496e73756666696369656e742066756e64696e672160581b60448201526064016102f8565b506001600160a01b038116600090815260026020818152604080842081518083019092528682523482840190815281546001818101845592875293909520915192909302019081559151918101919091555b92915050565b600080546001600160a01b031633146103d65760405163472511eb60e11b81523360048201526024016102f8565b604080516060810182528581526001600160a01b0385166020820152908101839052600180548082018255600091909152815160039091027fb10e2d527612073b26eecdfd717e6a320cf44b4afac2b0732d9fcbe2b7fa0cf60190819061043d9082610ca9565b506020820151600182810180546001600160a01b0319166001600160a01b0390931692909217909155604090920151600290910155949350505050565b60606001805480602002602001604051908101604052809291908181526020016000905b8282101561058557838290600052602060002090600302016040518060600160405290816000820180546104d190610c1e565b80601f01602080910402602001604051908101604052809291908181526020018280546104fd90610c1e565b801561054a5780601f1061051f5761010080835404028352916020019161054a565b820191906000526020600020905b81548152906001019060200180831161052d57829003601f168201915b50505091835250506001828101546001600160a01b03166020808401919091526002909301546040909201919091529183529201910161049e565b50505050905090565b600260205281600052604060002081815481106105aa57600080fd5b600091825260209091206002909102018054600190910154909250905082565b600080805b3360009081526002602052604090205481101561062e5733600090815260026020526040902080548290811061060757610607610d69565b906000526020600020906002020160010154826106249190610d7f565b91506001016105cf565b50336000908152600260205260408120610647916108b4565b604051339082156108fc029083906000818181858888f19350505050158015610674573d6000803e3d6000fd5b50600191505090565b6001600160a01b0381166000908152600260209081526040808320805482518185028101850190935280835260609492939192909184015b828210156106fb578382906000526020600020906002020160405180604001604052908160008201548152602001600182015481525050815260200190600101906106b5565b505050509050919050565b6001818154811061071657600080fd5b906000526020600020906003020160009150905080600001805461073990610c1e565b80601f016020809104026020016040519081016040528092919081815260200182805461076590610c1e565b80156107b25780601f10610787576101008083540402835291602001916107b2565b820191906000526020600020905b81548152906001019060200180831161079557829003601f168201915b50505050600183015460029093015491926001600160a01b031691905083565b600080546001600160a01b031633146108005760405163472511eb60e11b81523360048201526024016102f8565b60005b6001548110156108a957826001600160a01b03166001828154811061082a5761082a610d69565b60009182526020909120600160039092020101546001600160a01b0316036108a1576001818154811061085f5761085f610d69565b6000918252602082206003909102019061087982826108d8565b50600181810180546001600160a01b0319169055600060029092019190915591506108af9050565b600101610803565b50600190505b919050565b50805460008255600202906000526020600020908101906108d59190610912565b50565b5080546108e490610c1e565b6000825580601f106108f4575050565b601f0160209004906000526020600020908101906108d59190610931565b5b8082111561092d5760008082556001820155600201610913565b5090565b5b8082111561092d5760008155600101610932565b80356001600160a01b03811681146108af57600080fd5b6000806040838503121561097057600080fd5b8235915061098060208401610946565b90509250929050565b60006020828403121561099b57600080fd5b6109a482610946565b9392505050565b634e487b7160e01b600052604160045260246000fd5b6000806000606084860312156109d657600080fd5b833567ffffffffffffffff808211156109ee57600080fd5b818601915086601f830112610a0257600080fd5b813581811115610a1457610a146109ab565b604051601f8201601f19908116603f01168101908382118183101715610a3c57610a3c6109ab565b81604052828152896020848701011115610a5557600080fd5b826020860160208301376000602084830101528097505050505050610a7c60208501610946565b9150604084013590509250925092565b6000815180845260005b81811015610ab257602081850181015186830182015201610a96565b506000602082860101526020601f19601f83011685010191505092915050565b600060208083018184528085518083526040925060408601915060408160051b87010184880160005b83811015610b5057603f19898403018552815160608151818652610b2182870182610a8c565b838b01516001600160a01b0316878c015292890151958901959095525094870194925090860190600101610afb565b509098975050505050505050565b60008060408385031215610b7157600080fd5b610b7a83610946565b946020939093013593505050565b602080825282518282018190526000919060409081850190868401855b82811015610bca57815180518552860151868501529284019290850190600101610ba5565b5091979650505050505050565b600060208284031215610be957600080fd5b5035919050565b606081526000610c036060830186610a8c565b6001600160a01b039490941660208301525060400152919050565b600181811c90821680610c3257607f821691505b602082108103610c5257634e487b7160e01b600052602260045260246000fd5b50919050565b601f821115610ca4576000816000526020600020601f850160051c81016020861015610c815750805b601f850160051c820191505b81811015610ca057828155600101610c8d565b5050505b505050565b815167ffffffffffffffff811115610cc357610cc36109ab565b610cd781610cd18454610c1e565b84610c58565b602080601f831160018114610d0c5760008415610cf45750858301515b600019600386901b1c1916600185901b178555610ca0565b600085815260208120601f198616915b82811015610d3b57888601518255948401946001909101908401610d1c565b5085821015610d595787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b634e487b7160e01b600052603260045260246000fd5b808201808211156103a257634e487b7160e01b600052601160045260246000fdfea2646970667358221220eb250a57b001bc82f2883f7840df9530bfbaecf4ee65f5c8eb323abed2a20f3564736f6c63430008170033",
    "bytecodeSha1": "1a0db57582b791ade294a82e7d19189c281d7886",
    "compiler": {
      "evm_version": "istanbul",
      "optimizer": {
        "enabled": true,
        "runs": 200
      },
      "version": "0.8.23+commit.f704f362"
    },
    "contractName": "LLMMarket",
    "coverageMap": {
      "branches": {
        "0": {
          "LLMMarket.addRequest": {
            "18": [
              1572,
              1593,
              true
            ],
            "19": [
              1633,
              1652,
              true
            ]
          },
          "LLMMarket.removeHost": {
            "20": [
              998,
              1032,
              false
            ]
          }
        }
      },
      "statements": {
        "0": {
          "LLMMarket.addHost": {
            "6": [
              784,
              826
            ]
          },
          "LLMMarket.addRequest": {
            "3": [
              1564,
              1615
            ],
            "4": [
              1625,
              1678
            ],
            "5": [
              1688,
              1739
            ]
          },
          "LLMMarket.clearListAndReedemFunds": {
            "8": [
              1949,
              2017
            ],
            "9": [
              1931,
              1934
            ],
            "10": [
              2037,
              2070
            ],
            "11": [
              2080,
              2122
            ],
            "12": [
              2132,
              2143
            ]
          },
          "LLMMarket.getActiveRequests": {
            "13": [
              2248,
              2275
            ]
          },
          "LLMMarket.getHosts": {
            "7": [
              1446,
              1461
            ]
          },
          "LLMMarket.getPaused": {
            "2": [
              2359,
              2378
            ]
          },
          "LLMMarket.pause": {
            "1": [
              1206,
              1231
            ]
          },
          "LLMMarket.removeHost": {
            "14": [
              1051,
              1069
            ],
            "15": [
              1087,
              1098
            ],
            "16": [
              977,
              980
            ],
            "17": [
              1132,
              1143
            ]
          },
          "LLMMarket.unpause": {
            "0": [
              1317,
              1343
            ]
          }
        }
      }
    },
    "dependencies": [],
    "deployedBytecode": "6080604052600436106100a65760003560e01c80638417d0cb116100645780638417d0cb146101a55780638456cb59146101ba578063b0c0ef04146101ea578063b55d990414610217578063c766c2c714610250578063dd6388fb1461027f57600080fd5b8062a266d9146100ab5780632e48152c146100d35780633797777114610103578063391d0b75146101235780633f4ba83a1461014557806344ddb94414610170575b600080fd5b6100be6100b936600461095d565b61029f565b60405190151581526020015b60405180910390f35b3480156100df57600080fd5b506100be6100ee366004610989565b60036020526000908152604090205460ff1681565b34801561010f57600080fd5b506100be61011e3660046109c1565b6103a8565b34801561012f57600080fd5b5061013861047a565b6040516100ca9190610ad2565b34801561015157600080fd5b50336000908152600360205260409020805460ff1916905560016100be565b34801561017c57600080fd5b5061019061018b366004610b5e565b61058e565b604080519283526020830191909152016100ca565b3480156101b157600080fd5b506100be6105ca565b3480156101c657600080fd5b506100be336000908152600360205260409020805460ff1916600190811790915590565b3480156101f657600080fd5b5061020a610205366004610989565b61067d565b6040516100ca9190610b88565b34801561022357600080fd5b506100be610232366004610989565b6001600160a01b031660009081526003602052604090205460ff1690565b34801561025c57600080fd5b5061027061026b366004610bd7565b610706565b6040516100ca93929190610bf0565b34801561028b57600080fd5b506100be61029a366004610989565b6107d2565b6001600160a01b03811660009081526003602052604081205460ff16156103015760405162461bcd60e51b815260206004820152601160248201527043757272656e746c79207061757365642160781b60448201526064015b60405180910390fd5b66038d7ea4c680003410156103505760405162461bcd60e51b8152602060048201526015602482015274496e73756666696369656e742066756e64696e672160581b60448201526064016102f8565b506001600160a01b038116600090815260026020818152604080842081518083019092528682523482840190815281546001818101845592875293909520915192909302019081559151918101919091555b92915050565b600080546001600160a01b031633146103d65760405163472511eb60e11b81523360048201526024016102f8565b604080516060810182528581526001600160a01b0385166020820152908101839052600180548082018255600091909152815160039091027fb10e2d527612073b26eecdfd717e6a320cf44b4afac2b0732d9fcbe2b7fa0cf60190819061043d9082610ca9565b506020820151600182810180546001600160a01b0319166001600160a01b0390931692909217909155604090920151600290910155949350505050565b60606001805480602002602001604051908101604052809291908181526020016000905b8282101561058557838290600052602060002090600302016040518060600160405290816000820180546104d190610c1e565b80601f01602080910402602001604051908101604052809291908181526020018280546104fd90610c1e565b801561054a5780601f1061051f5761010080835404028352916020019161054a565b820191906000526020600020905b81548152906001019060200180831161052d57829003601f168201915b50505091835250506001828101546001600160a01b03166020808401919091526002909301546040909201919091529183529201910161049e565b50505050905090565b600260205281600052604060002081815481106105aa57600080fd5b600091825260209091206002909102018054600190910154909250905082565b600080805b3360009081526002602052604090205481101561062e5733600090815260026020526040902080548290811061060757610607610d69565b906000526020600020906002020160010154826106249190610d7f565b91506001016105cf565b50336000908152600260205260408120610647916108b4565b604051339082156108fc029083906000818181858888f19350505050158015610674573d6000803e3d6000fd5b50600191505090565b6001600160a01b0381166000908152600260209081526040808320805482518185028101850190935280835260609492939192909184015b828210156106fb578382906000526020600020906002020160405180604001604052908160008201548152602001600182015481525050815260200190600101906106b5565b505050509050919050565b6001818154811061071657600080fd5b906000526020600020906003020160009150905080600001805461073990610c1e565b80601f016020809104026020016040519081016040528092919081815260200182805461076590610c1e565b80156107b25780601f10610787576101008083540402835291602001916107b2565b820191906000526020600020905b81548152906001019060200180831161079557829003601f168201915b50505050600183015460029093015491926001600160a01b031691905083565b600080546001600160a01b031633146108005760405163472511eb60e11b81523360048201526024016102f8565b60005b6001548110156108a957826001600160a01b03166001828154811061082a5761082a610d69565b60009182526020909120600160039092020101546001600160a01b0316036108a1576001818154811061085f5761085f610d69565b6000918252602082206003909102019061087982826108d8565b50600181810180546001600160a01b0319169055600060029092019190915591506108af9050565b600101610803565b50600190505b919050565b50805460008255600202906000526020600020908101906108d59190610912565b50565b5080546108e490610c1e565b6000825580601f106108f4575050565b601f0160209004906000526020600020908101906108d59190610931565b5b8082111561092d5760008082556001820155600201610913565b5090565b5b8082111561092d5760008155600101610932565b80356001600160a01b03811681146108af57600080fd5b6000806040838503121561097057600080fd5b8235915061098060208401610946565b90509250929050565b60006020828403121561099b57600080fd5b6109a482610946565b9392505050565b634e487b7160e01b600052604160045260246000fd5b6000806000606084860312156109d657600080fd5b833567ffffffffffffffff808211156109ee57600080fd5b818601915086601f830112610a0257600080fd5b813581811115610a1457610a146109ab565b604051601f8201601f19908116603f01168101908382118183101715610a3c57610a3c6109ab565b81604052828152896020848701011115610a5557600080fd5b826020860160208301376000602084830101528097505050505050610a7c60208501610946565b9150604084013590509250925092565b6000815180845260005b81811015610ab257602081850181015186830182015201610a96565b506000602082860101526020601f19601f83011685010191505092915050565b600060208083018184528085518083526040925060408601915060408160051b87010184880160005b83811015610b5057603f19898403018552815160608151818652610b2182870182610a8c565b838b01516001600160a01b0316878c015292890151958901959095525094870194925090860190600101610afb565b509098975050505050505050565b60008060408385031215610b7157600080fd5b610b7a83610946565b946020939093013593505050565b602080825282518282018190526000919060409081850190868401855b82811015610bca57815180518552860151868501529284019290850190600101610ba5565b5091979650505050505050565b600060208284031215610be957600080fd5b5035919050565b606081526000610c036060830186610a8c565b6001600160a01b039490941660208301525060400152919050565b600181811c90821680610c3257607f821691505b602082108103610c5257634e487b7160e01b600052602260045260246000fd5b50919050565b601f821115610ca4576000816000526020600020601f850160051c81016020861015610c815750805b601f850160051c820191505b81811015610ca057828155600101610c8d565b5050505b505050565b815167ffffffffffffffff811115610cc357610cc36109ab565b610cd781610cd18454610c1e565b84610c58565b602080601f831160018114610d0c5760008415610cf45750858301515b600019600386901b1c1916600185901b178555610ca0565b600085815260208120601f198616915b82811015610d3b57888601518255948401946001909101908401610d1c565b5085821015610d595787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b634e487b7160e01b600052603260045260246000fd5b808201808211156103a257634e487b7160e01b600052601160045260246000fdfea2646970667358221220eb250a57b001bc82f2883f7840df9530bfbaecf4ee65f5c8eb323abed2a20f3564736f6c63430008170033",
    "deployedSourceMap": "33:2355:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1474:293;;;;;;:::i;:::-;;:::i;:::-;;;616:14:1;;609:22;591:41;;579:2;564:18;1474:293:0;;;;;;;;622:43;;;;;;;;;;-1:-1:-1;622:43:0;;;;;:::i;:::-;;;;;;;;;;;;;;;;672:182;;;;;;;;;;-1:-1:-1;672:182:0;;;;;:::i;:::-;;:::i;1377:91::-;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;1265:106::-;;;;;;;;;;-1:-1:-1;1324:10:0;1302:4;1317:18;;;:6;:18;;;;;:26;;-1:-1:-1;;1317:26:0;;;-1:-1:-1;1265:106:0;;560:56;;;;;;;;;;-1:-1:-1;560:56:0;;;;;:::i;:::-;;:::i;:::-;;;;4074:25:1;;;4130:2;4115:18;;4108:34;;;;4047:18;560:56:0;3900:248:1;1773:377:0;;;;;;;;;;;;;:::i;1156:103::-;;;;;;;;;;;;1213:10;1191:4;1206:18;;;:6;:18;;;;;:25;;-1:-1:-1;;1206:25:0;1227:4;1206:25;;;;;;1227:4;1156:103;2156:126;;;;;;;;;;-1:-1:-1;2156:126:0;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;2288:97::-;;;;;;;;;;-1:-1:-1;2288:97:0;;;;;:::i;:::-;-1:-1:-1;;;;;2366:12:0;2344:4;2366:12;;;:6;:12;;;;;;;;;2288:97;529:24;;;;;;;;;;-1:-1:-1;529:24:0;;;;;:::i;:::-;;:::i;:::-;;;;;;;;;:::i;860:290::-;;;;;;;;;;-1:-1:-1;860:290:0;;;;;:::i;:::-;;:::i;1474:293::-;-1:-1:-1;;;;;1572:12:0;;1548:4;1572:12;;;:6;:12;;;;;;;;:21;1564:51;;;;-1:-1:-1;;;1564:51:0;;5722:2:1;1564:51:0;;;5704:21:1;5761:2;5741:18;;;5734:30;-1:-1:-1;;;5780:18:1;;;5773:47;5837:18;;1564:51:0;;;;;;;;;1646:6;1633:9;:19;;1625:53;;;;-1:-1:-1;;;1625:53:0;;6068:2:1;1625:53:0;;;6050:21:1;6107:2;6087:18;;;6080:30;-1:-1:-1;;;6126:18:1;;;6119:51;6187:18;;1625:53:0;5866:345:1;1625:53:0;-1:-1:-1;;;;;;1688:20:0;;;;;;:14;:20;;;;;;;;1714:24;;;;;;;;;;;1728:9;1714:24;;;;;;1688:51;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1474:293;;;;;:::o;672:182::-;768:4;200:6;;-1:-1:-1;;;;;200:6:0;188:10;:18;185:78;;228:24;;-1:-1:-1;;;228:24:0;;241:10;228:24;;;6362:51:1;6335:18;;228:24:0;6216:203:1;185:78:0;798:27:::1;::::0;;::::1;::::0;::::1;::::0;;;;;-1:-1:-1;;;;;798:27:0;::::1;;::::0;::::1;::::0;;;;;;;784:8:::1;:42:::0;;;;::::1;::::0;;-1:-1:-1;784:42:0;;;;;;::::1;::::0;;::::1;::::0;::::1;::::0;;;::::1;::::0;;::::1;:::i;:::-;-1:-1:-1::0;784:42:0::1;::::0;::::1;::::0;::::1;::::0;;::::1;::::0;;-1:-1:-1;;;;;;784:42:0::1;-1:-1:-1::0;;;;;784:42:0;;::::1;::::0;;;::::1;::::0;;;::::1;::::0;;::::1;::::0;::::1;::::0;;::::1;::::0;;672:182;-1:-1:-1;;;;672:182:0:o;1377:91::-;1420:15;1453:8;1446:15;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;1446:15:0;;;-1:-1:-1;;1446:15:0;;;;;-1:-1:-1;;;;;1446:15:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1377:91;:::o;560:56::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;560:56:0;-1:-1:-1;560:56:0;:::o;1773:377::-;1826:4;;;1876:152;1911:10;1896:26;;;;:14;:26;;;;;:33;1892:37;;1876:152;;;1994:10;1979:26;;;;:14;:26;;;;;:29;;2006:1;;1979:29;;;;;;:::i;:::-;;;;;;;;;;;:38;;;1964:12;:53;;;;:::i;:::-;1949:68;-1:-1:-1;1931:3:0;;1876:152;;;-1:-1:-1;2059:10:0;2044:26;;;;:14;:26;;;;;2037:33;;;:::i;:::-;2080:42;;2088:10;;2080:42;;;;;2109:12;;2080:42;;;;2109:12;2088:10;2080:42;;;;;;;;;;;;;;;;;;;;;2139:4;2132:11;;;1773:377;:::o;2156:126::-;-1:-1:-1;;;;;2255:20:0;;;;;;:14;:20;;;;;;;;2248:27;;;;;;;;;;;;;;;;;2220:16;;2248:27;;2255:20;;2248:27;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2156:126;;;:::o;529:24::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;529:24:0;;;;;;;;;;;-1:-1:-1;;;;;529:24:0;;;-1:-1:-1;529:24:0;:::o;860:290::-;925:4;200:6;;-1:-1:-1;;;;;200:6:0;188:10;:18;185:78;;228:24;;-1:-1:-1;;;228:24:0;;241:10;228:24;;;6362:51:1;6335:18;;228:24:0;6216:203:1;185:78:0;945:9:::1;941:182;960:8;:15:::0;958:17;::::1;941:182;;;1025:7;-1:-1:-1::0;;;;;998:34:0::1;:8;1007:1;998:11;;;;;;;;:::i;:::-;;::::0;;;::::1;::::0;;;:23:::1;:11;::::0;;::::1;;:23;::::0;-1:-1:-1;;;;;998:23:0::1;:34:::0;995:118:::1;;1058:8;1067:1;1058:11;;;;;;;;:::i;:::-;;::::0;;;::::1;::::0;;::::1;::::0;;::::1;;::::0;1051:18:::1;1058:11:::0;;1051:18:::1;:::i;:::-;-1:-1:-1::0;1051:18:0::1;::::0;;::::1;::::0;;-1:-1:-1;;;;;;1051:18:0::1;::::0;;::::1;;::::0;;::::1;::::0;;;;;-1:-1:-1;1087:11:0::1;::::0;-1:-1:-1;1087:11:0::1;995:118;977:3;;941:182;;;;1139:4;1132:11;;272:1;860:290:::0;;;:::o;-1:-1:-1:-;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::o;:::-;;;;;;;:::i;:::-;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;14:173:1;82:20;;-1:-1:-1;;;;;131:31:1;;121:42;;111:70;;177:1;174;167:12;192:254;260:6;268;321:2;309:9;300:7;296:23;292:32;289:52;;;337:1;334;327:12;289:52;373:9;360:23;350:33;;402:38;436:2;425:9;421:18;402:38;:::i;:::-;392:48;;192:254;;;;;:::o;643:186::-;702:6;755:2;743:9;734:7;730:23;726:32;723:52;;;771:1;768;761:12;723:52;794:29;813:9;794:29;:::i;:::-;784:39;643:186;-1:-1:-1;;;643:186:1:o;834:127::-;895:10;890:3;886:20;883:1;876:31;926:4;923:1;916:15;950:4;947:1;940:15;966:1074;1053:6;1061;1069;1122:2;1110:9;1101:7;1097:23;1093:32;1090:52;;;1138:1;1135;1128:12;1090:52;1178:9;1165:23;1207:18;1248:2;1240:6;1237:14;1234:34;;;1264:1;1261;1254:12;1234:34;1302:6;1291:9;1287:22;1277:32;;1347:7;1340:4;1336:2;1332:13;1328:27;1318:55;;1369:1;1366;1359:12;1318:55;1405:2;1392:16;1427:2;1423;1420:10;1417:36;;;1433:18;;:::i;:::-;1508:2;1502:9;1476:2;1562:13;;-1:-1:-1;;1558:22:1;;;1582:2;1554:31;1550:40;1538:53;;;1606:18;;;1626:22;;;1603:46;1600:72;;;1652:18;;:::i;:::-;1692:10;1688:2;1681:22;1727:2;1719:6;1712:18;1769:7;1762:4;1757:2;1753;1749:11;1745:22;1742:35;1739:55;;;1790:1;1787;1780:12;1739:55;1850:2;1843:4;1839:2;1835:13;1828:4;1820:6;1816:17;1803:50;1897:1;1890:4;1885:2;1877:6;1873:15;1869:26;1862:37;1918:6;1908:16;;;;;;;1943:40;1977:4;1966:9;1962:20;1943:40;:::i;:::-;1933:50;;2030:2;2019:9;2015:18;2002:32;1992:42;;966:1074;;;;;:::o;2045:423::-;2087:3;2125:5;2119:12;2152:6;2147:3;2140:19;2177:1;2187:162;2201:6;2198:1;2195:13;2187:162;;;2263:4;2319:13;;;2315:22;;2309:29;2291:11;;;2287:20;;2280:59;2216:12;2187:162;;;2191:3;2394:1;2387:4;2378:6;2373:3;2369:16;2365:27;2358:38;2457:4;2450:2;2446:7;2441:2;2433:6;2429:15;2425:29;2420:3;2416:39;2412:50;2405:57;;;2045:423;;;;:::o;2473:1163::-;2659:4;2688:2;2728;2717:9;2713:18;2758:2;2747:9;2740:21;2781:6;2816;2810:13;2847:6;2839;2832:22;2873:2;2863:12;;2906:2;2895:9;2891:18;2884:25;;2968:2;2958:6;2955:1;2951:14;2940:9;2936:30;2932:39;3006:2;2998:6;2994:15;3027:1;3037:570;3051:6;3048:1;3045:13;3037:570;;;3144:2;3140:7;3128:9;3120:6;3116:22;3112:36;3107:3;3100:49;3178:6;3172:13;3208:4;3251:2;3245:9;3282:2;3274:6;3267:18;3312:48;3356:2;3348:6;3344:15;3330:12;3312:48;:::i;:::-;3407:11;;;3401:18;-1:-1:-1;;;;;3397:44:1;3380:15;;;3373:69;3485:11;;;3479:18;3462:15;;;3455:43;;;;-1:-1:-1;3585:12:1;;;;3298:62;-1:-1:-1;3550:15:1;;;;3438:1;3066:9;3037:570;;;-1:-1:-1;3624:6:1;;2473:1163;-1:-1:-1;;;;;;;;2473:1163:1:o;3641:254::-;3709:6;3717;3770:2;3758:9;3749:7;3745:23;3741:32;3738:52;;;3786:1;3783;3776:12;3738:52;3809:29;3828:9;3809:29;:::i;:::-;3799:39;3885:2;3870:18;;;;3857:32;;-1:-1:-1;;;3641:254:1:o;4153:784::-;4370:2;4422:21;;;4492:13;;4395:18;;;4514:22;;;4341:4;;4370:2;4555;;4573:18;;;;4614:15;;;4341:4;4657:254;4671:6;4668:1;4665:13;4657:254;;;4730:13;;4768:9;;4756:22;;4818:11;;4812:18;4798:12;;;4791:40;4851:12;;;;4886:15;;;;4693:1;4686:9;4657:254;;;-1:-1:-1;4928:3:1;;4153:784;-1:-1:-1;;;;;;;4153:784:1:o;4942:180::-;5001:6;5054:2;5042:9;5033:7;5029:23;5025:32;5022:52;;;5070:1;5067;5060:12;5022:52;-1:-1:-1;5093:23:1;;4942:180;-1:-1:-1;4942:180:1:o;5127:388::-;5332:2;5321:9;5314:21;5295:4;5352:45;5393:2;5382:9;5378:18;5370:6;5352:45;:::i;:::-;-1:-1:-1;;;;;5433:32:1;;;;5428:2;5413:18;;5406:60;-1:-1:-1;5497:2:1;5482:18;5475:34;5344:53;5127:388;-1:-1:-1;5127:388:1:o;6424:380::-;6503:1;6499:12;;;;6546;;;6567:61;;6621:4;6613:6;6609:17;6599:27;;6567:61;6674:2;6666:6;6663:14;6643:18;6640:38;6637:161;;6720:10;6715:3;6711:20;6708:1;6701:31;6755:4;6752:1;6745:15;6783:4;6780:1;6773:15;6637:161;;6424:380;;;:::o;6935:543::-;7037:2;7032:3;7029:11;7026:446;;;7073:1;7097:5;7094:1;7087:16;7141:4;7138:1;7128:18;7211:2;7199:10;7195:19;7192:1;7188:27;7182:4;7178:38;7247:4;7235:10;7232:20;7229:47;;;-1:-1:-1;7270:4:1;7229:47;7325:2;7320:3;7316:12;7313:1;7309:20;7303:4;7299:31;7289:41;;7380:82;7398:2;7391:5;7388:13;7380:82;;;7443:17;;;7424:1;7413:13;7380:82;;;7384:3;;;7026:446;6935:543;;;:::o;7654:1345::-;7780:3;7774:10;7807:18;7799:6;7796:30;7793:56;;;7829:18;;:::i;:::-;7858:97;7948:6;7908:38;7940:4;7934:11;7908:38;:::i;:::-;7902:4;7858:97;:::i;:::-;8010:4;;8067:2;8056:14;;8084:1;8079:663;;;;8786:1;8803:6;8800:89;;;-1:-1:-1;8855:19:1;;;8849:26;8800:89;-1:-1:-1;;7611:1:1;7607:11;;;7603:24;7599:29;7589:40;7635:1;7631:11;;;7586:57;8902:81;;8049:944;;8079:663;6882:1;6875:14;;;6919:4;6906:18;;-1:-1:-1;;8115:20:1;;;8233:236;8247:7;8244:1;8241:14;8233:236;;;8336:19;;;8330:26;8315:42;;8428:27;;;;8396:1;8384:14;;;;8263:19;;8233:236;;;8237:3;8497:6;8488:7;8485:19;8482:201;;;8558:19;;;8552:26;-1:-1:-1;;8641:1:1;8637:14;;;8653:3;8633:24;8629:37;8625:42;8610:58;8595:74;;8482:201;-1:-1:-1;;;;;8729:1:1;8713:14;;;8709:22;8696:36;;-1:-1:-1;7654:1345:1:o;9004:127::-;9065:10;9060:3;9056:20;9053:1;9046:31;9096:4;9093:1;9086:15;9120:4;9117:1;9110:15;9136:222;9201:9;;;9222:10;;;9219:133;;;9274:10;9269:3;9265:20;9262:1;9255:31;9309:4;9306:1;9299:15;9337:4;9334:1;9327:15",
    "language": "Solidity",
    "natspec": {
      "kind": "dev",
      "methods": {},
      "version": 1
    },
    "offset": [
      33,
      2388
    ],
    "opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0xA6 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x8417D0CB GT PUSH2 0x64 JUMPI DUP1 PUSH4 0x8417D0CB EQ PUSH2 0x1A5 JUMPI DUP1 PUSH4 0x8456CB59 EQ PUSH2 0x1BA JUMPI DUP1 PUSH4 0xB0C0EF04 EQ PUSH2 0x1EA JUMPI DUP1 PUSH4 0xB55D9904 EQ PUSH2 0x217 JUMPI DUP1 PUSH4 0xC766C2C7 EQ PUSH2 0x250 JUMPI DUP1 PUSH4 0xDD6388FB EQ PUSH2 0x27F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH3 0xA266D9 EQ PUSH2 0xAB JUMPI DUP1 PUSH4 0x2E48152C EQ PUSH2 0xD3 JUMPI DUP1 PUSH4 0x37977771 EQ PUSH2 0x103 JUMPI DUP1 PUSH4 0x391D0B75 EQ PUSH2 0x123 JUMPI DUP1 PUSH4 0x3F4BA83A EQ PUSH2 0x145 JUMPI DUP1 PUSH4 0x44DDB944 EQ PUSH2 0x170 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xBE PUSH2 0xB9 CALLDATASIZE PUSH1 0x4 PUSH2 0x95D JUMP JUMPDEST PUSH2 0x29F JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xDF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xBE PUSH2 0xEE CALLDATASIZE PUSH1 0x4 PUSH2 0x989 JUMP JUMPDEST PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x10F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xBE PUSH2 0x11E CALLDATASIZE PUSH1 0x4 PUSH2 0x9C1 JUMP JUMPDEST PUSH2 0x3A8 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x12F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x138 PUSH2 0x47A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xCA SWAP2 SWAP1 PUSH2 0xAD2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x151 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND SWAP1 SSTORE PUSH1 0x1 PUSH2 0xBE JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x17C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x190 PUSH2 0x18B CALLDATASIZE PUSH1 0x4 PUSH2 0xB5E JUMP JUMPDEST PUSH2 0x58E JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP3 DUP4 MSTORE PUSH1 0x20 DUP4 ADD SWAP2 SWAP1 SWAP2 MSTORE ADD PUSH2 0xCA JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1B1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xBE PUSH2 0x5CA JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1C6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xBE CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 SWAP1 DUP2 OR SWAP1 SWAP2 SSTORE SWAP1 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1F6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x20A PUSH2 0x205 CALLDATASIZE PUSH1 0x4 PUSH2 0x989 JUMP JUMPDEST PUSH2 0x67D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xCA SWAP2 SWAP1 PUSH2 0xB88 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x223 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xBE PUSH2 0x232 CALLDATASIZE PUSH1 0x4 PUSH2 0x989 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND SWAP1 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x25C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x270 PUSH2 0x26B CALLDATASIZE PUSH1 0x4 PUSH2 0xBD7 JUMP JUMPDEST PUSH2 0x706 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xCA SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0xBF0 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x28B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xBE PUSH2 0x29A CALLDATASIZE PUSH1 0x4 PUSH2 0x989 JUMP JUMPDEST PUSH2 0x7D2 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD PUSH1 0xFF AND ISZERO PUSH2 0x301 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x11 PUSH1 0x24 DUP3 ADD MSTORE PUSH17 0x43757272656E746C792070617573656421 PUSH1 0x78 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH7 0x38D7EA4C68000 CALLVALUE LT ISZERO PUSH2 0x350 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x15 PUSH1 0x24 DUP3 ADD MSTORE PUSH21 0x496E73756666696369656E742066756E64696E6721 PUSH1 0x58 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x2F8 JUMP JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP5 KECCAK256 DUP2 MLOAD DUP1 DUP4 ADD SWAP1 SWAP3 MSTORE DUP7 DUP3 MSTORE CALLVALUE DUP3 DUP5 ADD SWAP1 DUP2 MSTORE DUP2 SLOAD PUSH1 0x1 DUP2 DUP2 ADD DUP5 SSTORE SWAP3 DUP8 MSTORE SWAP4 SWAP1 SWAP6 KECCAK256 SWAP2 MLOAD SWAP3 SWAP1 SWAP4 MUL ADD SWAP1 DUP2 SSTORE SWAP2 MLOAD SWAP2 DUP2 ADD SWAP2 SWAP1 SWAP2 SSTORE JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x3D6 JUMPI PUSH1 0x40 MLOAD PUSH4 0x472511EB PUSH1 0xE1 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x2F8 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x60 DUP2 ADD DUP3 MSTORE DUP6 DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND PUSH1 0x20 DUP3 ADD MSTORE SWAP1 DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0x1 DUP1 SLOAD DUP1 DUP3 ADD DUP3 SSTORE PUSH1 0x0 SWAP2 SWAP1 SWAP2 MSTORE DUP2 MLOAD PUSH1 0x3 SWAP1 SWAP2 MUL PUSH32 0xB10E2D527612073B26EECDFD717E6A320CF44B4AFAC2B0732D9FCBE2B7FA0CF6 ADD SWAP1 DUP2 SWAP1 PUSH2 0x43D SWAP1 DUP3 PUSH2 0xCA9 JUMP JUMPDEST POP PUSH1 0x20 DUP3 ADD MLOAD PUSH1 0x1 DUP3 DUP2 ADD DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP4 AND SWAP3 SWAP1 SWAP3 OR SWAP1 SWAP2 SSTORE PUSH1 0x40 SWAP1 SWAP3 ADD MLOAD PUSH1 0x2 SWAP1 SWAP2 ADD SSTORE SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x1 DUP1 SLOAD DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 SWAP1 JUMPDEST DUP3 DUP3 LT ISZERO PUSH2 0x585 JUMPI DUP4 DUP3 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x3 MUL ADD PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE SWAP1 DUP2 PUSH1 0x0 DUP3 ADD DUP1 SLOAD PUSH2 0x4D1 SWAP1 PUSH2 0xC1E JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x4FD SWAP1 PUSH2 0xC1E JUMP JUMPDEST DUP1 ISZERO PUSH2 0x54A JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x51F JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x54A JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x52D JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP SWAP2 DUP4 MSTORE POP POP PUSH1 0x1 DUP3 DUP2 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x20 DUP1 DUP5 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x2 SWAP1 SWAP4 ADD SLOAD PUSH1 0x40 SWAP1 SWAP3 ADD SWAP2 SWAP1 SWAP2 MSTORE SWAP2 DUP4 MSTORE SWAP3 ADD SWAP2 ADD PUSH2 0x49E JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x2 PUSH1 0x20 MSTORE DUP2 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 DUP2 DUP2 SLOAD DUP2 LT PUSH2 0x5AA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 PUSH1 0x2 SWAP1 SWAP2 MUL ADD DUP1 SLOAD PUSH1 0x1 SWAP1 SWAP2 ADD SLOAD SWAP1 SWAP3 POP SWAP1 POP DUP3 JUMP JUMPDEST PUSH1 0x0 DUP1 DUP1 JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 LT ISZERO PUSH2 0x62E JUMPI CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD DUP3 SWAP1 DUP2 LT PUSH2 0x607 JUMPI PUSH2 0x607 PUSH2 0xD69 JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x2 MUL ADD PUSH1 0x1 ADD SLOAD DUP3 PUSH2 0x624 SWAP2 SWAP1 PUSH2 0xD7F JUMP JUMPDEST SWAP2 POP PUSH1 0x1 ADD PUSH2 0x5CF JUMP JUMPDEST POP CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 PUSH2 0x647 SWAP2 PUSH2 0x8B4 JUMP JUMPDEST PUSH1 0x40 MLOAD CALLER SWAP1 DUP3 ISZERO PUSH2 0x8FC MUL SWAP1 DUP4 SWAP1 PUSH1 0x0 DUP2 DUP2 DUP2 DUP6 DUP9 DUP9 CALL SWAP4 POP POP POP POP ISZERO DUP1 ISZERO PUSH2 0x674 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP PUSH1 0x1 SWAP2 POP POP SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP1 SLOAD DUP3 MLOAD DUP2 DUP6 MUL DUP2 ADD DUP6 ADD SWAP1 SWAP4 MSTORE DUP1 DUP4 MSTORE PUSH1 0x60 SWAP5 SWAP3 SWAP4 SWAP2 SWAP3 SWAP1 SWAP2 DUP5 ADD JUMPDEST DUP3 DUP3 LT ISZERO PUSH2 0x6FB JUMPI DUP4 DUP3 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x2 MUL ADD PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE SWAP1 DUP2 PUSH1 0x0 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x1 DUP3 ADD SLOAD DUP2 MSTORE POP POP DUP2 MSTORE PUSH1 0x20 ADD SWAP1 PUSH1 0x1 ADD SWAP1 PUSH2 0x6B5 JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 SLOAD DUP2 LT PUSH2 0x716 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x3 MUL ADD PUSH1 0x0 SWAP2 POP SWAP1 POP DUP1 PUSH1 0x0 ADD DUP1 SLOAD PUSH2 0x739 SWAP1 PUSH2 0xC1E JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x765 SWAP1 PUSH2 0xC1E JUMP JUMPDEST DUP1 ISZERO PUSH2 0x7B2 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x787 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x7B2 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x795 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP PUSH1 0x1 DUP4 ADD SLOAD PUSH1 0x2 SWAP1 SWAP4 ADD SLOAD SWAP2 SWAP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP2 SWAP1 POP DUP4 JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x800 JUMPI PUSH1 0x40 MLOAD PUSH4 0x472511EB PUSH1 0xE1 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x2F8 JUMP JUMPDEST PUSH1 0x0 JUMPDEST PUSH1 0x1 SLOAD DUP2 LT ISZERO PUSH2 0x8A9 JUMPI DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x1 DUP3 DUP2 SLOAD DUP2 LT PUSH2 0x82A JUMPI PUSH2 0x82A PUSH2 0xD69 JUMP JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 PUSH1 0x1 PUSH1 0x3 SWAP1 SWAP3 MUL ADD ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SUB PUSH2 0x8A1 JUMPI PUSH1 0x1 DUP2 DUP2 SLOAD DUP2 LT PUSH2 0x85F JUMPI PUSH2 0x85F PUSH2 0xD69 JUMP JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 DUP3 KECCAK256 PUSH1 0x3 SWAP1 SWAP2 MUL ADD SWAP1 PUSH2 0x879 DUP3 DUP3 PUSH2 0x8D8 JUMP JUMPDEST POP PUSH1 0x1 DUP2 DUP2 ADD DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND SWAP1 SSTORE PUSH1 0x0 PUSH1 0x2 SWAP1 SWAP3 ADD SWAP2 SWAP1 SWAP2 SSTORE SWAP2 POP PUSH2 0x8AF SWAP1 POP JUMP JUMPDEST PUSH1 0x1 ADD PUSH2 0x803 JUMP JUMPDEST POP PUSH1 0x1 SWAP1 POP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST POP DUP1 SLOAD PUSH1 0x0 DUP3 SSTORE PUSH1 0x2 MUL SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 DUP2 ADD SWAP1 PUSH2 0x8D5 SWAP2 SWAP1 PUSH2 0x912 JUMP JUMPDEST POP JUMP JUMPDEST POP DUP1 SLOAD PUSH2 0x8E4 SWAP1 PUSH2 0xC1E JUMP JUMPDEST PUSH1 0x0 DUP3 SSTORE DUP1 PUSH1 0x1F LT PUSH2 0x8F4 JUMPI POP POP JUMP JUMPDEST PUSH1 0x1F ADD PUSH1 0x20 SWAP1 DIV SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 DUP2 ADD SWAP1 PUSH2 0x8D5 SWAP2 SWAP1 PUSH2 0x931 JUMP JUMPDEST JUMPDEST DUP1 DUP3 GT ISZERO PUSH2 0x92D JUMPI PUSH1 0x0 DUP1 DUP3 SSTORE PUSH1 0x1 DUP3 ADD SSTORE PUSH1 0x2 ADD PUSH2 0x913 JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST JUMPDEST DUP1 DUP3 GT ISZERO PUSH2 0x92D JUMPI PUSH1 0x0 DUP2 SSTORE PUSH1 0x1 ADD PUSH2 0x932 JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x8AF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x970 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD SWAP2 POP PUSH2 0x980 PUSH1 0x20 DUP5 ADD PUSH2 0x946 JUMP JUMPDEST SWAP1 POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x99B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x9A4 DUP3 PUSH2 0x946 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x9D6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP4 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0x9EE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 DUP7 ADD SWAP2 POP DUP7 PUSH1 0x1F DUP4 ADD SLT PUSH2 0xA02 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD DUP2 DUP2 GT ISZERO PUSH2 0xA14 JUMPI PUSH2 0xA14 PUSH2 0x9AB JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1F DUP3 ADD PUSH1 0x1F NOT SWAP1 DUP2 AND PUSH1 0x3F ADD AND DUP2 ADD SWAP1 DUP4 DUP3 GT DUP2 DUP4 LT OR ISZERO PUSH2 0xA3C JUMPI PUSH2 0xA3C PUSH2 0x9AB JUMP JUMPDEST DUP2 PUSH1 0x40 MSTORE DUP3 DUP2 MSTORE DUP10 PUSH1 0x20 DUP5 DUP8 ADD ADD GT ISZERO PUSH2 0xA55 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 PUSH1 0x20 DUP7 ADD PUSH1 0x20 DUP4 ADD CALLDATACOPY PUSH1 0x0 PUSH1 0x20 DUP5 DUP4 ADD ADD MSTORE DUP1 SWAP8 POP POP POP POP POP POP PUSH2 0xA7C PUSH1 0x20 DUP6 ADD PUSH2 0x946 JUMP JUMPDEST SWAP2 POP PUSH1 0x40 DUP5 ADD CALLDATALOAD SWAP1 POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD DUP1 DUP5 MSTORE PUSH1 0x0 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0xAB2 JUMPI PUSH1 0x20 DUP2 DUP6 ADD DUP2 ADD MLOAD DUP7 DUP4 ADD DUP3 ADD MSTORE ADD PUSH2 0xA96 JUMP JUMPDEST POP PUSH1 0x0 PUSH1 0x20 DUP3 DUP7 ADD ADD MSTORE PUSH1 0x20 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND DUP6 ADD ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP1 DUP4 ADD DUP2 DUP5 MSTORE DUP1 DUP6 MLOAD DUP1 DUP4 MSTORE PUSH1 0x40 SWAP3 POP PUSH1 0x40 DUP7 ADD SWAP2 POP PUSH1 0x40 DUP2 PUSH1 0x5 SHL DUP8 ADD ADD DUP5 DUP9 ADD PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0xB50 JUMPI PUSH1 0x3F NOT DUP10 DUP5 SUB ADD DUP6 MSTORE DUP2 MLOAD PUSH1 0x60 DUP2 MLOAD DUP2 DUP7 MSTORE PUSH2 0xB21 DUP3 DUP8 ADD DUP3 PUSH2 0xA8C JUMP JUMPDEST DUP4 DUP12 ADD MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP8 DUP13 ADD MSTORE SWAP3 DUP10 ADD MLOAD SWAP6 DUP10 ADD SWAP6 SWAP1 SWAP6 MSTORE POP SWAP5 DUP8 ADD SWAP5 SWAP3 POP SWAP1 DUP7 ADD SWAP1 PUSH1 0x1 ADD PUSH2 0xAFB JUMP JUMPDEST POP SWAP1 SWAP9 SWAP8 POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xB71 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xB7A DUP4 PUSH2 0x946 JUMP JUMPDEST SWAP5 PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE DUP3 MLOAD DUP3 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x0 SWAP2 SWAP1 PUSH1 0x40 SWAP1 DUP2 DUP6 ADD SWAP1 DUP7 DUP5 ADD DUP6 JUMPDEST DUP3 DUP2 LT ISZERO PUSH2 0xBCA JUMPI DUP2 MLOAD DUP1 MLOAD DUP6 MSTORE DUP7 ADD MLOAD DUP7 DUP6 ADD MSTORE SWAP3 DUP5 ADD SWAP3 SWAP1 DUP6 ADD SWAP1 PUSH1 0x1 ADD PUSH2 0xBA5 JUMP JUMPDEST POP SWAP2 SWAP8 SWAP7 POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xBE9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x60 DUP2 MSTORE PUSH1 0x0 PUSH2 0xC03 PUSH1 0x60 DUP4 ADD DUP7 PUSH2 0xA8C JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP5 SWAP1 SWAP5 AND PUSH1 0x20 DUP4 ADD MSTORE POP PUSH1 0x40 ADD MSTORE SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH2 0xC32 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0xC52 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x1F DUP3 GT ISZERO PUSH2 0xCA4 JUMPI PUSH1 0x0 DUP2 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 PUSH1 0x1F DUP6 ADD PUSH1 0x5 SHR DUP2 ADD PUSH1 0x20 DUP7 LT ISZERO PUSH2 0xC81 JUMPI POP DUP1 JUMPDEST PUSH1 0x1F DUP6 ADD PUSH1 0x5 SHR DUP3 ADD SWAP2 POP JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0xCA0 JUMPI DUP3 DUP2 SSTORE PUSH1 0x1 ADD PUSH2 0xC8D JUMP JUMPDEST POP POP POP JUMPDEST POP POP POP JUMP JUMPDEST DUP2 MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0xCC3 JUMPI PUSH2 0xCC3 PUSH2 0x9AB JUMP JUMPDEST PUSH2 0xCD7 DUP2 PUSH2 0xCD1 DUP5 SLOAD PUSH2 0xC1E JUMP JUMPDEST DUP5 PUSH2 0xC58 JUMP JUMPDEST PUSH1 0x20 DUP1 PUSH1 0x1F DUP4 GT PUSH1 0x1 DUP2 EQ PUSH2 0xD0C JUMPI PUSH1 0x0 DUP5 ISZERO PUSH2 0xCF4 JUMPI POP DUP6 DUP4 ADD MLOAD JUMPDEST PUSH1 0x0 NOT PUSH1 0x3 DUP7 SWAP1 SHL SHR NOT AND PUSH1 0x1 DUP6 SWAP1 SHL OR DUP6 SSTORE PUSH2 0xCA0 JUMP JUMPDEST PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x20 DUP2 KECCAK256 PUSH1 0x1F NOT DUP7 AND SWAP2 JUMPDEST DUP3 DUP2 LT ISZERO PUSH2 0xD3B JUMPI DUP9 DUP7 ADD MLOAD DUP3 SSTORE SWAP5 DUP5 ADD SWAP5 PUSH1 0x1 SWAP1 SWAP2 ADD SWAP1 DUP5 ADD PUSH2 0xD1C JUMP JUMPDEST POP DUP6 DUP3 LT ISZERO PUSH2 0xD59 JUMPI DUP8 DUP6 ADD MLOAD PUSH1 0x0 NOT PUSH1 0x3 DUP9 SWAP1 SHL PUSH1 0xF8 AND SHR NOT AND DUP2 SSTORE JUMPDEST POP POP POP POP POP PUSH1 0x1 SWAP1 DUP2 SHL ADD SWAP1 SSTORE POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST DUP1 DUP3 ADD DUP1 DUP3 GT ISZERO PUSH2 0x3A2 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xEB 0x25 EXP JUMPI 0xB0 ADD 0xBC DUP3 CALLCODE DUP9 EXTCODEHASH PUSH25 0x40DF9530BFBAECF4EE65F5C8EB323ABED2A20F3564736F6C63 NUMBER STOP ADDMOD OR STOP CALLER ",
    "pcMap": {
      "0": {
        "offset": [
          33,
          2388
        ],
        "op": "PUSH1",
        "path": "0",
        "value": "0x80"
      },
      "2": {
        "fn": null,
        "offset": [
          33,
          2388
        ],
        "op": "PUSH1",
        "path": "0",
        "value": "0x40"
      },
      "4": {
        "fn": null,
        "offset": [
          33,
          2388
        ],
        "op": "MSTORE",
        "path": "0"
      },
      "5": {
        "fn": null,
        "offset": [
          33,
          2388
        ],
        "op": "PUSH1",
        "path": "0",
        "value": "0x4"
      },
      "7": {
        "fn": null,
        "offset": [
          33,
          2388
        ],
        "op": "CALLDATASIZE",
        "path": "0"
      },
      "8": {
        "fn": null,
        "offset": [
          33,
          2388
        ],
        "op": "LT",
        "path": "0"
      },
      "9": {
        "fn": null,
        "offset": [
          33,
          2388
        ],
        "op": "PUSH2",
        "path": "0",
        "value": "0xA6"
      },
      "12": {
        "fn": null,
        "offset": [
          33,
          2388
        ],
        "op": "JUMPI",
        "path": "0"
      },
      "13": {
        "fn": null,
        "offset": [
          33,
          2388
        ],
        "op": "PUSH1",
        "path": "0",
        "value": "0x0"
      },
      "15": {
        "fn": null,
        "offset": [
          33,
          2388
        ],
        "op": "CALLDATALOAD",
        "path": "0"
      },
      "16": {
        "fn": null,
        "offset": [
          33,
          2388
        ],
        "op": "PUSH1",
        "path": "0",
        "value": "0xE0"
      },
      "18": {
        "fn": null,
        "offset": [
          33,
          2388
        ],
        "op": "SHR",
        "path": "0"
      },
      "19": {
        "fn": null,
        "offset": [
          33,
          2388
        ],
        "op": "DUP1",
        "path": "0"
      },
      "20": {
        "fn": null,
        "offset": [
          33,
          2388
        ],
        "op": "PUSH4",
        "path": "0",
        "value": "0x8417D0CB"
      },
      "25": {
        "fn": null,
        "offset": [
          33,
          2388
        ],
        "op": "GT",
        "path": "0"
      },
      "26": {
        "fn": null,
        "offset": [
          33,
          2388
        ],
        "op": "PUSH2",
        "path": "0",
        "value": "0x64"
      },
      "29": {
        "fn": null,
        "offset": [
          33,
          2388
        ],
        "op": "JUMPI",
        "path": "0"
      },
      "30": {
        "fn": null,
        "offset": [
          33,
          2388
        ],
        "op": "DUP1",
        "path": "0"
      },
      "31": {
        "fn": null,
        "offset": [
          33,
          2388
        ],
        "op": "PUSH4",
        "path": "0",
        "value": "0x8417D0CB"
      },
      "36": {
        "fn": null,
        "offset": [
          33,
          2388
        ],
        "op": "EQ",
        "path": "0"
      },
      "37": {
        "fn": null,
        "offset": [
          33,
          2388
        ],
        "op": "PUSH2",
        "path": "0",
        "value": "0x1A5"
      },
      "40": {
        "fn": null,
        "offset": [
          33,
          2388
        ],
        "op": "JUMPI",
        "path": "0"
      },
      "41": {
        "fn": null,
        "offset": [
          33,
          2388
        ],
        "op": "DUP1",
        "path": "0"
      },
      "42": {
        "fn": null,
        "offset": [
          33,
          2388
        ],
        "op": "PUSH4",
        "path": "0",
        "value": "0x8456CB59"
      },
      "47": {
        "fn": null,
        "offset": [
          33,
          2388
        ],
        "op": "EQ",
        "path": "0"
      },
      "48": {
        "fn": null,
        "offset": [
          33,
          2388
        ],
        "op": "PUSH2",
        "path": "0",
        "value": "0x1BA"
      },
      "51": {
        "fn": null,
        "offset": [
          33,
          2388
        ],
        "op": "JUMPI",
        "path": "0"
      },
      "52": {
        "fn": null,
        "offset": [
          33,
          2388
        ],
        "op": "DUP1",
        "path": "0"
      },
      "53": {
        "fn": null,
        "offset": [
          33,
          2388
        ],
        "op": "PUSH4",
        "path": "0",
        "value": "0xB0C0EF04"
      },
      "58": {
        "fn": null,
        "offset": [
          33,
          2388
        ],
        "op": "EQ",
        "path": "0"
      },
      "59": {
        "fn": null,
        "offset": [
          33,
          2388
        ],
        "op": "PUSH2",
        "path": "0",
        "value": "0x1EA"
      },
      "62": {
        "fn": null,
        "offset": [
          33,
          2388
        ],
        "op": "JUMPI",
        "path": "0"
      },
      "63": {
        "fn": null,
        "offset": [
          33,
          2388
        ],
        "op": "DUP1",
        "path": "0"
      },
      "64": {
        "fn": null,
        "offset": [
          33,
          2388
        ],
        "op": "PUSH4",
        "path": "0",
        "value": "0xB55D9904"
      },
      "69": {
        "fn": null,
        "offset": [
          33,
          2388
        ],
        "op": "EQ",
        "path": "0"
      },
      "70": {
        "fn": null,
        "offset": [
          33,
          2388
        ],
        "op": "PUSH2",
        "path": "0",
        "value": "0x217"
      },
      "73": {
        "fn": null,
        "offset": [
          33,
          2388
        ],
        "op": "JUMPI",
        "path": "0"
      },
      "74": {
        "fn": null,
        "offset": [
          33,
          2388
        ],
        "op": "DUP1",
        "path": "0"
      },
      "75": {
        "fn": null,
        "offset": [
          33,
          2388
        ],
        "op": "PUSH4",
        "path": "0",
        "value": "0xC766C2C7"
      },
      "80": {
        "fn": null,
        "offset": [
          33,
          2388
        ],
        "op": "EQ",
        "path": "0"
      },
      "81": {
        "fn": null,
        "offset": [
          33,
          2388
        ],
        "op": "PUSH2",
        "path": "0",
        "value": "0x250"
      },
      "84": {
        "fn": null,
        "offset": [
          33,
          2388
        ],
        "op": "JUMPI",
        "path": "0"
      },
      "85": {
        "fn": null,
        "offset": [
          33,
          2388
        ],
        "op": "DUP1",
        "path": "0"
      },
      "86": {
        "fn": null,
        "offset": [
          33,
          2388
        ],
        "op": "PUSH4",
        "path": "0",
        "value": "0xDD6388FB"
      },
      "91": {
        "fn": null,
        "offset": [
          33,
          2388
        ],
        "op": "EQ",
        "path": "0"
      },
      "92": {
        "fn": null,
        "offset": [
          33,
          2388
        ],
        "op": "PUSH2",
        "path": "0",
        "value": "0x27F"
      },
      "95": {
        "fn": null,
        "offset": [
          33,
          2388
        ],
        "op": "JUMPI",
        "path": "0"
      },
      "96": {
        "fn": null,
        "offset": [
          33,
          2388
        ],
        "op": "PUSH1",
        "path": "0",
        "value": "0x0"
      },
      "98": {
        "fn": null,
        "offset": [
          33,
          2388
        ],
        "op": "DUP1",
        "path": "0"
      },
      "99": {
        "fn": null,
        "offset": [
          33,
          2388
        ],
        "op": "REVERT",
        "path": "0"
      },
      "100": {
        "fn": null,
        "offset": [
          33,
          2388
        ],
        "op": "JUMPDEST",
        "path": "0"
      },
      "101": {
        "fn": null,
        "offset": [
          33,
          2388
        ],
        "op": "DUP1",
        "path": "0"
      },
      "102": {
        "fn": null,
        "offset": [
          33,
          2388
        ],
        "op": "PUSH3",
        "path": "0",
        "value": "0xA266D9"
      },
      "106": {
        "fn": null,
        "offset": [
          33,
          2388
        ],
        "op": "EQ",
        "path": "0"
      },
      "107": {
        "fn": null,
        "offset": [
          33,
          2388
        ],
        "op": "PUSH2",
        "path": "0",
        "value": "0xAB"
      },
      "110": {
        "fn": null,
        "offset": [
          33,
          2388
        ],
        "op": "JUMPI",
        "path": "0"
      },
      "111": {
        "fn": null,
        "offset": [
          33,
          2388
        ],
        "op": "DUP1",
        "path": "0"
      },
      "112": {
        "fn": null,
        "offset": [
          33,
          2388
        ],
        "op": "PUSH4",
        "path": "0",
        "value": "0x2E48152C"
      },
      "117": {
        "fn": null,
        "offset": [
          33,
          2388
        ],
        "op": "EQ",
        "path": "0"
      },
      "118": {
        "fn": null,
        "offset": [
          33,
          2388
        ],
        "op": "PUSH2",
        "path": "0",
        "value": "0xD3"
      },
      "121": {
        "fn": null,
        "offset": [
          33,
          2388
        ],
        "op": "JUMPI",
        "path": "0"
      },
      "122": {
        "fn": null,
        "offset": [
          33,
          2388
        ],
        "op": "DUP1",
        "path": "0"
      },
      "123": {
        "fn": null,
        "offset": [
          33,
          2388
        ],
        "op": "PUSH4",
        "path": "0",
        "value": "0x37977771"
      },
      "128": {
        "fn": null,
        "offset": [
          33,
          2388
        ],
        "op": "EQ",
        "path": "0"
      },
      "129": {
        "fn": null,
        "offset": [
          33,
          2388
        ],
        "op": "PUSH2",
        "path": "0",
        "value": "0x103"
      },
      "132": {
        "fn": null,
        "offset": [
          33,
          2388
        ],
        "op": "JUMPI",
        "path": "0"
      },
      "133": {
        "fn": null,
        "offset": [
          33,
          2388
        ],
        "op": "DUP1",
        "path": "0"
      },
      "134": {
        "fn": null,
        "offset": [
          33,
          2388
        ],
        "op": "PUSH4",
        "path": "0",
        "value": "0x391D0B75"
      },
      "139": {
        "fn": null,
        "offset": [
          33,
          2388
        ],
        "op": "EQ",
        "path": "0"
      },
      "140": {
        "fn": null,
        "offset": [
          33,
          2388
        ],
        "op": "PUSH2",
        "path": "0",
        "value": "0x123"
      },
      "143": {
        "fn": null,
        "offset": [
          33,
          2388
        ],
        "op": "JUMPI",
        "path": "0"
      },
      "144": {
        "fn": null,
        "offset": [
          33,
          2388
        ],
        "op": "DUP1",
        "path": "0"
      },
      "145": {
        "fn": null,
        "offset": [
          33,
          2388
        ],
        "op": "PUSH4",
        "path": "0",
        "value": "0x3F4BA83A"
      },
      "150": {
        "fn": null,
        "offset": [
          33,
          2388
        ],
        "op": "EQ",
        "path": "0"
      },
      "151": {
        "fn": null,
        "offset": [
          33,
          2388
        ],
        "op": "PUSH2",
        "path": "0",
        "value": "0x145"
      },
      "154": {
        "fn": null,
        "offset": [
          33,
          2388
        ],
        "op": "JUMPI",
        "path": "0"
      },
      "155": {
        "fn": null,
        "offset": [
          33,
          2388
        ],
        "op": "DUP1",
        "path": "0"
      },
      "156": {
        "fn": null,
        "offset": [
          33,
          2388
        ],
        "op": "PUSH4",
        "path": "0",
        "value": "0x44DDB944"
      },
      "161": {
        "fn": null,
        "offset": [
          33,
          2388
        ],
        "op": "EQ",
        "path": "0"
      },
      "162": {
        "fn": null,
        "offset": [
          33,
          2388
        ],
        "op": "PUSH2",
        "path": "0",
        "value": "0x170"
      },
      "165": {
        "fn": null,
        "offset": [
          33,
          2388
        ],
        "op": "JUMPI",
        "path": "0"
      },
      "166": {
        "fn": null,
        "offset": [
          33,
          2388
        ],
        "op": "JUMPDEST",
        "path": "0"
      },
      "167": {
        "fn": null,
        "offset": [
          33,
          2388
        ],
        "op": "PUSH1",
        "path": "0",
        "value": "0x0"
      },
      "169": {
        "fn": null,
        "offset": [
          33,
          2388
        ],
        "op": "DUP1",
        "path": "0"
      },
      "170": {
        "first_revert": true,
        "fn": null,
        "offset": [
          33,
          2388
        ],
        "op": "REVERT",
        "path": "0"
      },
      "171": {
        "fn": "LLMMarket.addRequest",
        "offset": [
          1474,
          1767
        ],
        "op": "JUMPDEST",
        "path": "0"
      },
      "172": {
        "fn": "LLMMarket.addRequest",
        "offset": [
          1474,
          1767
        ],
        "op": "PUSH2",
        "path": "0",
        "value": "0xBE"
      },
      "175": {
        "fn": "LLMMarket.addRequest",
        "offset": [
          1474,
          1767
        ],
        "op": "PUSH2",
        "path": "0",
        "value": "0xB9"
      },
      "178": {
        "fn": "LLMMarket.addRequest",
        "offset": [
          1474,
          1767
        ],
        "op": "CALLDATASIZE",
        "path": "0"
      },
      "179": {
        "fn": "LLMMarket.addRequest",
        "offset": [
          1474,
          1767
        ],
        "op": "PUSH1",
        "path": "0",
        "value": "0x4"
      },
      "181": {
        "fn": "LLMMarket.addRequest",
        "offset": [
          1474,
          1767
        ],
        "op": "PUSH2",
        "path": "0",
        "value": "0x95D"
      },
      "184": {
        "fn": "LLMMarket.addRequest",
        "jump": "i",
        "offset": [
          1474,
          1767
        ],
        "op": "JUMP",
        "path": "0"
      },
      "185": {
        "fn": "LLMMarket.addRequest",
        "offset": [
          1474,
          1767
        ],
        "op": "JUMPDEST",
        "path": "0"
      },
      "186": {
        "fn": "LLMMarket.addRequest",
        "offset": [
          1474,
          1767
        ],
        "op": "PUSH2",
        "path": "0",
        "value": "0x29F"
      },
      "189": {
        "fn": "LLMMarket.addRequest",
        "jump": "i",
        "offset": [
          1474,
          1767
        ],
        "op": "JUMP",
        "path": "0"
      },
      "190": {
        "fn": "LLMMarket.addRequest",
        "offset": [
          1474,
          1767
        ],
        "op": "JUMPDEST",
        "path": "0"
      },
      "191": {
        "fn": "LLMMarket.addRequest",
        "offset": [
          1474,
          1767
        ],
        "op": "PUSH1",
        "path": "0",
        "value": "0x40"
      },
      "193": {
        "fn": "LLMMarket.addRequest",
        "offset": [
          1474,
          1767
        ],
        "op": "MLOAD",
        "path": "0"
      },
      "194": {
        "op": "SWAP1"
      },
      "195": {
        "op": "ISZERO"
      },
      "196": {
        "op": "ISZERO"
      },
      "197": {
        "op": "DUP2"
      },
      "198": {
        "op": "MSTORE"
      },
      "199": {
        "op": "PUSH1",
        "value": "0x20"
      },
      "201": {
        "op": "ADD"
      },
      "202": {
        "fn": "LLMMarket.addRequest",
        "offset": [
          1474,
          1767
        ],
        "op": "JUMPDEST",
        "path": "0"
      },
      "203": {
        "fn": "LLMMarket.addRequest",
        "offset": [
          1474,
          1767
        ],
        "op": "PUSH1",
        "path": "0",
        "value": "0x40"
      },
      "205": {
        "fn": "LLMMarket.addRequest",
        "offset": [
          1474,
          1767
        ],
        "op": "MLOAD",
        "path": "0"
      },
      "206": {
        "fn": "LLMMarket.addRequest",
        "offset": [
          1474,
          1767
        ],
        "op": "DUP1",
        "path": "0"
      },
      "207": {
        "fn": "LLMMarket.addRequest",
        "offset": [
          1474,
          1767
        ],
        "op": "SWAP2",
        "path": "0"
      },
      "208": {
        "fn": "LLMMarket.addRequest",
        "offset": [
          1474,
          1767
        ],
        "op": "SUB",
        "path": "0"
      },
      "209": {
        "fn": "LLMMarket.addRequest",
        "offset": [
          1474,
          1767
        ],
        "op": "SWAP1",
        "path": "0"
      },
      "210": {
        "fn": "LLMMarket.addRequest",
        "offset": [
          1474,
          1767
        ],
        "op": "RETURN",
        "path": "0"
      },
      "211": {
        "offset": [
          622,
          665
        ],
        "op": "JUMPDEST",
        "path": "0"
      },
      "212": {
        "fn": "LLMMarket.addRequest",
        "offset": [
          622,
          665
        ],
        "op": "CALLVALUE",
        "path": "0"
      },
      "213": {
        "fn": "LLMMarket.addRequest",
        "offset": [
          622,
          665
        ],
        "op": "DUP1",
        "path": "0"
      },
      "214": {
        "fn": "LLMMarket.addRequest",
        "offset": [
          622,
          665
        ],
        "op": "ISZERO",
        "path": "0"
      },
      "215": {
        "fn": "LLMMarket.addRequest",
        "offset": [
          622,
          665
        ],
        "op": "PUSH2",
        "path": "0",
        "value": "0xDF"
      },
      "218": {
        "fn": "LLMMarket.addRequest",
        "offset": [
          622,
          665
        ],
        "op": "JUMPI",
        "path": "0"
      },
      "219": {
        "fn": "LLMMarket.addRequest",
        "offset": [
          622,
          665
        ],
        "op": "PUSH1",
        "path": "0",
        "value": "0x0"
      },
      "221": {
        "fn": "LLMMarket.addRequest",
        "offset": [
          622,
          665
        ],
        "op": "DUP1",
        "path": "0"
      },
      "222": {
        "fn": "LLMMarket.addRequest",
        "offset": [
          622,
          665
        ],
        "op": "REVERT",
        "path": "0"
      },
      "223": {
        "fn": "LLMMarket.addRequest",
        "offset": [
          622,
          665
        ],
        "op": "JUMPDEST",
        "path": "0"
      },
      "224": {
        "op": "POP"
      },
      "225": {
        "offset": [
          622,
          665
        ],
        "op": "PUSH2",
        "path": "0",
        "value": "0xBE"
      },
      "228": {
        "fn": "LLMMarket.addRequest",
        "offset": [
          622,
          665
        ],
        "op": "PUSH2",
        "path": "0",
        "value": "0xEE"
      },
      "231": {
        "fn": "LLMMarket.addRequest",
        "offset": [
          622,
          665
        ],
        "op": "CALLDATASIZE",
        "path": "0"
      },
      "232": {
        "fn": "LLMMarket.addRequest",
        "offset": [
          622,
          665
        ],
        "op": "PUSH1",
        "path": "0",
        "value": "0x4"
      },
      "234": {
        "fn": "LLMMarket.addRequest",
        "offset": [
          622,
          665
        ],
        "op": "PUSH2",
        "path": "0",
        "value": "0x989"
      },
      "237": {
        "fn": "LLMMarket.addRequest",
        "jump": "i",
        "offset": [
          622,
          665
        ],
        "op": "JUMP",
        "path": "0"
      },
      "238": {
        "fn": "LLMMarket.addRequest",
        "offset": [
          622,
          665
        ],
        "op": "JUMPDEST",
        "path": "0"
      },
      "239": {
        "fn": "LLMMarket.addRequest",
        "offset": [
          622,
          665
        ],
        "op": "PUSH1",
        "path": "0",
        "value": "0x3"
      },
      "241": {
        "fn": "LLMMarket.addRequest",
        "offset": [
          622,
          665
        ],
        "op": "PUSH1",
        "path": "0",
        "value": "0x20"
      },
      "243": {
        "fn": "LLMMarket.addRequest",
        "offset": [
          622,
          665
        ],
        "op": "MSTORE",
        "path": "0"
      },
      "244": {
        "fn": "LLMMarket.addRequest",
        "offset": [
          622,
          665
        ],
        "op": "PUSH1",
        "path": "0",
        "value": "0x0"
      },
      "246": {
        "fn": "LLMMarket.addRequest",
        "offset": [
          622,
          665
        ],
        "op": "SWAP1",
        "path": "0"
      },
      "247": {
        "fn": "LLMMarket.addRequest",
        "offset": [
          622,
          665
        ],
        "op": "DUP2",
        "path": "0"
      },
      "248": {
        "fn": "LLMMarket.addRequest",
        "offset": [
          622,
          665
        ],
        "op": "MSTORE",
        "path": "0"
      },
      "249": {
        "fn": "LLMMarket.addRequest",
        "offset": [
          622,
          665
        ],
        "op": "PUSH1",
        "path": "0",
        "value": "0x40"
      },
      "251": {
        "fn": "LLMMarket.addRequest",
        "offset": [
          622,
          665
        ],
        "op": "SWAP1",
        "path": "0"
      },
      "252": {
        "fn": "LLMMarket.addRequest",
        "offset": [
          622,
          665
        ],
        "op": "KECCAK256",
        "path": "0"
      },
      "253": {
        "fn": "LLMMarket.addRequest",
        "offset": [
          622,
          665
        ],
        "op": "SLOAD",
        "path": "0"
      },
      "254": {
        "fn": "LLMMarket.addRequest",
        "offset": [
          622,
          665
        ],
        "op": "PUSH1",
        "path": "0",
        "value": "0xFF"
      },
      "256": {
        "fn": "LLMMarket.addRequest",
        "offset": [
          622,
          665
        ],
        "op": "AND",
        "path": "0"
      },
      "257": {
        "fn": "LLMMarket.addRequest",
        "offset": [
          622,
          665
        ],
        "op": "DUP2",
        "path": "0"
      },
      "258": {
        "fn": "LLMMarket.addRequest",
        "offset": [
          622,
          665
        ],
        "op": "JUMP",
        "path": "0"
      },
      "259": {
        "fn": "LLMMarket.addHost",
        "offset": [
          672,
          854
        ],
        "op": "JUMPDEST",
        "path": "0"
      },
      "260": {
        "fn": "LLMMarket.addHost",
        "offset": [
          672,
          854
        ],
        "op": "CALLVALUE",
        "path": "0"
      },
      "261": {
        "fn": "LLMMarket.addHost",
        "offset": [
          672,
          854
        ],
        "op": "DUP1",
        "path": "0"
      },
      "262": {
        "fn": "LLMMarket.addHost",
        "offset": [
          672,
          854
        ],
        "op": "ISZERO",
        "path": "0"
      },
      "263": {
        "fn": "LLMMarket.addHost",
        "offset": [
          672,
          854
        ],
        "op": "PUSH2",
        "path": "0",
        "value": "0x10F"
      },
      "266": {
        "fn": "LLMMarket.addHost",
        "offset": [
          672,
          854
        ],
        "op": "JUMPI",
        "path": "0"
      },
      "267": {
        "fn": "LLMMarket.addHost",
        "offset": [
          672,
          854
        ],
        "op": "PUSH1",
        "path": "0",
        "value": "0x0"
      },
      "269": {
        "fn": "LLMMarket.addHost",
        "offset": [
          672,
          854
        ],
        "op": "DUP1",
        "path": "0"
      },
      "270": {
        "fn": "LLMMarket.addHost",
        "offset": [
          672,
          854
        ],
        "op": "REVERT",
        "path": "0"
      },
      "271": {
        "fn": "LLMMarket.addHost",
        "offset": [
          672,
          854
        ],
        "op": "JUMPDEST",
        "path": "0"
      },
      "272": {
        "op": "POP"
      },
      "273": {
        "fn": "LLMMarket.addHost",
        "offset": [
          672,
          854
        ],
        "op": "PUSH2",
        "path": "0",
        "value": "0xBE"
      },
      "276": {
        "fn": "LLMMarket.addHost",
        "offset": [
          672,
          854
        ],
        "op": "PUSH2",
        "path": "0",
        "value": "0x11E"
      },
      "279": {
        "fn": "LLMMarket.addHost",
        "offset": [
          672,
          854
        ],
        "op": "CALLDATASIZE",
        "path": "0"
      },
      "280": {
        "fn": "LLMMarket.addHost",
        "offset": [
          672,
          854
        ],
        "op": "PUSH1",
        "path": "0",
        "value": "0x4"
      },
      "282": {
        "fn": "LLMMarket.addHost",
        "offset": [
          672,
          854
        ],
        "op": "PUSH2",
        "path": "0",
        "value": "0x9C1"
      },
      "285": {
        "fn": "LLMMarket.addHost",
        "jump": "i",
        "offset": [
          672,
          854
        ],
        "op": "JUMP",
        "path": "0"
      },
      "286": {
        "fn": "LLMMarket.addHost",
        "offset": [
          672,
          854
        ],
        "op": "JUMPDEST",
        "path": "0"
      },
      "287": {
        "fn": "LLMMarket.addHost",
        "offset": [
          672,
          854
        ],
        "op": "PUSH2",
        "path": "0",
        "value": "0x3A8"
      },
      "290": {
        "fn": "LLMMarket.addHost",
        "jump": "i",
        "offset": [
          672,
          854
        ],
        "op": "JUMP",
        "path": "0"
      },
      "291": {
        "fn": "LLMMarket.getHosts",
        "offset": [
          1377,
          1468
        ],
        "op": "JUMPDEST",
        "path": "0"
      },
      "292": {
        "fn": "LLMMarket.getHosts",
        "offset": [
          1377,
          1468
        ],
        "op": "CALLVALUE",
        "path": "0"
      },
      "293": {
        "fn": "LLMMarket.getHosts",
        "offset": [
          1377,
          1468
        ],
        "op": "DUP1",
        "path": "0"
      },
      "294": {
        "fn": "LLMMarket.getHosts",
        "offset": [
          1377,
          1468
        ],
        "op": "ISZERO",
        "path": "0"
      },
      "295": {
        "fn": "LLMMarket.getHosts",
        "offset": [
          1377,
          1468
        ],
        "op": "PUSH2",
        "path": "0",
        "value": "0x12F"
      },
      "298": {
        "fn": "LLMMarket.getHosts",
        "offset": [
          1377,
          1468
        ],
        "op": "JUMPI",
        "path": "0"
      },
      "299": {
        "fn": "LLMMarket.getHosts",
        "offset": [
          1377,
          1468
        ],
        "op": "PUSH1",
        "path": "0",
        "value": "0x0"
      },
      "301": {
        "fn": "LLMMarket.getHosts",
        "offset": [
          1377,
          1468
        ],
        "op": "DUP1",
        "path": "0"
      },
      "302": {
        "fn": "LLMMarket.getHosts",
        "offset": [
          1377,
          1468
        ],
        "op": "REVERT",
        "path": "0"
      },
      "303": {
        "fn": "LLMMarket.getHosts",
        "offset": [
          1377,
          1468
        ],
        "op": "JUMPDEST",
        "path": "0"
      },
      "304": {
        "fn": "LLMMarket.getHosts",
        "offset": [
          1377,
          1468
        ],
        "op": "POP",
        "path": "0"
      },
      "305": {
        "fn": "LLMMarket.getHosts",
        "offset": [
          1377,
          1468
        ],
        "op": "PUSH2",
        "path": "0",
        "value": "0x138"
      },
      "308": {
        "fn": "LLMMarket.getHosts",
        "offset": [
          1377,
          1468
        ],
        "op": "PUSH2",
        "path": "0",
        "value": "0x47A"
      },
      "311": {
        "fn": "LLMMarket.getHosts",
        "jump": "i",
        "offset": [
          1377,
          1468
        ],
        "op": "JUMP",
        "path": "0"
      },
      "312": {
        "fn": "LLMMarket.getHosts",
        "offset": [
          1377,
          1468
        ],
        "op": "JUMPDEST",
        "path": "0"
      },
      "313": {
        "fn": "LLMMarket.getHosts",
        "offset": [
          1377,
          1468
        ],
        "op": "PUSH1",
        "path": "0",
        "value": "0x40"
      },
      "315": {
        "fn": "LLMMarket.getHosts",
        "offset": [
          1377,
          1468
        ],
        "op": "MLOAD",
        "path": "0"
      },
      "316": {
        "fn": "LLMMarket.getHosts",
        "offset": [
          1377,
          1468
        ],
        "op": "PUSH2",
        "path": "0",
        "value": "0xCA"
      },
      "319": {
        "fn": "LLMMarket.getHosts",
        "offset": [
          1377,
          1468
        ],
        "op": "SWAP2",
        "path": "0"
      },
      "320": {
        "fn": "LLMMarket.getHosts",
        "offset": [
          1377,
          1468
        ],
        "op": "SWAP1",
        "path": "0"
      },
      "321": {
        "fn": "LLMMarket.getHosts",
        "offset": [
          1377,
          1468
        ],
        "op": "PUSH2",
        "path": "0",
        "value": "0xAD2"
      },
      "324": {
        "fn": "LLMMarket.getHosts",
        "jump": "i",
        "offset": [
          1377,
          1468
        ],
        "op": "JUMP",
        "path": "0"
      },
      "325": {
        "fn": "LLMMarket.unpause",
        "offset": [
          1265,
          1371
        ],
        "op": "JUMPDEST",
        "path": "0"
      },
      "326": {
        "fn": "LLMMarket.unpause",
        "offset": [
          1265,
          1371
        ],
        "op": "CALLVALUE",
        "path": "0"
      },
      "327": {
        "fn": "LLMMarket.unpause",
        "offset": [
          1265,
          1371
        ],
        "op": "DUP1",
        "path": "0"
      },
      "328": {
        "fn": "LLMMarket.unpause",
        "offset": [
          1265,
          1371
        ],
        "op": "ISZERO",
        "path": "0"
      },
      "329": {
        "fn": "LLMMarket.unpause",
        "offset": [
          1265,
          1371
        ],
        "op": "PUSH2",
        "path": "0",
        "value": "0x151"
      },
      "332": {
        "fn": "LLMMarket.unpause",
        "offset": [
          1265,
          1371
        ],
        "op": "JUMPI",
        "path": "0"
      },
      "333": {
        "fn": "LLMMarket.unpause",
        "offset": [
          1265,
          1371
        ],
        "op": "PUSH1",
        "path": "0",
        "value": "0x0"
      },
      "335": {
        "fn": "LLMMarket.unpause",
        "offset": [
          1265,
          1371
        ],
        "op": "DUP1",
        "path": "0"
      },
      "336": {
        "fn": "LLMMarket.unpause",
        "offset": [
          1265,
          1371
        ],
        "op": "REVERT",
        "path": "0"
      },
      "337": {
        "fn": "LLMMarket.unpause",
        "offset": [
          1265,
          1371
        ],
        "op": "JUMPDEST",
        "path": "0"
      },
      "338": {
        "op": "POP"
      },
      "339": {
        "fn": "LLMMarket.unpause",
        "offset": [
          1324,
          1334
        ],
        "op": "CALLER",
        "path": "0",
        "statement": 0
      },
      "340": {
        "fn": "LLMMarket.unpause",
        "offset": [
          1302,
          1306
        ],
        "op": "PUSH1",
        "path": "0",
        "value": "0x0"
      },
      "342": {
        "fn": "LLMMarket.unpause",
        "offset": [
          1317,
          1335
        ],
        "op": "SWAP1",
        "path": "0"
      },
      "343": {
        "fn": "LLMMarket.unpause",
        "offset": [
          1317,
          1335
        ],
        "op": "DUP2",
        "path": "0"
      },
      "344": {
        "fn": "LLMMarket.unpause",
        "offset": [
          1317,
          1335
        ],
        "op": "MSTORE",
        "path": "0"
      },
      "345": {
        "fn": "LLMMarket.unpause",
        "offset": [
          1317,
          1323
        ],
        "op": "PUSH1",
        "path": "0",
        "value": "0x3"
      },
      "347": {
        "fn": "LLMMarket.unpause",
        "offset": [
          1317,
          1335
        ],
        "op": "PUSH1",
        "path": "0",
        "value": "0x20"
      },
      "349": {
        "fn": "LLMMarket.unpause",
        "offset": [
          1317,
          1335
        ],
        "op": "MSTORE",
        "path": "0"
      },
      "350": {
        "fn": "LLMMarket.unpause",
        "offset": [
          1317,
          1335
        ],
        "op": "PUSH1",
        "path": "0",
        "value": "0x40"
      },
      "352": {
        "fn": "LLMMarket.unpause",
        "offset": [
          1317,
          1335
        ],
        "op": "SWAP1",
        "path": "0"
      },
      "353": {
        "fn": "LLMMarket.unpause",
        "offset": [
          1317,
          1335
        ],
        "op": "KECCAK256",
        "path": "0"
      },
      "354": {
        "fn": "LLMMarket.unpause",
        "offset": [
          1317,
          1343
        ],
        "op": "DUP1",
        "path": "0"
      },
      "355": {
        "fn": "LLMMarket.unpause",
        "offset": [
          1317,
          1343
        ],
        "op": "SLOAD",
        "path": "0"
      },
      "356": {
        "op": "PUSH1",
        "value": "0xFF"
      },
      "358": {
        "op": "NOT"
      },
      "359": {
        "fn": "LLMMarket.unpause",
        "offset": [
          1317,
          1343
        ],
        "op": "AND",
        "path": "0"
      },
      "360": {
        "fn": "LLMMarket.unpause",
        "offset": [
          1317,
          1343
        ],
        "op": "SWAP1",
        "path": "0"
      },
      "361": {
        "fn": "LLMMarket.unpause",
        "offset": [
          1317,
          1343
        ],
        "op": "SSTORE",
        "path": "0"
      },
      "362": {
        "op": "PUSH1",
        "value": "0x1"
      },
      "364": {
        "fn": "LLMMarket.unpause",
        "offset": [
          1265,
          1371
        ],
        "op": "PUSH2",
        "path": "0",
        "value": "0xBE"
      },
      "367": {
        "fn": "LLMMarket.unpause",
        "offset": [
          1265,
          1371
        ],
        "op": "JUMP",
        "path": "0"
      },
      "368": {
        "offset": [
          560,
          616
        ],
        "op": "JUMPDEST",
        "path": "0"
      },
      "369": {
        "fn": "LLMMarket.unpause",
        "offset": [
          560,
          616
        ],
        "op": "CALLVALUE",
        "path": "0"
      },
      "370": {
        "fn": "LLMMarket.unpause",
        "offset": [
          560,
          616
        ],
        "op": "DUP1",
        "path": "0"
      },
      "371": {
        "fn": "LLMMarket.unpause",
        "offset": [
          560,
          616
        ],
        "op": "ISZERO",
        "path": "0"
      },
      "372": {
        "fn": "LLMMarket.unpause",
        "offset": [
          560,
          616
        ],
        "op": "PUSH2",
        "path": "0",
        "value": "0x17C"
      },
      "375": {
        "fn": "LLMMarket.unpause",
        "offset": [
          560,
          616
        ],
        "op": "JUMPI",
        "path": "0"
      },
      "376": {
        "fn": "LLMMarket.unpause",
        "offset": [
          560,
          616
        ],
        "op": "PUSH1",
        "path": "0",
        "value": "0x0"
      },
      "378": {
        "fn": "LLMMarket.unpause",
        "offset": [
          560,
          616
        ],
        "op": "DUP1",
        "path": "0"
      },
      "379": {
        "fn": "LLMMarket.unpause",
        "offset": [
          560,
          616
        ],
        "op": "REVERT",
        "path": "0"
      },
      "380": {
        "fn": "LLMMarket.unpause",
        "offset": [
          560,
          616
        ],
        "op": "JUMPDEST",
        "path": "0"
      },
      "381": {
        "op": "POP"
      },
      "382": {
        "offset": [
          560,
          616
        ],
        "op": "PUSH2",
        "path": "0",
        "value": "0x190"
      },
      "385": {
        "fn": "LLMMarket.unpause",
        "offset": [
          560,
          616
        ],
        "op": "PUSH2",
        "path": "0",
        "value": "0x18B"
      },
      "388": {
        "fn": "LLMMarket.unpause",
        "offset": [
          560,
          616
        ],
        "op": "CALLDATASIZE",
        "path": "0"
      },
      "389": {
        "fn": "LLMMarket.unpause",
        "offset": [
          560,
          616
        ],
        "op": "PUSH1",
        "path": "0",
        "value": "0x4"
      },
      "391": {
        "fn": "LLMMarket.unpause",
        "offset": [
          560,
          616
        ],
        "op": "PUSH2",
        "path": "0",
        "value": "0xB5E"
      },
      "394": {
        "fn": "LLMMarket.unpause",
        "jump": "i",
        "offset": [
          560,
          616
        ],
        "op": "JUMP",
        "path": "0"
      },
      "395": {
        "fn": "LLMMarket.unpause",
        "offset": [
          560,
          616
        ],
        "op": "JUMPDEST",
        "path": "0"
      },
      "396": {
        "fn": "LLMMarket.unpause",
        "offset": [
          560,
          616
        ],
        "op": "PUSH2",
        "path": "0",
        "value": "0x58E"
      },
      "399": {
        "fn": "LLMMarket.unpause",
        "jump": "i",
        "offset": [
          560,
          616
        ],
        "op": "JUMP",
        "path": "0"
      },
      "400": {
        "fn": "LLMMarket.unpause",
        "offset": [
          560,
          616
        ],
        "op": "JUMPDEST",
        "path": "0"
      },
      "401": {
        "fn": "LLMMarket.unpause",
        "offset": [
          560,
          616
        ],
        "op": "PUSH1",
        "path": "0",
        "value": "0x40"
      },
      "403": {
        "fn": "LLMMarket.unpause",
        "offset": [
          560,
          616
        ],
        "op": "DUP1",
        "path": "0"
      },
      "404": {
        "fn": "LLMMarket.unpause",
        "offset": [
          560,
          616
        ],
        "op": "MLOAD",
        "path": "0"
      },
      "405": {
        "op": "SWAP3"
      },
      "406": {
        "op": "DUP4"
      },
      "407": {
        "op": "MSTORE"
      },
      "408": {
        "op": "PUSH1",
        "value": "0x20"
      },
      "410": {
        "op": "DUP4"
      },
      "411": {
        "op": "ADD"
      },
      "412": {
        "op": "SWAP2"
      },
      "413": {
        "op": "SWAP1"
      },
      "414": {
        "op": "SWAP2"
      },
      "415": {
        "op": "MSTORE"
      },
      "416": {
        "op": "ADD"
      },
      "417": {
        "offset": [
          560,
          616
        ],
        "op": "PUSH2",
        "path": "0",
        "value": "0xCA"
      },
      "420": {
        "op": "JUMP"
      },
      "421": {
        "fn": "LLMMarket.clearListAndReedemFunds",
        "offset": [
          1773,
          2150
        ],
        "op": "JUMPDEST",
        "path": "0"
      },
      "422": {
        "fn": "LLMMarket.clearListAndReedemFunds",
        "offset": [
          1773,
          2150
        ],
        "op": "CALLVALUE",
        "path": "0"
      },
      "423": {
        "fn": "LLMMarket.clearListAndReedemFunds",
        "offset": [
          1773,
          2150
        ],
        "op": "DUP1",
        "path": "0"
      },
      "424": {
        "fn": "LLMMarket.clearListAndReedemFunds",
        "offset": [
          1773,
          2150
        ],
        "op": "ISZERO",
        "path": "0"
      },
      "425": {
        "fn": "LLMMarket.clearListAndReedemFunds",
        "offset": [
          1773,
          2150
        ],
        "op": "PUSH2",
        "path": "0",
        "value": "0x1B1"
      },
      "428": {
        "fn": "LLMMarket.clearListAndReedemFunds",
        "offset": [
          1773,
          2150
        ],
        "op": "JUMPI",
        "path": "0"
      },
      "429": {
        "fn": "LLMMarket.clearListAndReedemFunds",
        "offset": [
          1773,
          2150
        ],
        "op": "PUSH1",
        "path": "0",
        "value": "0x0"
      },
      "431": {
        "fn": "LLMMarket.clearListAndReedemFunds",
        "offset": [
          1773,
          2150
        ],
        "op": "DUP1",
        "path": "0"
      },
      "432": {
        "fn": "LLMMarket.clearListAndReedemFunds",
        "offset": [
          1773,
          2150
        ],
        "op": "REVERT",
        "path": "0"
      },
      "433": {
        "fn": "LLMMarket.clearListAndReedemFunds",
        "offset": [
          1773,
          2150
        ],
        "op": "JUMPDEST",
        "path": "0"
      },
      "434": {
        "fn": "LLMMarket.clearListAndReedemFunds",
        "offset": [
          1773,
          2150
        ],
        "op": "POP",
        "path": "0"
      },
      "435": {
        "fn": "LLMMarket.clearListAndReedemFunds",
        "offset": [
          1773,
          2150
        ],
        "op": "PUSH2",
        "path": "0",
        "value": "0xBE"
      },
      "438": {
        "fn": "LLMMarket.clearListAndReedemFunds",
        "offset": [
          1773,
          2150
        ],
        "op": "PUSH2",
        "path": "0",
        "value": "0x5CA"
      },
      "441": {
        "fn": "LLMMarket.clearListAndReedemFunds",
        "jump": "i",
        "offset": [
          1773,
          2150
        ],
        "op": "JUMP",
        "path": "0"
      },
      "442": {
        "fn": "LLMMarket.pause",
        "offset": [
          1156,
          1259
        ],
        "op": "JUMPDEST",
        "path": "0"
      },
      "443": {
        "fn": "LLMMarket.pause",
        "offset": [
          1156,
          1259
        ],
        "op": "CALLVALUE",
        "path": "0"
      },
      "444": {
        "fn": "LLMMarket.pause",
        "offset": [
          1156,
          1259
        ],
        "op": "DUP1",
        "path": "0"
      },
      "445": {
        "fn": "LLMMarket.pause",
        "offset": [
          1156,
          1259
        ],
        "op": "ISZERO",
        "path": "0"
      },
      "446": {
        "fn": "LLMMarket.pause",
        "offset": [
          1156,
          1259
        ],
        "op": "PUSH2",
        "path": "0",
        "value": "0x1C6"
      },
      "449": {
        "fn": "LLMMarket.pause",
        "offset": [
          1156,
          1259
        ],
        "op": "JUMPI",
        "path": "0"
      },
      "450": {
        "fn": "LLMMarket.pause",
        "offset": [
          1156,
          1259
        ],
        "op": "PUSH1",
        "path": "0",
        "value": "0x0"
      },
      "452": {
        "fn": "LLMMarket.pause",
        "offset": [
          1156,
          1259
        ],
        "op": "DUP1",
        "path": "0"
      },
      "453": {
        "fn": "LLMMarket.pause",
        "offset": [
          1156,
          1259
        ],
        "op": "REVERT",
        "path": "0"
      },
      "454": {
        "fn": "LLMMarket.pause",
        "offset": [
          1156,
          1259
        ],
        "op": "JUMPDEST",
        "path": "0"
      },
      "455": {
        "fn": "LLMMarket.pause",
        "offset": [
          1156,
          1259
        ],
        "op": "POP",
        "path": "0"
      },
      "456": {
        "fn": "LLMMarket.pause",
        "offset": [
          1156,
          1259
        ],
        "op": "PUSH2",
        "path": "0",
        "value": "0xBE"
      },
      "459": {
        "fn": "LLMMarket.pause",
        "offset": [
          1213,
          1223
        ],
        "op": "CALLER",
        "path": "0",
        "statement": 1
      },
      "460": {
        "fn": "LLMMarket.pause",
        "offset": [
          1191,
          1195
        ],
        "op": "PUSH1",
        "path": "0",
        "value": "0x0"
      },
      "462": {
        "fn": "LLMMarket.pause",
        "offset": [
          1206,
          1224
        ],
        "op": "SWAP1",
        "path": "0"
      },
      "463": {
        "fn": "LLMMarket.pause",
        "offset": [
          1206,
          1224
        ],
        "op": "DUP2",
        "path": "0"
      },
      "464": {
        "fn": "LLMMarket.pause",
        "offset": [
          1206,
          1224
        ],
        "op": "MSTORE",
        "path": "0"
      },
      "465": {
        "fn": "LLMMarket.pause",
        "offset": [
          1206,
          1212
        ],
        "op": "PUSH1",
        "path": "0",
        "value": "0x3"
      },
      "467": {
        "fn": "LLMMarket.pause",
        "offset": [
          1206,
          1224
        ],
        "op": "PUSH1",
        "path": "0",
        "value": "0x20"
      },
      "469": {
        "fn": "LLMMarket.pause",
        "offset": [
          1206,
          1224
        ],
        "op": "MSTORE",
        "path": "0"
      },
      "470": {
        "fn": "LLMMarket.pause",
        "offset": [
          1206,
          1224
        ],
        "op": "PUSH1",
        "path": "0",
        "value": "0x40"
      },
      "472": {
        "fn": "LLMMarket.pause",
        "offset": [
          1206,
          1224
        ],
        "op": "SWAP1",
        "path": "0"
      },
      "473": {
        "fn": "LLMMarket.pause",
        "offset": [
          1206,
          1224
        ],
        "op": "KECCAK256",
        "path": "0"
      },
      "474": {
        "fn": "LLMMarket.pause",
        "offset": [
          1206,
          1231
        ],
        "op": "DUP1",
        "path": "0"
      },
      "475": {
        "fn": "LLMMarket.pause",
        "offset": [
          1206,
          1231
        ],
        "op": "SLOAD",
        "path": "0"
      },
      "476": {
        "op": "PUSH1",
        "value": "0xFF"
      },
      "478": {
        "op": "NOT"
      },
      "479": {
        "fn": "LLMMarket.pause",
        "offset": [
          1206,
          1231
        ],
        "op": "AND",
        "path": "0"
      },
      "480": {
        "fn": "LLMMarket.pause",
        "offset": [
          1227,
          1231
        ],
        "op": "PUSH1",
        "path": "0",
        "value": "0x1"
      },
      "482": {
        "fn": "LLMMarket.pause",
        "offset": [
          1206,
          1231
        ],
        "op": "SWAP1",
        "path": "0"
      },
      "483": {
        "fn": "LLMMarket.pause",
        "offset": [
          1206,
          1231
        ],
        "op": "DUP2",
        "path": "0"
      },
      "484": {
        "fn": "LLMMarket.pause",
        "offset": [
          1206,
          1231
        ],
        "op": "OR",
        "path": "0"
      },
      "485": {
        "fn": "LLMMarket.pause",
        "offset": [
          1206,
          1231
        ],
        "op": "SWAP1",
        "path": "0"
      },
      "486": {
        "fn": "LLMMarket.pause",
        "offset": [
          1206,
          1231
        ],
        "op": "SWAP2",
        "path": "0"
      },
      "487": {
        "fn": "LLMMarket.pause",
        "offset": [
          1206,
          1231
        ],
        "op": "SSTORE",
        "path": "0"
      },
      "488": {
        "fn": "LLMMarket.pause",
        "offset": [
          1227,
          1231
        ],
        "op": "SWAP1",
        "path": "0"
      },
      "489": {
        "fn": "LLMMarket.pause",
        "offset": [
          1156,
          1259
        ],
        "op": "JUMP",
        "path": "0"
      },
      "490": {
        "fn": "LLMMarket.getActiveRequests",
        "offset": [
          2156,
          2282
        ],
        "op": "JUMPDEST",
        "path": "0"
      },
      "491": {
        "fn": "LLMMarket.getActiveRequests",
        "offset": [
          2156,
          2282
        ],
        "op": "CALLVALUE",
        "path": "0"
      },
      "492": {
        "fn": "LLMMarket.getActiveRequests",
        "offset": [
          2156,
          2282
        ],
        "op": "DUP1",
        "path": "0"
      },
      "493": {
        "fn": "LLMMarket.getActiveRequests",
        "offset": [
          2156,
          2282
        ],
        "op": "ISZERO",
        "path": "0"
      },
      "494": {
        "fn": "LLMMarket.getActiveRequests",
        "offset": [
          2156,
          2282
        ],
        "op": "PUSH2",
        "path": "0",
        "value": "0x1F6"
      },
      "497": {
        "fn": "LLMMarket.getActiveRequests",
        "offset": [
          2156,
          2282
        ],
        "op": "JUMPI",
        "path": "0"
      },
      "498": {
        "fn": "LLMMarket.getActiveRequests",
        "offset": [
          2156,
          2282
        ],
        "op": "PUSH1",
        "path": "0",
        "value": "0x0"
      },
      "500": {
        "fn": "LLMMarket.getActiveRequests",
        "offset": [
          2156,
          2282
        ],
        "op": "DUP1",
        "path": "0"
      },
      "501": {
        "fn": "LLMMarket.getActiveRequests",
        "offset": [
          2156,
          2282
        ],
        "op": "REVERT",
        "path": "0"
      },
      "502": {
        "fn": "LLMMarket.getActiveRequests",
        "offset": [
          2156,
          2282
        ],
        "op": "JUMPDEST",
        "path": "0"
      },
      "503": {
        "op": "POP"
      },
      "504": {
        "fn": "LLMMarket.getActiveRequests",
        "offset": [
          2156,
          2282
        ],
        "op": "PUSH2",
        "path": "0",
        "value": "0x20A"
      },
      "507": {
        "fn": "LLMMarket.getActiveRequests",
        "offset": [
          2156,
          2282
        ],
        "op": "PUSH2",
        "path": "0",
        "value": "0x205"
      },
      "510": {
        "fn": "LLMMarket.getActiveRequests",
        "offset": [
          2156,
          2282
        ],
        "op": "CALLDATASIZE",
        "path": "0"
      },
      "511": {
        "fn": "LLMMarket.getActiveRequests",
        "offset": [
          2156,
          2282
        ],
        "op": "PUSH1",
        "path": "0",
        "value": "0x4"
      },
      "513": {
        "fn": "LLMMarket.getActiveRequests",
        "offset": [
          2156,
          2282
        ],
        "op": "PUSH2",
        "path": "0",
        "value": "0x989"
      },
      "516": {
        "fn": "LLMMarket.getActiveRequests",
        "jump": "i",
        "offset": [
          2156,
          2282
        ],
        "op": "JUMP",
        "path": "0"
      },
      "517": {
        "fn": "LLMMarket.getActiveRequests",
        "offset": [
          2156,
          2282
        ],
        "op": "JUMPDEST",
        "path": "0"
      },
      "518": {
        "fn": "LLMMarket.getActiveRequests",
        "offset": [
          2156,
          2282
        ],
        "op": "PUSH2",
        "path": "0",
        "value": "0x67D"
      },
      "521": {
        "fn": "LLMMarket.getActiveRequests",
        "jump": "i",
        "offset": [
          2156,
          2282
        ],
        "op": "JUMP",
        "path": "0"
      },
      "522": {
        "fn": "LLMMarket.getActiveRequests",
        "offset": [
          2156,
          2282
        ],
        "op": "JUMPDEST",
        "path": "0"
      },
      "523": {
        "fn": "LLMMarket.getActiveRequests",
        "offset": [
          2156,
          2282
        ],
        "op": "PUSH1",
        "path": "0",
        "value": "0x40"
      },
      "525": {
        "fn": "LLMMarket.getActiveRequests",
        "offset": [
          2156,
          2282
        ],
        "op": "MLOAD",
        "path": "0"
      },
      "526": {
        "fn": "LLMMarket.getActiveRequests",
        "offset": [
          2156,
          2282
        ],
        "op": "PUSH2",
        "path": "0",
        "value": "0xCA"
      },
      "529": {
        "fn": "LLMMarket.getActiveRequests",
        "offset": [
          2156,
          2282
        ],
        "op": "SWAP2",
        "path": "0"
      },
      "530": {
        "fn": "LLMMarket.getActiveRequests",
        "offset": [
          2156,
          2282
        ],
        "op": "SWAP1",
        "path": "0"
      },
      "531": {
        "fn": "LLMMarket.getActiveRequests",
        "offset": [
          2156,
          2282
        ],
        "op": "PUSH2",
        "path": "0",
        "value": "0xB88"
      },
      "534": {
        "fn": "LLMMarket.getActiveRequests",
        "jump": "i",
        "offset": [
          2156,
          2282
        ],
        "op": "JUMP",
        "path": "0"
      },
      "535": {
        "fn": "LLMMarket.getPaused",
        "offset": [
          2288,
          2385
        ],
        "op": "JUMPDEST",
        "path": "0"
      },
      "536": {
        "fn": "LLMMarket.getPaused",
        "offset": [
          2288,
          2385
        ],
        "op": "CALLVALUE",
        "path": "0"
      },
      "537": {
        "fn": "LLMMarket.getPaused",
        "offset": [
          2288,
          2385
        ],
        "op": "DUP1",
        "path": "0"
      },
      "538": {
        "fn": "LLMMarket.getPaused",
        "offset": [
          2288,
          2385
        ],
        "op": "ISZERO",
        "path": "0"
      },
      "539": {
        "fn": "LLMMarket.getPaused",
        "offset": [
          2288,
          2385
        ],
        "op": "PUSH2",
        "path": "0",
        "value": "0x223"
      },
      "542": {
        "fn": "LLMMarket.getPaused",
        "offset": [
          2288,
          2385
        ],
        "op": "JUMPI",
        "path": "0"
      },
      "543": {
        "fn": "LLMMarket.getPaused",
        "offset": [
          2288,
          2385
        ],
        "op": "PUSH1",
        "path": "0",
        "value": "0x0"
      },
      "545": {
        "fn": "LLMMarket.getPaused",
        "offset": [
          2288,
          2385
        ],
        "op": "DUP1",
        "path": "0"
      },
      "546": {
        "fn": "LLMMarket.getPaused",
        "offset": [
          2288,
          2385
        ],
        "op": "REVERT",
        "path": "0"
      },
      "547": {
        "fn": "LLMMarket.getPaused",
        "offset": [
          2288,
          2385
        ],
        "op": "JUMPDEST",
        "path": "0"
      },
      "548": {
        "op": "POP"
      },
      "549": {
        "fn": "LLMMarket.getPaused",
        "offset": [
          2288,
          2385
        ],
        "op": "PUSH2",
        "path": "0",
        "value": "0xBE"
      },
      "552": {
        "fn": "LLMMarket.getPaused",
        "offset": [
          2288,
          2385
        ],
        "op": "PUSH2",
        "path": "0",
        "value": "0x232"
      },
      "555": {
        "fn": "LLMMarket.getPaused",
        "offset": [
          2288,
          2385
        ],
        "op": "CALLDATASIZE",
        "path": "0"
      },
      "556": {
        "fn": "LLMMarket.getPaused",
        "offset": [
          2288,
          2385
        ],
        "op": "PUSH1",
        "path": "0",
        "value": "0x4"
      },
      "558": {
        "fn": "LLMMarket.getPaused",
        "offset": [
          2288,
          2385
        ],
        "op": "PUSH2",
        "path": "0",
        "value": "0x989"
      },
      "561": {
        "fn": "LLMMarket.getPaused",
        "jump": "i",
        "offset": [
          2288,
          2385
        ],
        "op": "JUMP",
        "path": "0"
      },
      "562": {
        "fn": "LLMMarket.getPaused",
        "offset": [
          2288,
          2385
        ],
        "op": "JUMPDEST",
        "path": "0"
      },
      "563": {
        "op": "PUSH1",
        "value": "0x1"
      },
      "565": {
        "op": "PUSH1",
        "value": "0x1"
      },
      "567": {
        "op": "PUSH1",
        "value": "0xA0"
      },
      "569": {
        "op": "SHL"
      },
      "570": {
        "op": "SUB"
      },
      "571": {
        "fn": "LLMMarket.getPaused",
        "offset": [
          2366,
          2378
        ],
        "op": "AND",
        "path": "0",
        "statement": 2
      },
      "572": {
        "fn": "LLMMarket.getPaused",
        "offset": [
          2344,
          2348
        ],
        "op": "PUSH1",
        "path": "0",
        "value": "0x0"
      },
      "574": {
        "fn": "LLMMarket.getPaused",
        "offset": [
          2366,
          2378
        ],
        "op": "SWAP1",
        "path": "0"
      },
      "575": {
        "fn": "LLMMarket.getPaused",
        "offset": [
          2366,
          2378
        ],
        "op": "DUP2",
        "path": "0"
      },
      "576": {
        "fn": "LLMMarket.getPaused",
        "offset": [
          2366,
          2378
        ],
        "op": "MSTORE",
        "path": "0"
      },
      "577": {
        "fn": "LLMMarket.getPaused",
        "offset": [
          2366,
          2372
        ],
        "op": "PUSH1",
        "path": "0",
        "value": "0x3"
      },
      "579": {
        "fn": "LLMMarket.getPaused",
        "offset": [
          2366,
          2378
        ],
        "op": "PUSH1",
        "path": "0",
        "value": "0x20"
      },
      "581": {
        "fn": "LLMMarket.getPaused",
        "offset": [
          2366,
          2378
        ],
        "op": "MSTORE",
        "path": "0"
      },
      "582": {
        "fn": "LLMMarket.getPaused",
        "offset": [
          2366,
          2378
        ],
        "op": "PUSH1",
        "path": "0",
        "value": "0x40"
      },
      "584": {
        "fn": "LLMMarket.getPaused",
        "offset": [
          2366,
          2378
        ],
        "op": "SWAP1",
        "path": "0"
      },
      "585": {
        "fn": "LLMMarket.getPaused",
        "offset": [
          2366,
          2378
        ],
        "op": "KECCAK256",
        "path": "0"
      },
      "586": {
        "fn": "LLMMarket.getPaused",
        "offset": [
          2366,
          2378
        ],
        "op": "SLOAD",
        "path": "0"
      },
      "587": {
        "fn": "LLMMarket.getPaused",
        "offset": [
          2366,
          2378
        ],
        "op": "PUSH1",
        "path": "0",
        "value": "0xFF"
      },
      "589": {
        "fn": "LLMMarket.getPaused",
        "offset": [
          2366,
          2378
        ],
        "op": "AND",
        "path": "0"
      },
      "590": {
        "fn": "LLMMarket.getPaused",
        "offset": [
          2366,
          2378
        ],
        "op": "SWAP1",
        "path": "0"
      },
      "591": {
        "fn": "LLMMarket.getPaused",
        "offset": [
          2288,
          2385
        ],
        "op": "JUMP",
        "path": "0"
      },
      "592": {
        "offset": [
          529,
          553
        ],
        "op": "JUMPDEST",
        "path": "0"
      },
      "593": {
        "fn": "LLMMarket.getPaused",
        "offset": [
          529,
          553
        ],
        "op": "CALLVALUE",
        "path": "0"
      },
      "594": {
        "fn": "LLMMarket.getPaused",
        "offset": [
          529,
          553
        ],
        "op": "DUP1",
        "path": "0"
      },
      "595": {
        "fn": "LLMMarket.getPaused",
        "offset": [
          529,
          553
        ],
        "op": "ISZERO",
        "path": "0"
      },
      "596": {
        "fn": "LLMMarket.getPaused",
        "offset": [
          529,
          553
        ],
        "op": "PUSH2",
        "path": "0",
        "value": "0x25C"
      },
      "599": {
        "fn": "LLMMarket.getPaused",
        "offset": [
          529,
          553
        ],
        "op": "JUMPI",
        "path": "0"
      },
      "600": {
        "fn": "LLMMarket.getPaused",
        "offset": [
          529,
          553
        ],
        "op": "PUSH1",
        "path": "0",
        "value": "0x0"
      },
      "602": {
        "fn": "LLMMarket.getPaused",
        "offset": [
          529,
          553
        ],
        "op": "DUP1",
        "path": "0"
      },
      "603": {
        "fn": "LLMMarket.getPaused",
        "offset": [
          529,
          553
        ],
        "op": "REVERT",
        "path": "0"
      },
      "604": {
        "fn": "LLMMarket.getPaused",
        "offset": [
          529,
          553
        ],
        "op": "JUMPDEST",
        "path": "0"
      },
      "605": {
        "op": "POP"
      },
      "606": {
        "offset": [
          529,
          553
        ],
        "op": "PUSH2",
        "path": "0",
        "value": "0x270"
      },
      "609": {
        "fn": "LLMMarket.getPaused",
        "offset": [
          529,
          553
        ],
        "op": "PUSH2",
        "path": "0",
        "value": "0x26B"
      },
      "612": {
        "fn": "LLMMarket.getPaused",
        "offset": [
          529,
          553
        ],
        "op": "CALLDATASIZE",
        "path": "0"
      },
      "613": {
        "fn": "LLMMarket.getPaused",
        "offset": [
          529,
          553
        ],
        "op": "PUSH1",
        "path": "0",
        "value": "0x4"
      },
      "615": {
        "fn": "LLMMarket.getPaused",
        "offset": [
          529,
          553
        ],
        "op": "PUSH2",
        "path": "0",
        "value": "0xBD7"
      },
      "618": {
        "fn": "LLMMarket.getPaused",
        "jump": "i",
        "offset": [
          529,
          553
        ],
        "op": "JUMP",
        "path": "0"
      },
      "619": {
        "fn": "LLMMarket.getPaused",
        "offset": [
          529,
          553
        ],
        "op": "JUMPDEST",
        "path": "0"
      },
      "620": {
        "fn": "LLMMarket.getPaused",
        "offset": [
          529,
          553
        ],
        "op": "PUSH2",
        "path": "0",
        "value": "0x706"
      },
      "623": {
        "fn": "LLMMarket.getPaused",
        "jump": "i",
        "offset": [
          529,
          553
        ],
        "op": "JUMP",
        "path": "0"
      },
      "624": {
        "fn": "LLMMarket.getPaused",
        "offset": [
          529,
          553
        ],
        "op": "JUMPDEST",
        "path": "0"
      },
      "625": {
        "fn": "LLMMarket.getPaused",
        "offset": [
          529,
          553
        ],
        "op": "PUSH1",
        "path": "0",
        "value": "0x40"
      },
      "627": {
        "fn": "LLMMarket.getPaused",
        "offset": [
          529,
          553
        ],
        "op": "MLOAD",
        "path": "0"
      },
      "628": {
        "fn": "LLMMarket.getPaused",
        "offset": [
          529,
          553
        ],
        "op": "PUSH2",
        "path": "0",
        "value": "0xCA"
      },
      "631": {
        "fn": "LLMMarket.getPaused",
        "offset": [
          529,
          553
        ],
        "op": "SWAP4",
        "path": "0"
      },
      "632": {
        "fn": "LLMMarket.getPaused",
        "offset": [
          529,
          553
        ],
        "op": "SWAP3",
        "path": "0"
      },
      "633": {
        "fn": "LLMMarket.getPaused",
        "offset": [
          529,
          553
        ],
        "op": "SWAP2",
        "path": "0"
      },
      "634": {
        "fn": "LLMMarket.getPaused",
        "offset": [
          529,
          553
        ],
        "op": "SWAP1",
        "path": "0"
      },
      "635": {
        "fn": "LLMMarket.getPaused",
        "offset": [
          529,
          553
        ],
        "op": "PUSH2",
        "path": "0",
        "value": "0xBF0"
      },
      "638": {
        "fn": "LLMMarket.getPaused",
        "jump": "i",
        "offset": [
          529,
          553
        ],
        "op": "JUMP",
        "path": "0"
      },
      "639": {
        "fn": "LLMMarket.removeHost",
        "offset": [
          860,
          1150
        ],
        "op": "JUMPDEST",
        "path": "0"
      },
      "640": {
        "fn": "LLMMarket.removeHost",
        "offset": [
          860,
          1150
        ],
        "op": "CALLVALUE",
        "path": "0"
      },
      "641": {
        "fn": "LLMMarket.removeHost",
        "offset": [
          860,
          1150
        ],
        "op": "DUP1",
        "path": "0"
      },
      "642": {
        "fn": "LLMMarket.removeHost",
        "offset": [
          860,
          1150
        ],
        "op": "ISZERO",
        "path": "0"
      },
      "643": {
        "fn": "LLMMarket.removeHost",
        "offset": [
          860,
          1150
        ],
        "op": "PUSH2",
        "path": "0",
        "value": "0x28B"
      },
      "646": {
        "fn": "LLMMarket.removeHost",
        "offset": [
          860,
          1150
        ],
        "op": "JUMPI",
        "path": "0"
      },
      "647": {
        "fn": "LLMMarket.removeHost",
        "offset": [
          860,
          1150
        ],
        "op": "PUSH1",
        "path": "0",
        "value": "0x0"
      },
      "649": {
        "fn": "LLMMarket.removeHost",
        "offset": [
          860,
          1150
        ],
        "op": "DUP1",
        "path": "0"
      },
      "650": {
        "fn": "LLMMarket.removeHost",
        "offset": [
          860,
          1150
        ],
        "op": "REVERT",
        "path": "0"
      },
      "651": {
        "fn": "LLMMarket.removeHost",
        "offset": [
          860,
          1150
        ],
        "op": "JUMPDEST",
        "path": "0"
      },
      "652": {
        "op": "POP"
      },
      "653": {
        "fn": "LLMMarket.removeHost",
        "offset": [
          860,
          1150
        ],
        "op": "PUSH2",
        "path": "0",
        "value": "0xBE"
      },
      "656": {
        "fn": "LLMMarket.removeHost",
        "offset": [
          860,
          1150
        ],
        "op": "PUSH2",
        "path": "0",
        "value": "0x29A"
      },
      "659": {
        "fn": "LLMMarket.removeHost",
        "offset": [
          860,
          1150
        ],
        "op": "CALLDATASIZE",
        "path": "0"
      },
      "660": {
        "fn": "LLMMarket.removeHost",
        "offset": [
          860,
          1150
        ],
        "op": "PUSH1",
        "path": "0",
        "value": "0x4"
      },
      "662": {
        "fn": "LLMMarket.removeHost",
        "offset": [
          860,
          1150
        ],
        "op": "PUSH2",
        "path": "0",
        "value": "0x989"
      },
      "665": {
        "fn": "LLMMarket.removeHost",
        "jump": "i",
        "offset": [
          860,
          1150
        ],
        "op": "JUMP",
        "path": "0"
      },
      "666": {
        "fn": "LLMMarket.removeHost",
        "offset": [
          860,
          1150
        ],
        "op": "JUMPDEST",
        "path": "0"
      },
      "667": {
        "fn": "LLMMarket.removeHost",
        "offset": [
          860,
          1150
        ],
        "op": "PUSH2",
        "path": "0",
        "value": "0x7D2"
      },
      "670": {
        "fn": "LLMMarket.removeHost",
        "jump": "i",
        "offset": [
          860,
          1150
        ],
        "op": "JUMP",
        "path": "0"
      },
      "671": {
        "fn": "LLMMarket.addRequest",
        "offset": [
          1474,
          1767
        ],
        "op": "JUMPDEST",
        "path": "0"
      },
      "672": {
        "op": "PUSH1",
        "value": "0x1"
      },
      "674": {
        "op": "PUSH1",
        "value": "0x1"
      },
      "676": {
        "op": "PUSH1",
        "value": "0xA0"
      },
      "678": {
        "op": "SHL"
      },
      "679": {
        "op": "SUB"
      },
      "680": {
        "fn": "LLMMarket.addRequest",
        "offset": [
          1572,
          1584
        ],
        "op": "DUP2",
        "path": "0",
        "statement": 3
      },
      "681": {
        "fn": "LLMMarket.addRequest",
        "offset": [
          1572,
          1584
        ],
        "op": "AND",
        "path": "0"
      },
      "682": {
        "fn": "LLMMarket.addRequest",
        "offset": [
          1548,
          1552
        ],
        "op": "PUSH1",
        "path": "0",
        "value": "0x0"
      },
      "684": {
        "fn": "LLMMarket.addRequest",
        "offset": [
          1572,
          1584
        ],
        "op": "SWAP1",
        "path": "0"
      },
      "685": {
        "fn": "LLMMarket.addRequest",
        "offset": [
          1572,
          1584
        ],
        "op": "DUP2",
        "path": "0"
      },
      "686": {
        "fn": "LLMMarket.addRequest",
        "offset": [
          1572,
          1584
        ],
        "op": "MSTORE",
        "path": "0"
      },
      "687": {
        "fn": "LLMMarket.addRequest",
        "offset": [
          1572,
          1578
        ],
        "op": "PUSH1",
        "path": "0",
        "value": "0x3"
      },
      "689": {
        "fn": "LLMMarket.addRequest",
        "offset": [
          1572,
          1584
        ],
        "op": "PUSH1",
        "path": "0",
        "value": "0x20"
      },
      "691": {
        "fn": "LLMMarket.addRequest",
        "offset": [
          1572,
          1584
        ],
        "op": "MSTORE",
        "path": "0"
      },
      "692": {
        "fn": "LLMMarket.addRequest",
        "offset": [
          1572,
          1584
        ],
        "op": "PUSH1",
        "path": "0",
        "value": "0x40"
      },
      "694": {
        "fn": "LLMMarket.addRequest",
        "offset": [
          1572,
          1584
        ],
        "op": "DUP2",
        "path": "0"
      },
      "695": {
        "fn": "LLMMarket.addRequest",
        "offset": [
          1572,
          1584
        ],
        "op": "KECCAK256",
        "path": "0"
      },
      "696": {
        "fn": "LLMMarket.addRequest",
        "offset": [
          1572,
          1584
        ],
        "op": "SLOAD",
        "path": "0"
      },
      "697": {
        "fn": "LLMMarket.addRequest",
        "offset": [
          1572,
          1584
        ],
        "op": "PUSH1",
        "path": "0",
        "value": "0xFF"
      },
      "699": {
        "fn": "LLMMarket.addRequest",
        "offset": [
          1572,
          1584
        ],
        "op": "AND",
        "path": "0"
      },
      "700": {
        "branch": 18,
        "fn": "LLMMarket.addRequest",
        "offset": [
          1572,
          1593
        ],
        "op": "ISZERO",
        "path": "0"
      },
      "701": {
        "fn": "LLMMarket.addRequest",
        "offset": [
          1564,
          1615
        ],
        "op": "PUSH2",
        "path": "0",
        "value": "0x301"
      },
      "704": {
        "branch": 18,
        "fn": "LLMMarket.addRequest",
        "offset": [
          1564,
          1615
        ],
        "op": "JUMPI",
        "path": "0"
      },
      "705": {
        "fn": "LLMMarket.addRequest",
        "offset": [
          1564,
          1615
        ],
        "op": "PUSH1",
        "path": "0",
        "value": "0x40"
      },
      "707": {
        "fn": "LLMMarket.addRequest",
        "offset": [
          1564,
          1615
        ],
        "op": "MLOAD",
        "path": "0"
      },
      "708": {
        "op": "PUSH3",
        "value": "0x461BCD"
      },
      "712": {
        "op": "PUSH1",
        "value": "0xE5"
      },
      "714": {
        "op": "SHL"
      },
      "715": {
        "fn": "LLMMarket.addRequest",
        "offset": [
          1564,
          1615
        ],
        "op": "DUP2",
        "path": "0"
      },
      "716": {
        "fn": "LLMMarket.addRequest",
        "offset": [
          1564,
          1615
        ],
        "op": "MSTORE",
        "path": "0"
      },
      "717": {
        "op": "PUSH1",
        "value": "0x20"
      },
      "719": {
        "fn": "LLMMarket.addRequest",
        "offset": [
          1564,
          1615
        ],
        "op": "PUSH1",
        "path": "0",
        "value": "0x4"
      },
      "721": {
        "fn": "LLMMarket.addRequest",
        "offset": [
          1564,
          1615
        ],
        "op": "DUP3",
        "path": "0"
      },
      "722": {
        "fn": "LLMMarket.addRequest",
        "offset": [
          1564,
          1615
        ],
        "op": "ADD",
        "path": "0"
      },
      "723": {
        "op": "MSTORE"
      },
      "724": {
        "op": "PUSH1",
        "value": "0x11"
      },
      "726": {
        "op": "PUSH1",
        "value": "0x24"
      },
      "728": {
        "op": "DUP3"
      },
      "729": {
        "op": "ADD"
      },
      "730": {
        "op": "MSTORE"
      },
      "731": {
        "op": "PUSH17",
        "value": "0x43757272656E746C792070617573656421"
      },
      "749": {
        "op": "PUSH1",
        "value": "0x78"
      },
      "751": {
        "op": "SHL"
      },
      "752": {
        "op": "PUSH1",
        "value": "0x44"
      },
      "754": {
        "op": "DUP3"
      },
      "755": {
        "op": "ADD"
      },
      "756": {
        "op": "MSTORE"
      },
      "757": {
        "op": "PUSH1",
        "value": "0x64"
      },
      "759": {
        "op": "ADD"
      },
      "760": {
        "fn": "LLMMarket.addRequest",
        "offset": [
          1564,
          1615
        ],
        "op": "JUMPDEST",
        "path": "0"
      },
      "761": {
        "fn": "LLMMarket.addRequest",
        "offset": [
          1564,
          1615
        ],
        "op": "PUSH1",
        "path": "0",
        "value": "0x40"
      },
      "763": {
        "fn": "LLMMarket.addRequest",
        "offset": [
          1564,
          1615
        ],
        "op": "MLOAD",
        "path": "0"
      },
      "764": {
        "fn": "LLMMarket.addRequest",
        "offset": [
          1564,
          1615
        ],
        "op": "DUP1",
        "path": "0"
      },
      "765": {
        "fn": "LLMMarket.addRequest",
        "offset": [
          1564,
          1615
        ],
        "op": "SWAP2",
        "path": "0"
      },
      "766": {
        "fn": "LLMMarket.addRequest",
        "offset": [
          1564,
          1615
        ],
        "op": "SUB",
        "path": "0"
      },
      "767": {
        "fn": "LLMMarket.addRequest",
        "offset": [
          1564,
          1615
        ],
        "op": "SWAP1",
        "path": "0"
      },
      "768": {
        "fn": "LLMMarket.addRequest",
        "offset": [
          1564,
          1615
        ],
        "op": "REVERT",
        "optimizer_revert": true,
        "path": "0"
      },
      "769": {
        "fn": "LLMMarket.addRequest",
        "offset": [
          1564,
          1615
        ],
        "op": "JUMPDEST",
        "path": "0"
      },
      "770": {
        "fn": "LLMMarket.addRequest",
        "offset": [
          1646,
          1652
        ],
        "op": "PUSH7",
        "path": "0",
        "statement": 4,
        "value": "0x38D7EA4C68000"
      },
      "778": {
        "fn": "LLMMarket.addRequest",
        "offset": [
          1633,
          1642
        ],
        "op": "CALLVALUE",
        "path": "0"
      },
      "779": {
        "fn": "LLMMarket.addRequest",
        "offset": [
          1633,
          1652
        ],
        "op": "LT",
        "path": "0"
      },
      "780": {
        "branch": 19,
        "fn": "LLMMarket.addRequest",
        "offset": [
          1633,
          1652
        ],
        "op": "ISZERO",
        "path": "0"
      },
      "781": {
        "fn": "LLMMarket.addRequest",
        "offset": [
          1625,
          1678
        ],
        "op": "PUSH2",
        "path": "0",
        "value": "0x350"
      },
      "784": {
        "branch": 19,
        "fn": "LLMMarket.addRequest",
        "offset": [
          1625,
          1678
        ],
        "op": "JUMPI",
        "path": "0"
      },
      "785": {
        "fn": "LLMMarket.addRequest",
        "offset": [
          1625,
          1678
        ],
        "op": "PUSH1",
        "path": "0",
        "value": "0x40"
      },
      "787": {
        "fn": "LLMMarket.addRequest",
        "offset": [
          1625,
          1678
        ],
        "op": "MLOAD",
        "path": "0"
      },
      "788": {
        "op": "PUSH3",
        "value": "0x461BCD"
      },
      "792": {
        "op": "PUSH1",
        "value": "0xE5"
      },
      "794": {
        "op": "SHL"
      },
      "795": {
        "fn": "LLMMarket.addRequest",
        "offset": [
          1625,
          1678
        ],
        "op": "DUP2",
        "path": "0"
      },
      "796": {
        "fn": "LLMMarket.addRequest",
        "offset": [
          1625,
          1678
        ],
        "op": "MSTORE",
        "path": "0"
      },
      "797": {
        "op": "PUSH1",
        "value": "0x20"
      },
      "799": {
        "fn": "LLMMarket.addRequest",
        "offset": [
          1625,
          1678
        ],
        "op": "PUSH1",
        "path": "0",
        "value": "0x4"
      },
      "801": {
        "fn": "LLMMarket.addRequest",
        "offset": [
          1625,
          1678
        ],
        "op": "DUP3",
        "path": "0"
      },
      "802": {
        "fn": "LLMMarket.addRequest",
        "offset": [
          1625,
          1678
        ],
        "op": "ADD",
        "path": "0"
      },
      "803": {
        "op": "MSTORE"
      },
      "804": {
        "op": "PUSH1",
        "value": "0x15"
      },
      "806": {
        "op": "PUSH1",
        "value": "0x24"
      },
      "808": {
        "op": "DUP3"
      },
      "809": {
        "op": "ADD"
      },
      "810": {
        "op": "MSTORE"
      },
      "811": {
        "op": "PUSH21",
        "value": "0x496E73756666696369656E742066756E64696E6721"
      },
      "833": {
        "op": "PUSH1",
        "value": "0x58"
      },
      "835": {
        "op": "SHL"
      },
      "836": {
        "op": "PUSH1",
        "value": "0x44"
      },
      "838": {
        "op": "DUP3"
      },
      "839": {
        "op": "ADD"
      },
      "840": {
        "op": "MSTORE"
      },
      "841": {
        "op": "PUSH1",
        "value": "0x64"
      },
      "843": {
        "op": "ADD"
      },
      "844": {
        "fn": "LLMMarket.addRequest",
        "offset": [
          1625,
          1678
        ],
        "op": "PUSH2",
        "path": "0",
        "value": "0x2F8"
      },
      "847": {
        "op": "JUMP"
      },
      "848": {
        "fn": "LLMMarket.addRequest",
        "offset": [
          1625,
          1678
        ],
        "op": "JUMPDEST",
        "path": "0"
      },
      "849": {
        "op": "POP"
      },
      "850": {
        "op": "PUSH1",
        "value": "0x1"
      },
      "852": {
        "op": "PUSH1",
        "value": "0x1"
      },
      "854": {
        "op": "PUSH1",
        "value": "0xA0"
      },
      "856": {
        "op": "SHL"
      },
      "857": {
        "op": "SUB"
      },
      "858": {
        "fn": "LLMMarket.addRequest",
        "offset": [
          1688,
          1708
        ],
        "op": "DUP2",
        "path": "0",
        "statement": 5
      },
      "859": {
        "fn": "LLMMarket.addRequest",
        "offset": [
          1688,
          1708
        ],
        "op": "AND",
        "path": "0"
      },
      "860": {
        "fn": "LLMMarket.addRequest",
        "offset": [
          1688,
          1708
        ],
        "op": "PUSH1",
        "path": "0",
        "value": "0x0"
      },
      "862": {
        "fn": "LLMMarket.addRequest",
        "offset": [
          1688,
          1708
        ],
        "op": "SWAP1",
        "path": "0"
      },
      "863": {
        "fn": "LLMMarket.addRequest",
        "offset": [
          1688,
          1708
        ],
        "op": "DUP2",
        "path": "0"
      },
      "864": {
        "fn": "LLMMarket.addRequest",
        "offset": [
          1688,
          1708
        ],
        "op": "MSTORE",
        "path": "0"
      },
      "865": {
        "fn": "LLMMarket.addRequest",
        "offset": [
          1688,
          1702
        ],
        "op": "PUSH1",
        "path": "0",
        "value": "0x2"
      },
      "867": {
        "fn": "LLMMarket.addRequest",
        "offset": [
          1688,
          1708
        ],
        "op": "PUSH1",
        "path": "0",
        "value": "0x20"
      },
      "869": {
        "fn": "LLMMarket.addRequest",
        "offset": [
          1688,
          1708
        ],
        "op": "DUP2",
        "path": "0"
      },
      "870": {
        "fn": "LLMMarket.addRequest",
        "offset": [
          1688,
          1708
        ],
        "op": "DUP2",
        "path": "0"
      },
      "871": {
        "fn": "LLMMarket.addRequest",
        "offset": [
          1688,
          1708
        ],
        "op": "MSTORE",
        "path": "0"
      },
      "872": {
        "fn": "LLMMarket.addRequest",
        "offset": [
          1688,
          1708
        ],
        "op": "PUSH1",
        "path": "0",
        "value": "0x40"
      },
      "874": {
        "fn": "LLMMarket.addRequest",
        "offset": [
          1688,
          1708
        ],
        "op": "DUP1",
        "path": "0"
      },
      "875": {
        "fn": "LLMMarket.addRequest",
        "offset": [
          1688,
          1708
        ],
        "op": "DUP5",
        "path": "0"
      },
      "876": {
        "fn": "LLMMarket.addRequest",
        "offset": [
          1688,
          1708
        ],
        "op": "KECCAK256",
        "path": "0"
      },
      "877": {
        "fn": "LLMMarket.addRequest",
        "offset": [
          1714,
          1738
        ],
        "op": "DUP2",
        "path": "0"
      },
      "878": {
        "fn": "LLMMarket.addRequest",
        "offset": [
          1714,
          1738
        ],
        "op": "MLOAD",
        "path": "0"
      },
      "879": {
        "fn": "LLMMarket.addRequest",
        "offset": [
          1714,
          1738
        ],
        "op": "DUP1",
        "path": "0"
      },
      "880": {
        "fn": "LLMMarket.addRequest",
        "offset": [
          1714,
          1738
        ],
        "op": "DUP4",
        "path": "0"
      },
      "881": {
        "fn": "LLMMarket.addRequest",
        "offset": [
          1714,
          1738
        ],
        "op": "ADD",
        "path": "0"
      },
      "882": {
        "fn": "LLMMarket.addRequest",
        "offset": [
          1714,
          1738
        ],
        "op": "SWAP1",
        "path": "0"
      },
      "883": {
        "fn": "LLMMarket.addRequest",
        "offset": [
          1714,
          1738
        ],
        "op": "SWAP3",
        "path": "0"
      },
      "884": {
        "fn": "LLMMarket.addRequest",
        "offset": [
          1714,
          1738
        ],
        "op": "MSTORE",
        "path": "0"
      },
      "885": {
        "fn": "LLMMarket.addRequest",
        "offset": [
          1714,
          1738
        ],
        "op": "DUP7",
        "path": "0"
      },
      "886": {
        "fn": "LLMMarket.addRequest",
        "offset": [
          1714,
          1738
        ],
        "op": "DUP3",
        "path": "0"
      },
      "887": {
        "fn": "LLMMarket.addRequest",
        "offset": [
          1714,
          1738
        ],
        "op": "MSTORE",
        "path": "0"
      },
      "888": {
        "fn": "LLMMarket.addRequest",
        "offset": [
          1728,
          1737
        ],
        "op": "CALLVALUE",
        "path": "0"
      },
      "889": {
        "fn": "LLMMarket.addRequest",
        "offset": [
          1714,
          1738
        ],
        "op": "DUP3",
        "path": "0"
      },
      "890": {
        "fn": "LLMMarket.addRequest",
        "offset": [
          1714,
          1738
        ],
        "op": "DUP5",
        "path": "0"
      },
      "891": {
        "fn": "LLMMarket.addRequest",
        "offset": [
          1714,
          1738
        ],
        "op": "ADD",
        "path": "0"
      },
      "892": {
        "fn": "LLMMarket.addRequest",
        "offset": [
          1714,
          1738
        ],
        "op": "SWAP1",
        "path": "0"
      },
      "893": {
        "fn": "LLMMarket.addRequest",
        "offset": [
          1714,
          1738
        ],
        "op": "DUP2",
        "path": "0"
      },
      "894": {
        "fn": "LLMMarket.addRequest",
        "offset": [
          1714,
          1738
        ],
        "op": "MSTORE",
        "path": "0"
      },
      "895": {
        "fn": "LLMMarket.addRequest",
        "offset": [
          1688,
          1739
        ],
        "op": "DUP2",
        "path": "0"
      },
      "896": {
        "fn": "LLMMarket.addRequest",
        "offset": [
          1688,
          1739
        ],
        "op": "SLOAD",
        "path": "0"
      },
      "897": {
        "fn": "LLMMarket.addRequest",
        "offset": [
          1688,
          1739
        ],
        "op": "PUSH1",
        "path": "0",
        "value": "0x1"
      },
      "899": {
        "fn": "LLMMarket.addRequest",
        "offset": [
          1688,
          1739
        ],
        "op": "DUP2",
        "path": "0"
      },
      "900": {
        "fn": "LLMMarket.addRequest",
        "offset": [
          1688,
          1739
        ],
        "op": "DUP2",
        "path": "0"
      },
      "901": {
        "fn": "LLMMarket.addRequest",
        "offset": [
          1688,
          1739
        ],
        "op": "ADD",
        "path": "0"
      },
      "902": {
        "fn": "LLMMarket.addRequest",
        "offset": [
          1688,
          1739
        ],
        "op": "DUP5",
        "path": "0"
      },
      "903": {
        "fn": "LLMMarket.addRequest",
        "offset": [
          1688,
          1739
        ],
        "op": "SSTORE",
        "path": "0"
      },
      "904": {
        "fn": "LLMMarket.addRequest",
        "offset": [
          1688,
          1739
        ],
        "op": "SWAP3",
        "path": "0"
      },
      "905": {
        "fn": "LLMMarket.addRequest",
        "offset": [
          1688,
          1739
        ],
        "op": "DUP8",
        "path": "0"
      },
      "906": {
        "fn": "LLMMarket.addRequest",
        "offset": [
          1688,
          1739
        ],
        "op": "MSTORE",
        "path": "0"
      },
      "907": {
        "fn": "LLMMarket.addRequest",
        "offset": [
          1688,
          1739
        ],
        "op": "SWAP4",
        "path": "0"
      },
      "908": {
        "fn": "LLMMarket.addRequest",
        "offset": [
          1688,
          1739
        ],
        "op": "SWAP1",
        "path": "0"
      },
      "909": {
        "fn": "LLMMarket.addRequest",
        "offset": [
          1688,
          1739
        ],
        "op": "SWAP6",
        "path": "0"
      },
      "910": {
        "fn": "LLMMarket.addRequest",
        "offset": [
          1688,
          1739
        ],
        "op": "KECCAK256",
        "path": "0"
      },
      "911": {
        "fn": "LLMMarket.addRequest",
        "offset": [
          1688,
          1739
        ],
        "op": "SWAP2",
        "path": "0"
      },
      "912": {
        "fn": "LLMMarket.addRequest",
        "offset": [
          1688,
          1739
        ],
        "op": "MLOAD",
        "path": "0"
      },
      "913": {
        "fn": "LLMMarket.addRequest",
        "offset": [
          1688,
          1739
        ],
        "op": "SWAP3",
        "path": "0"
      },
      "914": {
        "fn": "LLMMarket.addRequest",
        "offset": [
          1688,
          1739
        ],
        "op": "SWAP1",
        "path": "0"
      },
      "915": {
        "fn": "LLMMarket.addRequest",
        "offset": [
          1688,
          1739
        ],
        "op": "SWAP4",
        "path": "0"
      },
      "916": {
        "fn": "LLMMarket.addRequest",
        "offset": [
          1688,
          1739
        ],
        "op": "MUL",
        "path": "0"
      },
      "917": {
        "fn": "LLMMarket.addRequest",
        "offset": [
          1688,
          1739
        ],
        "op": "ADD",
        "path": "0"
      },
      "918": {
        "fn": "LLMMarket.addRequest",
        "offset": [
          1688,
          1739
        ],
        "op": "SWAP1",
        "path": "0"
      },
      "919": {
        "fn": "LLMMarket.addRequest",
        "offset": [
          1688,
          1739
        ],
        "op": "DUP2",
        "path": "0"
      },
      "920": {
        "fn": "LLMMarket.addRequest",
        "offset": [
          1688,
          1739
        ],
        "op": "SSTORE",
        "path": "0"
      },
      "921": {
        "fn": "LLMMarket.addRequest",
        "offset": [
          1688,
          1739
        ],
        "op": "SWAP2",
        "path": "0"
      },
      "922": {
        "fn": "LLMMarket.addRequest",
        "offset": [
          1688,
          1739
        ],
        "op": "MLOAD",
        "path": "0"
      },
      "923": {
        "fn": "LLMMarket.addRequest",
        "offset": [
          1688,
          1739
        ],
        "op": "SWAP2",
        "path": "0"
      },
      "924": {
        "fn": "LLMMarket.addRequest",
        "offset": [
          1688,
          1739
        ],
        "op": "DUP2",
        "path": "0"
      },
      "925": {
        "fn": "LLMMarket.addRequest",
        "offset": [
          1688,
          1739
        ],
        "op": "ADD",
        "path": "0"
      },
      "926": {
        "fn": "LLMMarket.addRequest",
        "offset": [
          1688,
          1739
        ],
        "op": "SWAP2",
        "path": "0"
      },
      "927": {
        "fn": "LLMMarket.addRequest",
        "offset": [
          1688,
          1739
        ],
        "op": "SWAP1",
        "path": "0"
      },
      "928": {
        "fn": "LLMMarket.addRequest",
        "offset": [
          1688,
          1739
        ],
        "op": "SWAP2",
        "path": "0"
      },
      "929": {
        "fn": "LLMMarket.addRequest",
        "offset": [
          1688,
          1739
        ],
        "op": "SSTORE",
        "path": "0"
      },
      "930": {
        "fn": "LLMMarket.addRequest",
        "offset": [
          1474,
          1767
        ],
        "op": "JUMPDEST",
        "path": "0"
      },
      "931": {
        "fn": "LLMMarket.addRequest",
        "offset": [
          1474,
          1767
        ],
        "op": "SWAP3",
        "path": "0"
      },
      "932": {
        "fn": "LLMMarket.addRequest",
        "offset": [
          1474,
          1767
        ],
        "op": "SWAP2",
        "path": "0"
      },
      "933": {
        "fn": "LLMMarket.addRequest",
        "offset": [
          1474,
          1767
        ],
        "op": "POP",
        "path": "0"
      },
      "934": {
        "fn": "LLMMarket.addRequest",
        "offset": [
          1474,
          1767
        ],
        "op": "POP",
        "path": "0"
      },
      "935": {
        "fn": "LLMMarket.addRequest",
        "jump": "o",
        "offset": [
          1474,
          1767
        ],
        "op": "JUMP",
        "path": "0"
      },
      "936": {
        "fn": "LLMMarket.addHost",
        "offset": [
          672,
          854
        ],
        "op": "JUMPDEST",
        "path": "0"
      },
      "937": {
        "fn": "LLMMarket.addHost",
        "offset": [
          768,
          772
        ],
        "op": "PUSH1",
        "path": "0",
        "value": "0x0"
      },
      "939": {
        "offset": [
          200,
          206
        ],
        "op": "DUP1",
        "path": "0"
      },
      "940": {
        "fn": "LLMMarket.addHost",
        "offset": [
          200,
          206
        ],
        "op": "SLOAD",
        "path": "0"
      },
      "941": {
        "op": "PUSH1",
        "value": "0x1"
      },
      "943": {
        "op": "PUSH1",
        "value": "0x1"
      },
      "945": {
        "op": "PUSH1",
        "value": "0xA0"
      },
      "947": {
        "op": "SHL"
      },
      "948": {
        "op": "SUB"
      },
      "949": {
        "offset": [
          200,
          206
        ],
        "op": "AND",
        "path": "0"
      },
      "950": {
        "offset": [
          188,
          198
        ],
        "op": "CALLER",
        "path": "0"
      },
      "951": {
        "offset": [
          188,
          206
        ],
        "op": "EQ",
        "path": "0"
      },
      "952": {
        "offset": [
          185,
          263
        ],
        "op": "PUSH2",
        "path": "0",
        "value": "0x3D6"
      },
      "955": {
        "offset": [
          185,
          263
        ],
        "op": "JUMPI",
        "path": "0"
      },
      "956": {
        "offset": [
          228,
          252
        ],
        "op": "PUSH1",
        "path": "0",
        "value": "0x40"
      },
      "958": {
        "fn": "LLMMarket.addHost",
        "offset": [
          228,
          252
        ],
        "op": "MLOAD",
        "path": "0"
      },
      "959": {
        "op": "PUSH4",
        "value": "0x472511EB"
      },
      "964": {
        "op": "PUSH1",
        "value": "0xE1"
      },
      "966": {
        "op": "SHL"
      },
      "967": {
        "offset": [
          228,
          252
        ],
        "op": "DUP2",
        "path": "0"
      },
      "968": {
        "fn": "LLMMarket.addHost",
        "offset": [
          228,
          252
        ],
        "op": "MSTORE",
        "path": "0"
      },
      "969": {
        "offset": [
          241,
          251
        ],
        "op": "CALLER",
        "path": "0"
      },
      "970": {
        "offset": [
          228,
          252
        ],
        "op": "PUSH1",
        "path": "0",
        "value": "0x4"
      },
      "972": {
        "fn": "LLMMarket.addHost",
        "offset": [
          228,
          252
        ],
        "op": "DUP3",
        "path": "0"
      },
      "973": {
        "fn": "LLMMarket.addHost",
        "offset": [
          228,
          252
        ],
        "op": "ADD",
        "path": "0"
      },
      "974": {
        "op": "MSTORE"
      },
      "975": {
        "op": "PUSH1",
        "value": "0x24"
      },
      "977": {
        "op": "ADD"
      },
      "978": {
        "offset": [
          228,
          252
        ],
        "op": "PUSH2",
        "path": "0",
        "value": "0x2F8"
      },
      "981": {
        "op": "JUMP"
      },
      "982": {
        "offset": [
          185,
          263
        ],
        "op": "JUMPDEST",
        "path": "0"
      },
      "983": {
        "fn": "LLMMarket.addHost",
        "offset": [
          798,
          825
        ],
        "op": "PUSH1",
        "path": "0",
        "statement": 6,
        "value": "0x40"
      },
      "985": {
        "fn": "LLMMarket.addHost",
        "offset": [
          798,
          825
        ],
        "op": "DUP1",
        "path": "0"
      },
      "986": {
        "fn": "LLMMarket.addHost",
        "offset": [
          798,
          825
        ],
        "op": "MLOAD",
        "path": "0"
      },
      "987": {
        "fn": "LLMMarket.addHost",
        "offset": [
          798,
          825
        ],
        "op": "PUSH1",
        "path": "0",
        "value": "0x60"
      },
      "989": {
        "fn": "LLMMarket.addHost",
        "offset": [
          798,
          825
        ],
        "op": "DUP2",
        "path": "0"
      },
      "990": {
        "fn": "LLMMarket.addHost",
        "offset": [
          798,
          825
        ],
        "op": "ADD",
        "path": "0"
      },
      "991": {
        "fn": "LLMMarket.addHost",
        "offset": [
          798,
          825
        ],
        "op": "DUP3",
        "path": "0"
      },
      "992": {
        "fn": "LLMMarket.addHost",
        "offset": [
          798,
          825
        ],
        "op": "MSTORE",
        "path": "0"
      },
      "993": {
        "fn": "LLMMarket.addHost",
        "offset": [
          798,
          825
        ],
        "op": "DUP6",
        "path": "0"
      },
      "994": {
        "fn": "LLMMarket.addHost",
        "offset": [
          798,
          825
        ],
        "op": "DUP2",
        "path": "0"
      },
      "995": {
        "fn": "LLMMarket.addHost",
        "offset": [
          798,
          825
        ],
        "op": "MSTORE",
        "path": "0"
      },
      "996": {
        "op": "PUSH1",
        "value": "0x1"
      },
      "998": {
        "op": "PUSH1",
        "value": "0x1"
      },
      "1000": {
        "op": "PUSH1",
        "value": "0xA0"
      },
      "1002": {
        "op": "SHL"
      },
      "1003": {
        "op": "SUB"
      },
      "1004": {
        "fn": "LLMMarket.addHost",
        "offset": [
          798,
          825
        ],
        "op": "DUP6",
        "path": "0"
      },
      "1005": {
        "fn": "LLMMarket.addHost",
        "offset": [
          798,
          825
        ],
        "op": "AND",
        "path": "0"
      },
      "1006": {
        "fn": "LLMMarket.addHost",
        "offset": [
          798,
          825
        ],
        "op": "PUSH1",
        "path": "0",
        "value": "0x20"
      },
      "1008": {
        "fn": "LLMMarket.addHost",
        "offset": [
          798,
          825
        ],
        "op": "DUP3",
        "path": "0"
      },
      "1009": {
        "fn": "LLMMarket.addHost",
        "offset": [
          798,
          825
        ],
        "op": "ADD",
        "path": "0"
      },
      "1010": {
        "fn": "LLMMarket.addHost",
        "offset": [
          798,
          825
        ],
        "op": "MSTORE",
        "path": "0"
      },
      "1011": {
        "fn": "LLMMarket.addHost",
        "offset": [
          798,
          825
        ],
        "op": "SWAP1",
        "path": "0"
      },
      "1012": {
        "fn": "LLMMarket.addHost",
        "offset": [
          798,
          825
        ],
        "op": "DUP2",
        "path": "0"
      },
      "1013": {
        "fn": "LLMMarket.addHost",
        "offset": [
          798,
          825
        ],
        "op": "ADD",
        "path": "0"
      },
      "1014": {
        "fn": "LLMMarket.addHost",
        "offset": [
          798,
          825
        ],
        "op": "DUP4",
        "path": "0"
      },
      "1015": {
        "fn": "LLMMarket.addHost",
        "offset": [
          798,
          825
        ],
        "op": "SWAP1",
        "path": "0"
      },
      "1016": {
        "fn": "LLMMarket.addHost",
        "offset": [
          798,
          825
        ],
        "op": "MSTORE",
        "path": "0"
      },
      "1017": {
        "fn": "LLMMarket.addHost",
        "offset": [
          784,
          792
        ],
        "op": "PUSH1",
        "path": "0",
        "value": "0x1"
      },
      "1019": {
        "fn": "LLMMarket.addHost",
        "offset": [
          784,
          826
        ],
        "op": "DUP1",
        "path": "0"
      },
      "1020": {
        "fn": "LLMMarket.addHost",
        "offset": [
          784,
          826
        ],
        "op": "SLOAD",
        "path": "0"
      },
      "1021": {
        "fn": "LLMMarket.addHost",
        "offset": [
          784,
          826
        ],
        "op": "DUP1",
        "path": "0"
      },
      "1022": {
        "fn": "LLMMarket.addHost",
        "offset": [
          784,
          826
        ],
        "op": "DUP3",
        "path": "0"
      },
      "1023": {
        "fn": "LLMMarket.addHost",
        "offset": [
          784,
          826
        ],
        "op": "ADD",
        "path": "0"
      },
      "1024": {
        "fn": "LLMMarket.addHost",
        "offset": [
          784,
          826
        ],
        "op": "DUP3",
        "path": "0"
      },
      "1025": {
        "fn": "LLMMarket.addHost",
        "offset": [
          784,
          826
        ],
        "op": "SSTORE",
        "path": "0"
      },
      "1026": {
        "op": "PUSH1",
        "value": "0x0"
      },
      "1028": {
        "fn": "LLMMarket.addHost",
        "offset": [
          784,
          826
        ],
        "op": "SWAP2",
        "path": "0"
      },
      "1029": {
        "fn": "LLMMarket.addHost",
        "offset": [
          784,
          826
        ],
        "op": "SWAP1",
        "path": "0"
      },
      "1030": {
        "fn": "LLMMarket.addHost",
        "offset": [
          784,
          826
        ],
        "op": "SWAP2",
        "path": "0"
      },
      "1031": {
        "fn": "LLMMarket.addHost",
        "offset": [
          784,
          826
        ],
        "op": "MSTORE",
        "path": "0"
      },
      "1032": {
        "fn": "LLMMarket.addHost",
        "offset": [
          784,
          826
        ],
        "op": "DUP2",
        "path": "0"
      },
      "1033": {
        "fn": "LLMMarket.addHost",
        "offset": [
          784,
          826
        ],
        "op": "MLOAD",
        "path": "0"
      },
      "1034": {
        "fn": "LLMMarket.addHost",
        "offset": [
          784,
          826
        ],
        "op": "PUSH1",
        "path": "0",
        "value": "0x3"
      },
      "1036": {
        "fn": "LLMMarket.addHost",
        "offset": [
          784,
          826
        ],
        "op": "SWAP1",
        "path": "0"
      },
      "1037": {
        "fn": "LLMMarket.addHost",
        "offset": [
          784,
          826
        ],
        "op": "SWAP2",
        "path": "0"
      },
      "1038": {
        "fn": "LLMMarket.addHost",
        "offset": [
          784,
          826
        ],
        "op": "MUL",
        "path": "0"
      },
      "1039": {
        "fn": "LLMMarket.addHost",
        "offset": [
          784,
          826
        ],
        "op": "PUSH32",
        "path": "0",
        "value": "0xB10E2D527612073B26EECDFD717E6A320CF44B4AFAC2B0732D9FCBE2B7FA0CF6"
      },
      "1072": {
        "fn": "LLMMarket.addHost",
        "offset": [
          784,
          826
        ],
        "op": "ADD",
        "path": "0"
      },
      "1073": {
        "fn": "LLMMarket.addHost",
        "offset": [
          784,
          826
        ],
        "op": "SWAP1",
        "path": "0"
      },
      "1074": {
        "fn": "LLMMarket.addHost",
        "offset": [
          784,
          826
        ],
        "op": "DUP2",
        "path": "0"
      },
      "1075": {
        "fn": "LLMMarket.addHost",
        "offset": [
          784,
          826
        ],
        "op": "SWAP1",
        "path": "0"
      },
      "1076": {
        "fn": "LLMMarket.addHost",
        "offset": [
          784,
          826
        ],
        "op": "PUSH2",
        "path": "0",
        "value": "0x43D"
      },
      "1079": {
        "fn": "LLMMarket.addHost",
        "offset": [
          784,
          826
        ],
        "op": "SWAP1",
        "path": "0"
      },
      "1080": {
        "fn": "LLMMarket.addHost",
        "offset": [
          784,
          826
        ],
        "op": "DUP3",
        "path": "0"
      },
      "1081": {
        "fn": "LLMMarket.addHost",
        "offset": [
          784,
          826
        ],
        "op": "PUSH2",
        "path": "0",
        "value": "0xCA9"
      },
      "1084": {
        "fn": "LLMMarket.addHost",
        "jump": "i",
        "offset": [
          784,
          826
        ],
        "op": "JUMP",
        "path": "0"
      },
      "1085": {
        "fn": "LLMMarket.addHost",
        "offset": [
          784,
          826
        ],
        "op": "JUMPDEST",
        "path": "0"
      },
      "1086": {
        "op": "POP"
      },
      "1087": {
        "fn": "LLMMarket.addHost",
        "offset": [
          784,
          826
        ],
        "op": "PUSH1",
        "path": "0",
        "value": "0x20"
      },
      "1089": {
        "fn": "LLMMarket.addHost",
        "offset": [
          784,
          826
        ],
        "op": "DUP3",
        "path": "0"
      },
      "1090": {
        "fn": "LLMMarket.addHost",
        "offset": [
          784,
          826
        ],
        "op": "ADD",
        "path": "0"
      },
      "1091": {
        "fn": "LLMMarket.addHost",
        "offset": [
          784,
          826
        ],
        "op": "MLOAD",
        "path": "0"
      },
      "1092": {
        "fn": "LLMMarket.addHost",
        "offset": [
          784,
          826
        ],
        "op": "PUSH1",
        "path": "0",
        "value": "0x1"
      },
      "1094": {
        "fn": "LLMMarket.addHost",
        "offset": [
          784,
          826
        ],
        "op": "DUP3",
        "path": "0"
      },
      "1095": {
        "fn": "LLMMarket.addHost",
        "offset": [
          784,
          826
        ],
        "op": "DUP2",
        "path": "0"
      },
      "1096": {
        "fn": "LLMMarket.addHost",
        "offset": [
          784,
          826
        ],
        "op": "ADD",
        "path": "0"
      },
      "1097": {
        "fn": "LLMMarket.addHost",
        "offset": [
          784,
          826
        ],
        "op": "DUP1",
        "path": "0"
      },
      "1098": {
        "fn": "LLMMarket.addHost",
        "offset": [
          784,
          826
        ],
        "op": "SLOAD",
        "path": "0"
      },
      "1099": {
        "op": "PUSH1",
        "value": "0x1"
      },
      "1101": {
        "op": "PUSH1",
        "value": "0x1"
      },
      "1103": {
        "op": "PUSH1",
        "value": "0xA0"
      },
      "1105": {
        "op": "SHL"
      },
      "1106": {
        "op": "SUB"
      },
      "1107": {
        "op": "NOT"
      },
      "1108": {
        "fn": "LLMMarket.addHost",
        "offset": [
          784,
          826
        ],
        "op": "AND",
        "path": "0"
      },
      "1109": {
        "op": "PUSH1",
        "value": "0x1"
      },
      "1111": {
        "op": "PUSH1",
        "value": "0x1"
      },
      "1113": {
        "op": "PUSH1",
        "value": "0xA0"
      },
      "1115": {
        "op": "SHL"
      },
      "1116": {
        "op": "SUB"
      },
      "1117": {
        "fn": "LLMMarket.addHost",
        "offset": [
          784,
          826
        ],
        "op": "SWAP1",
        "path": "0"
      },
      "1118": {
        "fn": "LLMMarket.addHost",
        "offset": [
          784,
          826
        ],
        "op": "SWAP4",
        "path": "0"
      },
      "1119": {
        "fn": "LLMMarket.addHost",
        "offset": [
          784,
          826
        ],
        "op": "AND",
        "path": "0"
      },
      "1120": {
        "fn": "LLMMarket.addHost",
        "offset": [
          784,
          826
        ],
        "op": "SWAP3",
        "path": "0"
      },
      "1121": {
        "fn": "LLMMarket.addHost",
        "offset": [
          784,
          826
        ],
        "op": "SWAP1",
        "path": "0"
      },
      "1122": {
        "fn": "LLMMarket.addHost",
        "offset": [
          784,
          826
        ],
        "op": "SWAP3",
        "path": "0"
      },
      "1123": {
        "fn": "LLMMarket.addHost",
        "offset": [
          784,
          826
        ],
        "op": "OR",
        "path": "0"
      },
      "1124": {
        "fn": "LLMMarket.addHost",
        "offset": [
          784,
          826
        ],
        "op": "SWAP1",
        "path": "0"
      },
      "1125": {
        "fn": "LLMMarket.addHost",
        "offset": [
          784,
          826
        ],
        "op": "SWAP2",
        "path": "0"
      },
      "1126": {
        "fn": "LLMMarket.addHost",
        "offset": [
          784,
          826
        ],
        "op": "SSTORE",
        "path": "0"
      },
      "1127": {
        "fn": "LLMMarket.addHost",
        "offset": [
          784,
          826
        ],
        "op": "PUSH1",
        "path": "0",
        "value": "0x40"
      },
      "1129": {
        "fn": "LLMMarket.addHost",
        "offset": [
          784,
          826
        ],
        "op": "SWAP1",
        "path": "0"
      },
      "1130": {
        "fn": "LLMMarket.addHost",
        "offset": [
          784,
          826
        ],
        "op": "SWAP3",
        "path": "0"
      },
      "1131": {
        "fn": "LLMMarket.addHost",
        "offset": [
          784,
          826
        ],
        "op": "ADD",
        "path": "0"
      },
      "1132": {
        "fn": "LLMMarket.addHost",
        "offset": [
          784,
          826
        ],
        "op": "MLOAD",
        "path": "0"
      },
      "1133": {
        "fn": "LLMMarket.addHost",
        "offset": [
          784,
          826
        ],
        "op": "PUSH1",
        "path": "0",
        "value": "0x2"
      },
      "1135": {
        "fn": "LLMMarket.addHost",
        "offset": [
          784,
          826
        ],
        "op": "SWAP1",
        "path": "0"
      },
      "1136": {
        "fn": "LLMMarket.addHost",
        "offset": [
          784,
          826
        ],
        "op": "SWAP2",
        "path": "0"
      },
      "1137": {
        "fn": "LLMMarket.addHost",
        "offset": [
          784,
          826
        ],
        "op": "ADD",
        "path": "0"
      },
      "1138": {
        "fn": "LLMMarket.addHost",
        "offset": [
          784,
          826
        ],
        "op": "SSTORE",
        "path": "0"
      },
      "1139": {
        "fn": "LLMMarket.addHost",
        "offset": [
          784,
          826
        ],
        "op": "SWAP5",
        "path": "0"
      },
      "1140": {
        "fn": "LLMMarket.addHost",
        "offset": [
          672,
          854
        ],
        "op": "SWAP4",
        "path": "0"
      },
      "1141": {
        "op": "POP"
      },
      "1142": {
        "op": "POP"
      },
      "1143": {
        "op": "POP"
      },
      "1144": {
        "op": "POP"
      },
      "1145": {
        "fn": "LLMMarket.addHost",
        "jump": "o",
        "offset": [
          672,
          854
        ],
        "op": "JUMP",
        "path": "0"
      },
      "1146": {
        "fn": "LLMMarket.getHosts",
        "offset": [
          1377,
          1468
        ],
        "op": "JUMPDEST",
        "path": "0"
      },
      "1147": {
        "fn": "LLMMarket.getHosts",
        "offset": [
          1420,
          1435
        ],
        "op": "PUSH1",
        "path": "0",
        "value": "0x60"
      },
      "1149": {
        "fn": "LLMMarket.getHosts",
        "offset": [
          1453,
          1461
        ],
        "op": "PUSH1",
        "path": "0",
        "statement": 7,
        "value": "0x1"
      },
      "1151": {
        "fn": "LLMMarket.getHosts",
        "offset": [
          1446,
          1461
        ],
        "op": "DUP1",
        "path": "0"
      },
      "1152": {
        "fn": "LLMMarket.getHosts",
        "offset": [
          1446,
          1461
        ],
        "op": "SLOAD",
        "path": "0"
      },
      "1153": {
        "fn": "LLMMarket.getHosts",
        "offset": [
          1446,
          1461
        ],
        "op": "DUP1",
        "path": "0"
      },
      "1154": {
        "fn": "LLMMarket.getHosts",
        "offset": [
          1446,
          1461
        ],
        "op": "PUSH1",
        "path": "0",
        "value": "0x20"
      },
      "1156": {
        "fn": "LLMMarket.getHosts",
        "offset": [
          1446,
          1461
        ],
        "op": "MUL",
        "path": "0"
      },
      "1157": {
        "fn": "LLMMarket.getHosts",
        "offset": [
          1446,
          1461
        ],
        "op": "PUSH1",
        "path": "0",
        "value": "0x20"
      },
      "1159": {
        "fn": "LLMMarket.getHosts",
        "offset": [
          1446,
          1461
        ],
        "op": "ADD",
        "path": "0"
      },
      "1160": {
        "fn": "LLMMarket.getHosts",
        "offset": [
          1446,
          1461
        ],
        "op": "PUSH1",
        "path": "0",
        "value": "0x40"
      },
      "1162": {
        "fn": "LLMMarket.getHosts",
        "offset": [
          1446,
          1461
        ],
        "op": "MLOAD",
        "path": "0"
      },
      "1163": {
        "fn": "LLMMarket.getHosts",
        "offset": [
          1446,
          1461
        ],
        "op": "SWAP1",
        "path": "0"
      },
      "1164": {
        "fn": "LLMMarket.getHosts",
        "offset": [
          1446,
          1461
        ],
        "op": "DUP2",
        "path": "0"
      },
      "1165": {
        "fn": "LLMMarket.getHosts",
        "offset": [
          1446,
          1461
        ],
        "op": "ADD",
        "path": "0"
      },
      "1166": {
        "fn": "LLMMarket.getHosts",
        "offset": [
          1446,
          1461
        ],
        "op": "PUSH1",
        "path": "0",
        "value": "0x40"
      },
      "1168": {
        "fn": "LLMMarket.getHosts",
        "offset": [
          1446,
          1461
        ],
        "op": "MSTORE",
        "path": "0"
      },
      "1169": {
        "fn": "LLMMarket.getHosts",
        "offset": [
          1446,
          1461
        ],
        "op": "DUP1",
        "path": "0"
      },
      "1170": {
        "fn": "LLMMarket.getHosts",
        "offset": [
          1446,
          1461
        ],
        "op": "SWAP3",
        "path": "0"
      },
      "1171": {
        "fn": "LLMMarket.getHosts",
        "offset": [
          1446,
          1461
        ],
        "op": "SWAP2",
        "path": "0"
      },
      "1172": {
        "fn": "LLMMarket.getHosts",
        "offset": [
          1446,
          1461
        ],
        "op": "SWAP1",
        "path": "0"
      },
      "1173": {
        "fn": "LLMMarket.getHosts",
        "offset": [
          1446,
          1461
        ],
        "op": "DUP2",
        "path": "0"
      },
      "1174": {
        "fn": "LLMMarket.getHosts",
        "offset": [
          1446,
          1461
        ],
        "op": "DUP2",
        "path": "0"
      },
      "1175": {
        "fn": "LLMMarket.getHosts",
        "offset": [
          1446,
          1461
        ],
        "op": "MSTORE",
        "path": "0"
      },
      "1176": {
        "fn": "LLMMarket.getHosts",
        "offset": [
          1446,
          1461
        ],
        "op": "PUSH1",
        "path": "0",
        "value": "0x20"
      },
      "1178": {
        "fn": "LLMMarket.getHosts",
        "offset": [
          1446,
          1461
        ],
        "op": "ADD",
        "path": "0"
      },
      "1179": {
        "fn": "LLMMarket.getHosts",
        "offset": [
          1446,
          1461
        ],
        "op": "PUSH1",
        "path": "0",
        "value": "0x0"
      },
      "1181": {
        "fn": "LLMMarket.getHosts",
        "offset": [
          1446,
          1461
        ],
        "op": "SWAP1",
        "path": "0"
      },
      "1182": {
        "fn": "LLMMarket.getHosts",
        "offset": [
          1446,
          1461
        ],
        "op": "JUMPDEST",
        "path": "0"
      },
      "1183": {
        "fn": "LLMMarket.getHosts",
        "offset": [
          1446,
          1461
        ],
        "op": "DUP3",
        "path": "0"
      },
      "1184": {
        "fn": "LLMMarket.getHosts",
        "offset": [
          1446,
          1461
        ],
        "op": "DUP3",
        "path": "0"
      },
      "1185": {
        "fn": "LLMMarket.getHosts",
        "offset": [
          1446,
          1461
        ],
        "op": "LT",
        "path": "0"
      },
      "1186": {
        "fn": "LLMMarket.getHosts",
        "offset": [
          1446,
          1461
        ],
        "op": "ISZERO",
        "path": "0"
      },
      "1187": {
        "fn": "LLMMarket.getHosts",
        "offset": [
          1446,
          1461
        ],
        "op": "PUSH2",
        "path": "0",
        "value": "0x585"
      },
      "1190": {
        "fn": "LLMMarket.getHosts",
        "offset": [
          1446,
          1461
        ],
        "op": "JUMPI",
        "path": "0"
      },
      "1191": {
        "fn": "LLMMarket.getHosts",
        "offset": [
          1446,
          1461
        ],
        "op": "DUP4",
        "path": "0"
      },
      "1192": {
        "fn": "LLMMarket.getHosts",
        "offset": [
          1446,
          1461
        ],
        "op": "DUP3",
        "path": "0"
      },
      "1193": {
        "fn": "LLMMarket.getHosts",
        "offset": [
          1446,
          1461
        ],
        "op": "SWAP1",
        "path": "0"
      },
      "1194": {
        "fn": "LLMMarket.getHosts",
        "offset": [
          1446,
          1461
        ],
        "op": "PUSH1",
        "path": "0",
        "value": "0x0"
      },
      "1196": {
        "fn": "LLMMarket.getHosts",
        "offset": [
          1446,
          1461
        ],
        "op": "MSTORE",
        "path": "0"
      },
      "1197": {
        "fn": "LLMMarket.getHosts",
        "offset": [
          1446,
          1461
        ],
        "op": "PUSH1",
        "path": "0",
        "value": "0x20"
      },
      "1199": {
        "fn": "LLMMarket.getHosts",
        "offset": [
          1446,
          1461
        ],
        "op": "PUSH1",
        "path": "0",
        "value": "0x0"
      },
      "1201": {
        "fn": "LLMMarket.getHosts",
        "offset": [
          1446,
          1461
        ],
        "op": "KECCAK256",
        "path": "0"
      },
      "1202": {
        "fn": "LLMMarket.getHosts",
        "offset": [
          1446,
          1461
        ],
        "op": "SWAP1",
        "path": "0"
      },
      "1203": {
        "fn": "LLMMarket.getHosts",
        "offset": [
          1446,
          1461
        ],
        "op": "PUSH1",
        "path": "0",
        "value": "0x3"
      },
      "1205": {
        "fn": "LLMMarket.getHosts",
        "offset": [
          1446,
          1461
        ],
        "op": "MUL",
        "path": "0"
      },
      "1206": {
        "fn": "LLMMarket.getHosts",
        "offset": [
          1446,
          1461
        ],
        "op": "ADD",
        "path": "0"
      },
      "1207": {
        "fn": "LLMMarket.getHosts",
        "offset": [
          1446,
          1461
        ],
        "op": "PUSH1",
        "path": "0",
        "value": "0x40"
      },
      "1209": {
        "fn": "LLMMarket.getHosts",
        "offset": [
          1446,
          1461
        ],
        "op": "MLOAD",
        "path": "0"
      },
      "1210": {
        "fn": "LLMMarket.getHosts",
        "offset": [
          1446,
          1461
        ],
        "op": "DUP1",
        "path": "0"
      },
      "1211": {
        "fn": "LLMMarket.getHosts",
        "offset": [
          1446,
          1461
        ],
        "op": "PUSH1",
        "path": "0",
        "value": "0x60"
      },
      "1213": {
        "fn": "LLMMarket.getHosts",
        "offset": [
          1446,
          1461
        ],
        "op": "ADD",
        "path": "0"
      },
      "1214": {
        "fn": "LLMMarket.getHosts",
        "offset": [
          1446,
          1461
        ],
        "op": "PUSH1",
        "path": "0",
        "value": "0x40"
      },
      "1216": {
        "fn": "LLMMarket.getHosts",
        "offset": [
          1446,
          1461
        ],
        "op": "MSTORE",
        "path": "0"
      },
      "1217": {
        "fn": "LLMMarket.getHosts",
        "offset": [
          1446,
          1461
        ],
        "op": "SWAP1",
        "path": "0"
      },
      "1218": {
        "fn": "LLMMarket.getHosts",
        "offset": [
          1446,
          1461
        ],
        "op": "DUP2",
        "path": "0"
      },
      "1219": {
        "fn": "LLMMarket.getHosts",
        "offset": [
          1446,
          1461
        ],
        "op": "PUSH1",
        "path": "0",
        "value": "0x0"
      },
      "1221": {
        "fn": "LLMMarket.getHosts",
        "offset": [
          1446,
          1461
        ],
        "op": "DUP3",
        "path": "0"
      },
      "1222": {
        "fn": "LLMMarket.getHosts",
        "offset": [
          1446,
          1461
        ],
        "op": "ADD",
        "path": "0"
      },
      "1223": {
        "fn": "LLMMarket.getHosts",
        "offset": [
          1446,
          1461
        ],
        "op": "DUP1",
        "path": "0"
      },
      "1224": {
        "fn": "LLMMarket.getHosts",
        "offset": [
          1446,
          1461
        ],
        "op": "SLOAD",
        "path": "0"
      },
      "1225": {
        "fn": "LLMMarket.getHosts",
        "offset": [
          1446,
          1461
        ],
        "op": "PUSH2",
        "path": "0",
        "value": "0x4D1"
      },
      "1228": {
        "fn": "LLMMarket.getHosts",
        "offset": [
          1446,
          1461
        ],
        "op": "SWAP1",
        "path": "0"
      },
      "1229": {
        "fn": "LLMMarket.getHosts",
        "offset": [
          1446,
          1461
        ],
        "op": "PUSH2",
        "path": "0",
        "value": "0xC1E"
      },
      "1232": {
        "fn": "LLMMarket.getHosts",
        "jump": "i",
        "offset": [
          1446,
          1461
        ],
        "op": "JUMP",
        "path": "0"
      },
      "1233": {
        "fn": "LLMMarket.getHosts",
        "offset": [
          1446,
          1461
        ],
        "op": "JUMPDEST",
        "path": "0"
      },
      "1234": {
        "fn": "LLMMarket.getHosts",
        "offset": [
          1446,
          1461
        ],
        "op": "DUP1",
        "path": "0"
      },
      "1235": {
        "fn": "LLMMarket.getHosts",
        "offset": [
          1446,
          1461
        ],
        "op": "PUSH1",
        "path": "0",
        "value": "0x1F"
      },
      "1237": {
        "fn": "LLMMarket.getHosts",
        "offset": [
          1446,
          1461
        ],
        "op": "ADD",
        "path": "0"
      },
      "1238": {
        "fn": "LLMMarket.getHosts",
        "offset": [
          1446,
          1461
        ],
        "op": "PUSH1",
        "path": "0",
        "value": "0x20"
      },
      "1240": {
        "fn": "LLMMarket.getHosts",
        "offset": [
          1446,
          1461
        ],
        "op": "DUP1",
        "path": "0"
      },
      "1241": {
        "fn": "LLMMarket.getHosts",
        "offset": [
          1446,
          1461
        ],
        "op": "SWAP2",
        "path": "0"
      },
      "1242": {
        "fn": "LLMMarket.getHosts",
        "offset": [
          1446,
          1461
        ],
        "op": "DIV",
        "path": "0"
      },
      "1243": {
        "fn": "LLMMarket.getHosts",
        "offset": [
          1446,
          1461
        ],
        "op": "MUL",
        "path": "0"
      },
      "1244": {
        "fn": "LLMMarket.getHosts",
        "offset": [
          1446,
          1461
        ],
        "op": "PUSH1",
        "path": "0",
        "value": "0x20"
      },
      "1246": {
        "fn": "LLMMarket.getHosts",
        "offset": [
          1446,
          1461
        ],
        "op": "ADD",
        "path": "0"
      },
      "1247": {
        "fn": "LLMMarket.getHosts",
        "offset": [
          1446,
          1461
        ],
        "op": "PUSH1",
        "path": "0",
        "value": "0x40"
      },
      "1249": {
        "fn": "LLMMarket.getHosts",
        "offset": [
          1446,
          1461
        ],
        "op": "MLOAD",
        "path": "0"
      },
      "1250": {
        "fn": "LLMMarket.getHosts",
        "offset": [
          1446,
          1461
        ],
        "op": "SWAP1",
        "path": "0"
      },
      "1251": {
        "fn": "LLMMarket.getHosts",
        "offset": [
          1446,
          1461
        ],
        "op": "DUP2",
        "path": "0"
      },
      "1252": {
        "fn": "LLMMarket.getHosts",
        "offset": [
          1446,
          1461
        ],
        "op": "ADD",
        "path": "0"
      },
      "1253": {
        "fn": "LLMMarket.getHosts",
        "offset": [
          1446,
          1461
        ],
        "op": "PUSH1",
        "path": "0",
        "value": "0x40"
      },
      "1255": {
        "fn": "LLMMarket.getHosts",
        "offset": [
          1446,
          1461
        ],
        "op": "MSTORE",
        "path": "0"
      },
      "1256": {
        "fn": "LLMMarket.getHosts",
        "offset": [
          1446,
          1461
        ],
        "op": "DUP1",
        "path": "0"
      },
      "1257": {
        "fn": "LLMMarket.getHosts",
        "offset": [
          1446,
          1461
        ],
        "op": "SWAP3",
        "path": "0"
      },
      "1258": {
        "fn": "LLMMarket.getHosts",
        "offset": [
          1446,
          1461
        ],
        "op": "SWAP2",
        "path": "0"
      },
      "1259": {
        "fn": "LLMMarket.getHosts",
        "offset": [
          1446,
          1461
        ],
        "op": "SWAP1",
        "path": "0"
      },
      "1260": {
        "fn": "LLMMarket.getHosts",
        "offset": [
          1446,
          1461
        ],
        "op": "DUP2",
        "path": "0"
      },
      "1261": {
        "fn": "LLMMarket.getHosts",
        "offset": [
          1446,
          1461
        ],
        "op": "DUP2",
        "path": "0"
      },
      "1262": {
        "fn": "LLMMarket.getHosts",
        "offset": [
          1446,
          1461
        ],
        "op": "MSTORE",
        "path": "0"
      },
      "1263": {
        "fn": "LLMMarket.getHosts",
        "offset": [
          1446,
          1461
        ],
        "op": "PUSH1",
        "path": "0",
        "value": "0x20"
      },
      "1265": {
        "fn": "LLMMarket.getHosts",
        "offset": [
          1446,
          1461
        ],
        "op": "ADD",
        "path": "0"
      },
      "1266": {
        "fn": "LLMMarket.getHosts",
        "offset": [
          1446,
          1461
        ],
        "op": "DUP3",
        "path": "0"
      },
      "1267": {
        "fn": "LLMMarket.getHosts",
        "offset": [
          1446,
          1461
        ],
        "op": "DUP1",
        "path": "0"
      },
      "1268": {
        "fn": "LLMMarket.getHosts",
        "offset": [
          1446,
          1461
        ],
        "op": "SLOAD",
        "path": "0"
      },
      "1269": {
        "fn": "LLMMarket.getHosts",
        "offset": [
          1446,
          1461
        ],
        "op": "PUSH2",
        "path": "0",
        "value": "0x4FD"
      },
      "1272": {
        "fn": "LLMMarket.getHosts",
        "offset": [
          1446,
          1461
        ],
        "op": "SWAP1",
        "path": "0"
      },
      "1273": {
        "fn": "LLMMarket.getHosts",
        "offset": [
          1446,
          1461
        ],
        "op": "PUSH2",
        "path": "0",
        "value": "0xC1E"
      },
      "1276": {
        "fn": "LLMMarket.getHosts",
        "jump": "i",
        "offset": [
          1446,
          1461
        ],
        "op": "JUMP",
        "path": "0"
      },
      "1277": {
        "fn": "LLMMarket.getHosts",
        "offset": [
          1446,
          1461
        ],
        "op": "JUMPDEST",
        "path": "0"
      },
      "1278": {
        "fn": "LLMMarket.getHosts",
        "offset": [
          1446,
          1461
        ],
        "op": "DUP1",
        "path": "0"
      },
      "1279": {
        "fn": "LLMMarket.getHosts",
        "offset": [
          1446,
          1461
        ],
        "op": "ISZERO",
        "path": "0"
      },
      "1280": {
        "fn": "LLMMarket.getHosts",
        "offset": [
          1446,
          1461
        ],
        "op": "PUSH2",
        "path": "0",
        "value": "0x54A"
      },
      "1283": {
        "fn": "LLMMarket.getHosts",
        "offset": [
          1446,
          1461
        ],
        "op": "JUMPI",
        "path": "0"
      },
      "1284": {
        "fn": "LLMMarket.getHosts",
        "offset": [
          1446,
          1461
        ],
        "op": "DUP1",
        "path": "0"
      },
      "1285": {
        "fn": "LLMMarket.getHosts",
        "offset": [
          1446,
          1461
        ],
        "op": "PUSH1",
        "path": "0",
        "value": "0x1F"
      },
      "1287": {
        "fn": "LLMMarket.getHosts",
        "offset": [
          1446,
          1461
        ],
        "op": "LT",
        "path": "0"
      },
      "1288": {
        "fn": "LLMMarket.getHosts",
        "offset": [
          1446,
          1461
        ],
        "op": "PUSH2",
        "path": "0",
        "value": "0x51F"
      },
      "1291": {
        "fn": "LLMMarket.getHosts",
        "offset": [
          1446,
          1461
        ],
        "op": "JUMPI",
        "path": "0"
      },
      "1292": {
        "fn": "LLMMarket.getHosts",
        "offset": [
          1446,
          1461
        ],
        "op": "PUSH2",
        "path": "0",
        "value": "0x100"
      },
      "1295": {
        "fn": "LLMMarket.getHosts",
        "offset": [
          1446,
          1461
        ],
        "op": "DUP1",
        "path": "0"
      },
      "1296": {
        "fn": "LLMMarket.getHosts",
        "offset": [
          1446,
          1461
        ],
        "op": "DUP4",
        "path": "0"
      },
      "1297": {
        "fn": "LLMMarket.getHosts",
        "offset": [
          1446,
          1461
        ],
        "op": "SLOAD",
        "path": "0"
      },
      "1298": {
        "fn": "LLMMarket.getHosts",
        "offset": [
          1446,
          1461
        ],
        "op": "DIV",
        "path": "0"
      },
      "1299": {
        "fn": "LLMMarket.getHosts",
        "offset": [
          1446,
          1461
        ],
        "op": "MUL",
        "path": "0"
      },
      "1300": {
        "fn": "LLMMarket.getHosts",
        "offset": [
          1446,
          1461
        ],
        "op": "DUP4",
        "path": "0"
      },
      "1301": {
        "fn": "LLMMarket.getHosts",
        "offset": [
          1446,
          1461
        ],
        "op": "MSTORE",
        "path": "0"
      },
      "1302": {
        "fn": "LLMMarket.getHosts",
        "offset": [
          1446,
          1461
        ],
        "op": "SWAP2",
        "path": "0"
      },
      "1303": {
        "fn": "LLMMarket.getHosts",
        "offset": [
          1446,
          1461
        ],
        "op": "PUSH1",
        "path": "0",
        "value": "0x20"
      },
      "1305": {
        "fn": "LLMMarket.getHosts",
        "offset": [
          1446,
          1461
        ],
        "op": "ADD",
        "path": "0"
      },
      "1306": {
        "fn": "LLMMarket.getHosts",
        "offset": [
          1446,
          1461
        ],
        "op": "SWAP2",
        "path": "0"
      },
      "1307": {
        "fn": "LLMMarket.getHosts",
        "offset": [
          1446,
          1461
        ],
        "op": "PUSH2",
        "path": "0",
        "value": "0x54A"
      },
      "1310": {
        "fn": "LLMMarket.getHosts",
        "offset": [
          1446,
          1461
        ],
        "op": "JUMP",
        "path": "0"
      },
      "1311": {
        "fn": "LLMMarket.getHosts",
        "offset": [
          1446,
          1461
        ],
        "op": "JUMPDEST",
        "path": "0"
      },
      "1312": {
        "fn": "LLMMarket.getHosts",
        "offset": [
          1446,
          1461
        ],
        "op": "DUP3",
        "path": "0"
      },
      "1313": {
        "fn": "LLMMarket.getHosts",
        "offset": [
          1446,
          1461
        ],
        "op": "ADD",
        "path": "0"
      },
      "1314": {
        "fn": "LLMMarket.getHosts",
        "offset": [
          1446,
          1461
        ],
        "op": "SWAP2",
        "path": "0"
      },
      "1315": {
        "fn": "LLMMarket.getHosts",
        "offset": [
          1446,
          1461
        ],
        "op": "SWAP1",
        "path": "0"
      },
      "1316": {
        "fn": "LLMMarket.getHosts",
        "offset": [
          1446,
          1461
        ],
        "op": "PUSH1",
        "path": "0",
        "value": "0x0"
      },
      "1318": {
        "fn": "LLMMarket.getHosts",
        "offset": [
          1446,
          1461
        ],
        "op": "MSTORE",
        "path": "0"
      },
      "1319": {
        "fn": "LLMMarket.getHosts",
        "offset": [
          1446,
          1461
        ],
        "op": "PUSH1",
        "path": "0",
        "value": "0x20"
      },
      "1321": {
        "fn": "LLMMarket.getHosts",
        "offset": [
          1446,
          1461
        ],
        "op": "PUSH1",
        "path": "0",
        "value": "0x0"
      },
      "1323": {
        "fn": "LLMMarket.getHosts",
        "offset": [
          1446,
          1461
        ],
        "op": "KECCAK256",
        "path": "0"
      },
      "1324": {
        "fn": "LLMMarket.getHosts",
        "offset": [
          1446,
          1461
        ],
        "op": "SWAP1",
        "path": "0"
      },
      "1325": {
        "fn": "LLMMarket.getHosts",
        "offset": [
          1446,
          1461
        ],
        "op": "JUMPDEST",
        "path": "0"
      },
      "1326": {
        "fn": "LLMMarket.getHosts",
        "offset": [
          1446,
          1461
        ],
        "op": "DUP2",
        "path": "0"
      },
      "1327": {
        "fn": "LLMMarket.getHosts",
        "offset": [
          1446,
          1461
        ],
        "op": "SLOAD",
        "path": "0"
      },
      "1328": {
        "fn": "LLMMarket.getHosts",
        "offset": [
          1446,
          1461
        ],
        "op": "DUP2",
        "path": "0"
      },
      "1329": {
        "fn": "LLMMarket.getHosts",
        "offset": [
          1446,
          1461
        ],
        "op": "MSTORE",
        "path": "0"
      },
      "1330": {
        "fn": "LLMMarket.getHosts",
        "offset": [
          1446,
          1461
        ],
        "op": "SWAP1",
        "path": "0"
      },
      "1331": {
        "fn": "LLMMarket.getHosts",
        "offset": [
          1446,
          1461
        ],
        "op": "PUSH1",
        "path": "0",
        "value": "0x1"
      },
      "1333": {
        "fn": "LLMMarket.getHosts",
        "offset": [
          1446,
          1461
        ],
        "op": "ADD",
        "path": "0"
      },
      "1334": {
        "fn": "LLMMarket.getHosts",
        "offset": [
          1446,
          1461
        ],
        "op": "SWAP1",
        "path": "0"
      },
      "1335": {
        "fn": "LLMMarket.getHosts",
        "offset": [
          1446,
          1461
        ],
        "op": "PUSH1",
        "path": "0",
        "value": "0x20"
      },
      "1337": {
        "fn": "LLMMarket.getHosts",
        "offset": [
          1446,
          1461
        ],
        "op": "ADD",
        "path": "0"
      },
      "1338": {
        "fn": "LLMMarket.getHosts",
        "offset": [
          1446,
          1461
        ],
        "op": "DUP1",
        "path": "0"
      },
      "1339": {
        "fn": "LLMMarket.getHosts",
        "offset": [
          1446,
          1461
        ],
        "op": "DUP4",
        "path": "0"
      },
      "1340": {
        "fn": "LLMMarket.getHosts",
        "offset": [
          1446,
          1461
        ],
        "op": "GT",
        "path": "0"
      },
      "1341": {
        "fn": "LLMMarket.getHosts",
        "offset": [
          1446,
          1461
        ],
        "op": "PUSH2",
        "path": "0",
        "value": "0x52D"
      },
      "1344": {
        "fn": "LLMMarket.getHosts",
        "offset": [
          1446,
          1461
        ],
        "op": "JUMPI",
        "path": "0"
      },
      "1345": {
        "fn": "LLMMarket.getHosts",
        "offset": [
          1446,
          1461
        ],
        "op": "DUP3",
        "path": "0"
      },
      "1346": {
        "fn": "LLMMarket.getHosts",
        "offset": [
          1446,
          1461
        ],
        "op": "SWAP1",
        "path": "0"
      },
      "1347": {
        "fn": "LLMMarket.getHosts",
        "offset": [
          1446,
          1461
        ],
        "op": "SUB",
        "path": "0"
      },
      "1348": {
        "fn": "LLMMarket.getHosts",
        "offset": [
          1446,
          1461
        ],
        "op": "PUSH1",
        "path": "0",
        "value": "0x1F"
      },
      "1350": {
        "fn": "LLMMarket.getHosts",
        "offset": [
          1446,
          1461
        ],
        "op": "AND",
        "path": "0"
      },
      "1351": {
        "fn": "LLMMarket.getHosts",
        "offset": [
          1446,
          1461
        ],
        "op": "DUP3",
        "path": "0"
      },
      "1352": {
        "fn": "LLMMarket.getHosts",
        "offset": [
          1446,
          1461
        ],
        "op": "ADD",
        "path": "0"
      },
      "1353": {
        "fn": "LLMMarket.getHosts",
        "offset": [
          1446,
          1461
        ],
        "op": "SWAP2",
        "path": "0"
      },
      "1354": {
        "fn": "LLMMarket.getHosts",
        "offset": [
          1446,
          1461
        ],
        "op": "JUMPDEST",
        "path": "0"
      },
      "1355": {
        "op": "POP"
      },
      "1356": {
        "op": "POP"
      },
      "1357": {
        "op": "POP"
      },
      "1358": {
        "fn": "LLMMarket.getHosts",
        "offset": [
          1446,
          1461
        ],
        "op": "SWAP2",
        "path": "0"
      },
      "1359": {
        "fn": "LLMMarket.getHosts",
        "offset": [
          1446,
          1461
        ],
        "op": "DUP4",
        "path": "0"
      },
      "1360": {
        "fn": "LLMMarket.getHosts",
        "offset": [
          1446,
          1461
        ],
        "op": "MSTORE",
        "path": "0"
      },
      "1361": {
        "op": "POP"
      },
      "1362": {
        "op": "POP"
      },
      "1363": {
        "fn": "LLMMarket.getHosts",
        "offset": [
          1446,
          1461
        ],
        "op": "PUSH1",
        "path": "0",
        "value": "0x1"
      },
      "1365": {
        "fn": "LLMMarket.getHosts",
        "offset": [
          1446,
          1461
        ],
        "op": "DUP3",
        "path": "0"
      },
      "1366": {
        "fn": "LLMMarket.getHosts",
        "offset": [
          1446,
          1461
        ],
        "op": "DUP2",
        "path": "0"
      },
      "1367": {
        "fn": "LLMMarket.getHosts",
        "offset": [
          1446,
          1461
        ],
        "op": "ADD",
        "path": "0"
      },
      "1368": {
        "fn": "LLMMarket.getHosts",
        "offset": [
          1446,
          1461
        ],
        "op": "SLOAD",
        "path": "0"
      },
      "1369": {
        "op": "PUSH1",
        "value": "0x1"
      },
      "1371": {
        "op": "PUSH1",
        "value": "0x1"
      },
      "1373": {
        "op": "PUSH1",
        "value": "0xA0"
      },
      "1375": {
        "op": "SHL"
      },
      "1376": {
        "op": "SUB"
      },
      "1377": {
        "fn": "LLMMarket.getHosts",
        "offset": [
          1446,
          1461
        ],
        "op": "AND",
        "path": "0"
      },
      "1378": {
        "fn": "LLMMarket.getHosts",
        "offset": [
          1446,
          1461
        ],
        "op": "PUSH1",
        "path": "0",
        "value": "0x20"
      },
      "1380": {
        "fn": "LLMMarket.getHosts",
        "offset": [
          1446,
          1461
        ],
        "op": "DUP1",
        "path": "0"
      },
      "1381": {
        "fn": "LLMMarket.getHosts",
        "offset": [
          1446,
          1461
        ],
        "op": "DUP5",
        "path": "0"
      },
      "1382": {
        "fn": "LLMMarket.getHosts",
        "offset": [
          1446,
          1461
        ],
        "op": "ADD",
        "path": "0"
      },
      "1383": {
        "fn": "LLMMarket.getHosts",
        "offset": [
          1446,
          1461
        ],
        "op": "SWAP2",
        "path": "0"
      },
      "1384": {
        "fn": "LLMMarket.getHosts",
        "offset": [
          1446,
          1461
        ],
        "op": "SWAP1",
        "path": "0"
      },
      "1385": {
        "fn": "LLMMarket.getHosts",
        "offset": [
          1446,
          1461
        ],
        "op": "SWAP2",
        "path": "0"
      },
      "1386": {
        "fn": "LLMMarket.getHosts",
        "offset": [
          1446,
          1461
        ],
        "op": "MSTORE",
        "path": "0"
      },
      "1387": {
        "fn": "LLMMarket.getHosts",
        "offset": [
          1446,
          1461
        ],
        "op": "PUSH1",
        "path": "0",
        "value": "0x2"
      },
      "1389": {
        "fn": "LLMMarket.getHosts",
        "offset": [
          1446,
          1461
        ],
        "op": "SWAP1",
        "path": "0"
      },
      "1390": {
        "fn": "LLMMarket.getHosts",
        "offset": [
          1446,
          1461
        ],
        "op": "SWAP4",
        "path": "0"
      },
      "1391": {
        "fn": "LLMMarket.getHosts",
        "offset": [
          1446,
          1461
        ],
        "op": "ADD",
        "path": "0"
      },
      "1392": {
        "fn": "LLMMarket.getHosts",
        "offset": [
          1446,
          1461
        ],
        "op": "SLOAD",
        "path": "0"
      },
      "1393": {
        "fn": "LLMMarket.getHosts",
        "offset": [
          1446,
          1461
        ],
        "op": "PUSH1",
        "path": "0",
        "value": "0x40"
      },
      "1395": {
        "fn": "LLMMarket.getHosts",
        "offset": [
          1446,
          1461
        ],
        "op": "SWAP1",
        "path": "0"
      },
      "1396": {
        "fn": "LLMMarket.getHosts",
        "offset": [
          1446,
          1461
        ],
        "op": "SWAP3",
        "path": "0"
      },
      "1397": {
        "fn": "LLMMarket.getHosts",
        "offset": [
          1446,
          1461
        ],
        "op": "ADD",
        "path": "0"
      },
      "1398": {
        "fn": "LLMMarket.getHosts",
        "offset": [
          1446,
          1461
        ],
        "op": "SWAP2",
        "path": "0"
      },
      "1399": {
        "fn": "LLMMarket.getHosts",
        "offset": [
          1446,
          1461
        ],
        "op": "SWAP1",
        "path": "0"
      },
      "1400": {
        "fn": "LLMMarket.getHosts",
        "offset": [
          1446,
          1461
        ],
        "op": "SWAP2",
        "path": "0"
      },
      "1401": {
        "fn": "LLMMarket.getHosts",
        "offset": [
          1446,
          1461
        ],
        "op": "MSTORE",
        "path": "0"
      },
      "1402": {
        "fn": "LLMMarket.getHosts",
        "offset": [
          1446,
          1461
        ],
        "op": "SWAP2",
        "path": "0"
      },
      "1403": {
        "fn": "LLMMarket.getHosts",
        "offset": [
          1446,
          1461
        ],
        "op": "DUP4",
        "path": "0"
      },
      "1404": {
        "fn": "LLMMarket.getHosts",
        "offset": [
          1446,
          1461
        ],
        "op": "MSTORE",
        "path": "0"
      },
      "1405": {
        "fn": "LLMMarket.getHosts",
        "offset": [
          1446,
          1461
        ],
        "op": "SWAP3",
        "path": "0"
      },
      "1406": {
        "fn": "LLMMarket.getHosts",
        "offset": [
          1446,
          1461
        ],
        "op": "ADD",
        "path": "0"
      },
      "1407": {
        "fn": "LLMMarket.getHosts",
        "offset": [
          1446,
          1461
        ],
        "op": "SWAP2",
        "path": "0"
      },
      "1408": {
        "fn": "LLMMarket.getHosts",
        "offset": [
          1446,
          1461
        ],
        "op": "ADD",
        "path": "0"
      },
      "1409": {
        "fn": "LLMMarket.getHosts",
        "offset": [
          1446,
          1461
        ],
        "op": "PUSH2",
        "path": "0",
        "value": "0x49E"
      },
      "1412": {
        "fn": "LLMMarket.getHosts",
        "offset": [
          1446,
          1461
        ],
        "op": "JUMP",
        "path": "0"
      },
      "1413": {
        "fn": "LLMMarket.getHosts",
        "offset": [
          1446,
          1461
        ],
        "op": "JUMPDEST",
        "path": "0"
      },
      "1414": {
        "fn": "LLMMarket.getHosts",
        "offset": [
          1446,
          1461
        ],
        "op": "POP",
        "path": "0"
      },
      "1415": {
        "fn": "LLMMarket.getHosts",
        "offset": [
          1446,
          1461
        ],
        "op": "POP",
        "path": "0"
      },
      "1416": {
        "fn": "LLMMarket.getHosts",
        "offset": [
          1446,
          1461
        ],
        "op": "POP",
        "path": "0"
      },
      "1417": {
        "fn": "LLMMarket.getHosts",
        "offset": [
          1446,
          1461
        ],
        "op": "POP",
        "path": "0"
      },
      "1418": {
        "fn": "LLMMarket.getHosts",
        "offset": [
          1446,
          1461
        ],
        "op": "SWAP1",
        "path": "0"
      },
      "1419": {
        "fn": "LLMMarket.getHosts",
        "offset": [
          1446,
          1461
        ],
        "op": "POP",
        "path": "0"
      },
      "1420": {
        "fn": "LLMMarket.getHosts",
        "offset": [
          1377,
          1468
        ],
        "op": "SWAP1",
        "path": "0"
      },
      "1421": {
        "fn": "LLMMarket.getHosts",
        "jump": "o",
        "offset": [
          1377,
          1468
        ],
        "op": "JUMP",
        "path": "0"
      },
      "1422": {
        "offset": [
          560,
          616
        ],
        "op": "JUMPDEST",
        "path": "0"
      },
      "1423": {
        "fn": "LLMMarket.getHosts",
        "offset": [
          560,
          616
        ],
        "op": "PUSH1",
        "path": "0",
        "value": "0x2"
      },
      "1425": {
        "fn": "LLMMarket.getHosts",
        "offset": [
          560,
          616
        ],
        "op": "PUSH1",
        "path": "0",
        "value": "0x20"
      },
      "1427": {
        "fn": "LLMMarket.getHosts",
        "offset": [
          560,
          616
        ],
        "op": "MSTORE",
        "path": "0"
      },
      "1428": {
        "fn": "LLMMarket.getHosts",
        "offset": [
          560,
          616
        ],
        "op": "DUP2",
        "path": "0"
      },
      "1429": {
        "fn": "LLMMarket.getHosts",
        "offset": [
          560,
          616
        ],
        "op": "PUSH1",
        "path": "0",
        "value": "0x0"
      },
      "1431": {
        "fn": "LLMMarket.getHosts",
        "offset": [
          560,
          616
        ],
        "op": "MSTORE",
        "path": "0"
      },
      "1432": {
        "fn": "LLMMarket.getHosts",
        "offset": [
          560,
          616
        ],
        "op": "PUSH1",
        "path": "0",
        "value": "0x40"
      },
      "1434": {
        "fn": "LLMMarket.getHosts",
        "offset": [
          560,
          616
        ],
        "op": "PUSH1",
        "path": "0",
        "value": "0x0"
      },
      "1436": {
        "fn": "LLMMarket.getHosts",
        "offset": [
          560,
          616
        ],
        "op": "KECCAK256",
        "path": "0"
      },
      "1437": {
        "fn": "LLMMarket.getHosts",
        "offset": [
          560,
          616
        ],
        "op": "DUP2",
        "path": "0"
      },
      "1438": {
        "fn": "LLMMarket.getHosts",
        "offset": [
          560,
          616
        ],
        "op": "DUP2",
        "path": "0"
      },
      "1439": {
        "fn": "LLMMarket.getHosts",
        "offset": [
          560,
          616
        ],
        "op": "SLOAD",
        "path": "0"
      },
      "1440": {
        "fn": "LLMMarket.getHosts",
        "offset": [
          560,
          616
        ],
        "op": "DUP2",
        "path": "0"
      },
      "1441": {
        "fn": "LLMMarket.getHosts",
        "offset": [
          560,
          616
        ],
        "op": "LT",
        "path": "0"
      },
      "1442": {
        "fn": "LLMMarket.getHosts",
        "offset": [
          560,
          616
        ],
        "op": "PUSH2",
        "path": "0",
        "value": "0x5AA"
      },
      "1445": {
        "fn": "LLMMarket.getHosts",
        "offset": [
          560,
          616
        ],
        "op": "JUMPI",
        "path": "0"
      },
      "1446": {
        "fn": "LLMMarket.getHosts",
        "offset": [
          560,
          616
        ],
        "op": "PUSH1",
        "path": "0",
        "value": "0x0"
      },
      "1448": {
        "fn": "LLMMarket.getHosts",
        "offset": [
          560,
          616
        ],
        "op": "DUP1",
        "path": "0"
      },
      "1449": {
        "fn": "LLMMarket.getHosts",
        "offset": [
          560,
          616
        ],
        "op": "REVERT",
        "path": "0"
      },
      "1450": {
        "fn": "LLMMarket.getHosts",
        "offset": [
          560,
          616
        ],
        "op": "JUMPDEST",
        "path": "0"
      },
      "1451": {
        "fn": "LLMMarket.getHosts",
        "offset": [
          560,
          616
        ],
        "op": "PUSH1",
        "path": "0",
        "value": "0x0"
      },
      "1453": {
        "fn": "LLMMarket.getHosts",
        "offset": [
          560,
          616
        ],
        "op": "SWAP2",
        "path": "0"
      },
      "1454": {
        "fn": "LLMMarket.getHosts",
        "offset": [
          560,
          616
        ],
        "op": "DUP3",
        "path": "0"
      },
      "1455": {
        "fn": "LLMMarket.getHosts",
        "offset": [
          560,
          616
        ],
        "op": "MSTORE",
        "path": "0"
      },
      "1456": {
        "fn": "LLMMarket.getHosts",
        "offset": [
          560,
          616
        ],
        "op": "PUSH1",
        "path": "0",
        "value": "0x20"
      },
      "1458": {
        "fn": "LLMMarket.getHosts",
        "offset": [
          560,
          616
        ],
        "op": "SWAP1",
        "path": "0"
      },
      "1459": {
        "fn": "LLMMarket.getHosts",
        "offset": [
          560,
          616
        ],
        "op": "SWAP2",
        "path": "0"
      },
      "1460": {
        "fn": "LLMMarket.getHosts",
        "offset": [
          560,
          616
        ],
        "op": "KECCAK256",
        "path": "0"
      },
      "1461": {
        "fn": "LLMMarket.getHosts",
        "offset": [
          560,
          616
        ],
        "op": "PUSH1",
        "path": "0",
        "value": "0x2"
      },
      "1463": {
        "fn": "LLMMarket.getHosts",
        "offset": [
          560,
          616
        ],
        "op": "SWAP1",
        "path": "0"
      },
      "1464": {
        "fn": "LLMMarket.getHosts",
        "offset": [
          560,
          616
        ],
        "op": "SWAP2",
        "path": "0"
      },
      "1465": {
        "fn": "LLMMarket.getHosts",
        "offset": [
          560,
          616
        ],
        "op": "MUL",
        "path": "0"
      },
      "1466": {
        "fn": "LLMMarket.getHosts",
        "offset": [
          560,
          616
        ],
        "op": "ADD",
        "path": "0"
      },
      "1467": {
        "fn": "LLMMarket.getHosts",
        "offset": [
          560,
          616
        ],
        "op": "DUP1",
        "path": "0"
      },
      "1468": {
        "fn": "LLMMarket.getHosts",
        "offset": [
          560,
          616
        ],
        "op": "SLOAD",
        "path": "0"
      },
      "1469": {
        "fn": "LLMMarket.getHosts",
        "offset": [
          560,
          616
        ],
        "op": "PUSH1",
        "path": "0",
        "value": "0x1"
      },
      "1471": {
        "fn": "LLMMarket.getHosts",
        "offset": [
          560,
          616
        ],
        "op": "SWAP1",
        "path": "0"
      },
      "1472": {
        "fn": "LLMMarket.getHosts",
        "offset": [
          560,
          616
        ],
        "op": "SWAP2",
        "path": "0"
      },
      "1473": {
        "fn": "LLMMarket.getHosts",
        "offset": [
          560,
          616
        ],
        "op": "ADD",
        "path": "0"
      },
      "1474": {
        "fn": "LLMMarket.getHosts",
        "offset": [
          560,
          616
        ],
        "op": "SLOAD",
        "path": "0"
      },
      "1475": {
        "fn": "LLMMarket.getHosts",
        "offset": [
          560,
          616
        ],
        "op": "SWAP1",
        "path": "0"
      },
      "1476": {
        "fn": "LLMMarket.getHosts",
        "offset": [
          560,
          616
        ],
        "op": "SWAP3",
        "path": "0"
      },
      "1477": {
        "op": "POP"
      },
      "1478": {
        "offset": [
          560,
          616
        ],
        "op": "SWAP1",
        "path": "0"
      },
      "1479": {
        "op": "POP"
      },
      "1480": {
        "offset": [
          560,
          616
        ],
        "op": "DUP3",
        "path": "0"
      },
      "1481": {
        "fn": "LLMMarket.getHosts",
        "jump": "o",
        "offset": [
          560,
          616
        ],
        "op": "JUMP",
        "path": "0"
      },
      "1482": {
        "fn": "LLMMarket.clearListAndReedemFunds",
        "offset": [
          1773,
          2150
        ],
        "op": "JUMPDEST",
        "path": "0"
      },
      "1483": {
        "fn": "LLMMarket.clearListAndReedemFunds",
        "offset": [
          1826,
          1830
        ],
        "op": "PUSH1",
        "path": "0",
        "value": "0x0"
      },
      "1485": {
        "fn": "LLMMarket.clearListAndReedemFunds",
        "offset": [
          1826,
          1830
        ],
        "op": "DUP1",
        "path": "0"
      },
      "1486": {
        "fn": "LLMMarket.clearListAndReedemFunds",
        "offset": [
          1826,
          1830
        ],
        "op": "DUP1",
        "path": "0"
      },
      "1487": {
        "fn": "LLMMarket.clearListAndReedemFunds",
        "offset": [
          1876,
          2028
        ],
        "op": "JUMPDEST",
        "path": "0"
      },
      "1488": {
        "fn": "LLMMarket.clearListAndReedemFunds",
        "offset": [
          1911,
          1921
        ],
        "op": "CALLER",
        "path": "0"
      },
      "1489": {
        "fn": "LLMMarket.clearListAndReedemFunds",
        "offset": [
          1896,
          1922
        ],
        "op": "PUSH1",
        "path": "0",
        "value": "0x0"
      },
      "1491": {
        "fn": "LLMMarket.clearListAndReedemFunds",
        "offset": [
          1896,
          1922
        ],
        "op": "SWAP1",
        "path": "0"
      },
      "1492": {
        "fn": "LLMMarket.clearListAndReedemFunds",
        "offset": [
          1896,
          1922
        ],
        "op": "DUP2",
        "path": "0"
      },
      "1493": {
        "fn": "LLMMarket.clearListAndReedemFunds",
        "offset": [
          1896,
          1922
        ],
        "op": "MSTORE",
        "path": "0"
      },
      "1494": {
        "fn": "LLMMarket.clearListAndReedemFunds",
        "offset": [
          1896,
          1910
        ],
        "op": "PUSH1",
        "path": "0",
        "value": "0x2"
      },
      "1496": {
        "fn": "LLMMarket.clearListAndReedemFunds",
        "offset": [
          1896,
          1922
        ],
        "op": "PUSH1",
        "path": "0",
        "value": "0x20"
      },
      "1498": {
        "fn": "LLMMarket.clearListAndReedemFunds",
        "offset": [
          1896,
          1922
        ],
        "op": "MSTORE",
        "path": "0"
      },
      "1499": {
        "fn": "LLMMarket.clearListAndReedemFunds",
        "offset": [
          1896,
          1922
        ],
        "op": "PUSH1",
        "path": "0",
        "value": "0x40"
      },
      "1501": {
        "fn": "LLMMarket.clearListAndReedemFunds",
        "offset": [
          1896,
          1922
        ],
        "op": "SWAP1",
        "path": "0"
      },
      "1502": {
        "fn": "LLMMarket.clearListAndReedemFunds",
        "offset": [
          1896,
          1922
        ],
        "op": "KECCAK256",
        "path": "0"
      },
      "1503": {
        "fn": "LLMMarket.clearListAndReedemFunds",
        "offset": [
          1896,
          1929
        ],
        "op": "SLOAD",
        "path": "0"
      },
      "1504": {
        "fn": "LLMMarket.clearListAndReedemFunds",
        "offset": [
          1892,
          1929
        ],
        "op": "DUP2",
        "path": "0"
      },
      "1505": {
        "fn": "LLMMarket.clearListAndReedemFunds",
        "offset": [
          1892,
          1929
        ],
        "op": "LT",
        "path": "0"
      },
      "1506": {
        "fn": "LLMMarket.clearListAndReedemFunds",
        "offset": [
          1876,
          2028
        ],
        "op": "ISZERO",
        "path": "0"
      },
      "1507": {
        "fn": "LLMMarket.clearListAndReedemFunds",
        "offset": [
          1876,
          2028
        ],
        "op": "PUSH2",
        "path": "0",
        "value": "0x62E"
      },
      "1510": {
        "fn": "LLMMarket.clearListAndReedemFunds",
        "offset": [
          1876,
          2028
        ],
        "op": "JUMPI",
        "path": "0"
      },
      "1511": {
        "fn": "LLMMarket.clearListAndReedemFunds",
        "offset": [
          1994,
          2004
        ],
        "op": "CALLER",
        "path": "0",
        "statement": 8
      },
      "1512": {
        "fn": "LLMMarket.clearListAndReedemFunds",
        "offset": [
          1979,
          2005
        ],
        "op": "PUSH1",
        "path": "0",
        "value": "0x0"
      },
      "1514": {
        "fn": "LLMMarket.clearListAndReedemFunds",
        "offset": [
          1979,
          2005
        ],
        "op": "SWAP1",
        "path": "0"
      },
      "1515": {
        "fn": "LLMMarket.clearListAndReedemFunds",
        "offset": [
          1979,
          2005
        ],
        "op": "DUP2",
        "path": "0"
      },
      "1516": {
        "fn": "LLMMarket.clearListAndReedemFunds",
        "offset": [
          1979,
          2005
        ],
        "op": "MSTORE",
        "path": "0"
      },
      "1517": {
        "fn": "LLMMarket.clearListAndReedemFunds",
        "offset": [
          1979,
          1993
        ],
        "op": "PUSH1",
        "path": "0",
        "value": "0x2"
      },
      "1519": {
        "fn": "LLMMarket.clearListAndReedemFunds",
        "offset": [
          1979,
          2005
        ],
        "op": "PUSH1",
        "path": "0",
        "value": "0x20"
      },
      "1521": {
        "fn": "LLMMarket.clearListAndReedemFunds",
        "offset": [
          1979,
          2005
        ],
        "op": "MSTORE",
        "path": "0"
      },
      "1522": {
        "fn": "LLMMarket.clearListAndReedemFunds",
        "offset": [
          1979,
          2005
        ],
        "op": "PUSH1",
        "path": "0",
        "value": "0x40"
      },
      "1524": {
        "fn": "LLMMarket.clearListAndReedemFunds",
        "offset": [
          1979,
          2005
        ],
        "op": "SWAP1",
        "path": "0"
      },
      "1525": {
        "fn": "LLMMarket.clearListAndReedemFunds",
        "offset": [
          1979,
          2005
        ],
        "op": "KECCAK256",
        "path": "0"
      },
      "1526": {
        "fn": "LLMMarket.clearListAndReedemFunds",
        "offset": [
          1979,
          2008
        ],
        "op": "DUP1",
        "path": "0"
      },
      "1527": {
        "fn": "LLMMarket.clearListAndReedemFunds",
        "offset": [
          1979,
          2008
        ],
        "op": "SLOAD",
        "path": "0"
      },
      "1528": {
        "fn": "LLMMarket.clearListAndReedemFunds",
        "offset": [
          2006,
          2007
        ],
        "op": "DUP3",
        "path": "0"
      },
      "1529": {
        "fn": "LLMMarket.clearListAndReedemFunds",
        "offset": [
          2006,
          2007
        ],
        "op": "SWAP1",
        "path": "0"
      },
      "1530": {
        "fn": "LLMMarket.clearListAndReedemFunds",
        "offset": [
          1979,
          2008
        ],
        "op": "DUP2",
        "path": "0"
      },
      "1531": {
        "fn": "LLMMarket.clearListAndReedemFunds",
        "offset": [
          1979,
          2008
        ],
        "op": "LT",
        "path": "0"
      },
      "1532": {
        "fn": "LLMMarket.clearListAndReedemFunds",
        "offset": [
          1979,
          2008
        ],
        "op": "PUSH2",
        "path": "0",
        "value": "0x607"
      },
      "1535": {
        "fn": "LLMMarket.clearListAndReedemFunds",
        "offset": [
          1979,
          2008
        ],
        "op": "JUMPI",
        "path": "0"
      },
      "1536": {
        "fn": "LLMMarket.clearListAndReedemFunds",
        "offset": [
          1979,
          2008
        ],
        "op": "PUSH2",
        "path": "0",
        "value": "0x607"
      },
      "1539": {
        "fn": "LLMMarket.clearListAndReedemFunds",
        "offset": [
          1979,
          2008
        ],
        "op": "PUSH2",
        "path": "0",
        "value": "0xD69"
      },
      "1542": {
        "fn": "LLMMarket.clearListAndReedemFunds",
        "jump": "i",
        "offset": [
          1979,
          2008
        ],
        "op": "JUMP",
        "path": "0"
      },
      "1543": {
        "fn": "LLMMarket.clearListAndReedemFunds",
        "offset": [
          1979,
          2008
        ],
        "op": "JUMPDEST",
        "path": "0"
      },
      "1544": {
        "fn": "LLMMarket.clearListAndReedemFunds",
        "offset": [
          1979,
          2008
        ],
        "op": "SWAP1",
        "path": "0"
      },
      "1545": {
        "fn": "LLMMarket.clearListAndReedemFunds",
        "offset": [
          1979,
          2008
        ],
        "op": "PUSH1",
        "path": "0",
        "value": "0x0"
      },
      "1547": {
        "fn": "LLMMarket.clearListAndReedemFunds",
        "offset": [
          1979,
          2008
        ],
        "op": "MSTORE",
        "path": "0"
      },
      "1548": {
        "fn": "LLMMarket.clearListAndReedemFunds",
        "offset": [
          1979,
          2008
        ],
        "op": "PUSH1",
        "path": "0",
        "value": "0x20"
      },
      "1550": {
        "fn": "LLMMarket.clearListAndReedemFunds",
        "offset": [
          1979,
          2008
        ],
        "op": "PUSH1",
        "path": "0",
        "value": "0x0"
      },
      "1552": {
        "fn": "LLMMarket.clearListAndReedemFunds",
        "offset": [
          1979,
          2008
        ],
        "op": "KECCAK256",
        "path": "0"
      },
      "1553": {
        "fn": "LLMMarket.clearListAndReedemFunds",
        "offset": [
          1979,
          2008
        ],
        "op": "SWAP1",
        "path": "0"
      },
      "1554": {
        "fn": "LLMMarket.clearListAndReedemFunds",
        "offset": [
          1979,
          2008
        ],
        "op": "PUSH1",
        "path": "0",
        "value": "0x2"
      },
      "1556": {
        "fn": "LLMMarket.clearListAndReedemFunds",
        "offset": [
          1979,
          2008
        ],
        "op": "MUL",
        "path": "0"
      },
      "1557": {
        "fn": "LLMMarket.clearListAndReedemFunds",
        "offset": [
          1979,
          2008
        ],
        "op": "ADD",
        "path": "0"
      },
      "1558": {
        "fn": "LLMMarket.clearListAndReedemFunds",
        "offset": [
          1979,
          2017
        ],
        "op": "PUSH1",
        "path": "0",
        "value": "0x1"
      },
      "1560": {
        "fn": "LLMMarket.clearListAndReedemFunds",
        "offset": [
          1979,
          2017
        ],
        "op": "ADD",
        "path": "0"
      },
      "1561": {
        "fn": "LLMMarket.clearListAndReedemFunds",
        "offset": [
          1979,
          2017
        ],
        "op": "SLOAD",
        "path": "0"
      },
      "1562": {
        "fn": "LLMMarket.clearListAndReedemFunds",
        "offset": [
          1964,
          1976
        ],
        "op": "DUP3",
        "path": "0"
      },
      "1563": {
        "fn": "LLMMarket.clearListAndReedemFunds",
        "offset": [
          1964,
          2017
        ],
        "op": "PUSH2",
        "path": "0",
        "value": "0x624"
      },
      "1566": {
        "fn": "LLMMarket.clearListAndReedemFunds",
        "offset": [
          1964,
          2017
        ],
        "op": "SWAP2",
        "path": "0"
      },
      "1567": {
        "fn": "LLMMarket.clearListAndReedemFunds",
        "offset": [
          1964,
          2017
        ],
        "op": "SWAP1",
        "path": "0"
      },
      "1568": {
        "fn": "LLMMarket.clearListAndReedemFunds",
        "offset": [
          1964,
          2017
        ],
        "op": "PUSH2",
        "path": "0",
        "value": "0xD7F"
      },
      "1571": {
        "fn": "LLMMarket.clearListAndReedemFunds",
        "jump": "i",
        "offset": [
          1964,
          2017
        ],
        "op": "JUMP",
        "path": "0"
      },
      "1572": {
        "fn": "LLMMarket.clearListAndReedemFunds",
        "offset": [
          1964,
          2017
        ],
        "op": "JUMPDEST",
        "path": "0"
      },
      "1573": {
        "fn": "LLMMarket.clearListAndReedemFunds",
        "offset": [
          1949,
          2017
        ],
        "op": "SWAP2",
        "path": "0"
      },
      "1574": {
        "op": "POP"
      },
      "1575": {
        "fn": "LLMMarket.clearListAndReedemFunds",
        "offset": [
          1931,
          1934
        ],
        "op": "PUSH1",
        "path": "0",
        "statement": 9,
        "value": "0x1"
      },
      "1577": {
        "fn": "LLMMarket.clearListAndReedemFunds",
        "offset": [
          1931,
          1934
        ],
        "op": "ADD",
        "path": "0"
      },
      "1578": {
        "fn": "LLMMarket.clearListAndReedemFunds",
        "offset": [
          1876,
          2028
        ],
        "op": "PUSH2",
        "path": "0",
        "value": "0x5CF"
      },
      "1581": {
        "fn": "LLMMarket.clearListAndReedemFunds",
        "offset": [
          1876,
          2028
        ],
        "op": "JUMP",
        "path": "0"
      },
      "1582": {
        "fn": "LLMMarket.clearListAndReedemFunds",
        "offset": [
          1876,
          2028
        ],
        "op": "JUMPDEST",
        "path": "0"
      },
      "1583": {
        "op": "POP"
      },
      "1584": {
        "fn": "LLMMarket.clearListAndReedemFunds",
        "offset": [
          2059,
          2069
        ],
        "op": "CALLER",
        "path": "0",
        "statement": 10
      },
      "1585": {
        "fn": "LLMMarket.clearListAndReedemFunds",
        "offset": [
          2044,
          2070
        ],
        "op": "PUSH1",
        "path": "0",
        "value": "0x0"
      },
      "1587": {
        "fn": "LLMMarket.clearListAndReedemFunds",
        "offset": [
          2044,
          2070
        ],
        "op": "SWAP1",
        "path": "0"
      },
      "1588": {
        "fn": "LLMMarket.clearListAndReedemFunds",
        "offset": [
          2044,
          2070
        ],
        "op": "DUP2",
        "path": "0"
      },
      "1589": {
        "fn": "LLMMarket.clearListAndReedemFunds",
        "offset": [
          2044,
          2070
        ],
        "op": "MSTORE",
        "path": "0"
      },
      "1590": {
        "fn": "LLMMarket.clearListAndReedemFunds",
        "offset": [
          2044,
          2058
        ],
        "op": "PUSH1",
        "path": "0",
        "value": "0x2"
      },
      "1592": {
        "fn": "LLMMarket.clearListAndReedemFunds",
        "offset": [
          2044,
          2070
        ],
        "op": "PUSH1",
        "path": "0",
        "value": "0x20"
      },
      "1594": {
        "fn": "LLMMarket.clearListAndReedemFunds",
        "offset": [
          2044,
          2070
        ],
        "op": "MSTORE",
        "path": "0"
      },
      "1595": {
        "fn": "LLMMarket.clearListAndReedemFunds",
        "offset": [
          2044,
          2070
        ],
        "op": "PUSH1",
        "path": "0",
        "value": "0x40"
      },
      "1597": {
        "fn": "LLMMarket.clearListAndReedemFunds",
        "offset": [
          2044,
          2070
        ],
        "op": "DUP2",
        "path": "0"
      },
      "1598": {
        "fn": "LLMMarket.clearListAndReedemFunds",
        "offset": [
          2044,
          2070
        ],
        "op": "KECCAK256",
        "path": "0"
      },
      "1599": {
        "fn": "LLMMarket.clearListAndReedemFunds",
        "offset": [
          2037,
          2070
        ],
        "op": "PUSH2",
        "path": "0",
        "value": "0x647"
      },
      "1602": {
        "fn": "LLMMarket.clearListAndReedemFunds",
        "offset": [
          2037,
          2070
        ],
        "op": "SWAP2",
        "path": "0"
      },
      "1603": {
        "fn": "LLMMarket.clearListAndReedemFunds",
        "offset": [
          2037,
          2070
        ],
        "op": "PUSH2",
        "path": "0",
        "value": "0x8B4"
      },
      "1606": {
        "fn": "LLMMarket.clearListAndReedemFunds",
        "jump": "i",
        "offset": [
          2037,
          2070
        ],
        "op": "JUMP",
        "path": "0"
      },
      "1607": {
        "fn": "LLMMarket.clearListAndReedemFunds",
        "offset": [
          2037,
          2070
        ],
        "op": "JUMPDEST",
        "path": "0"
      },
      "1608": {
        "fn": "LLMMarket.clearListAndReedemFunds",
        "offset": [
          2080,
          2122
        ],
        "op": "PUSH1",
        "path": "0",
        "statement": 11,
        "value": "0x40"
      },
      "1610": {
        "fn": "LLMMarket.clearListAndReedemFunds",
        "offset": [
          2080,
          2122
        ],
        "op": "MLOAD",
        "path": "0"
      },
      "1611": {
        "fn": "LLMMarket.clearListAndReedemFunds",
        "offset": [
          2088,
          2098
        ],
        "op": "CALLER",
        "path": "0"
      },
      "1612": {
        "fn": "LLMMarket.clearListAndReedemFunds",
        "offset": [
          2088,
          2098
        ],
        "op": "SWAP1",
        "path": "0"
      },
      "1613": {
        "fn": "LLMMarket.clearListAndReedemFunds",
        "offset": [
          2080,
          2122
        ],
        "op": "DUP3",
        "path": "0"
      },
      "1614": {
        "fn": "LLMMarket.clearListAndReedemFunds",
        "offset": [
          2080,
          2122
        ],
        "op": "ISZERO",
        "path": "0"
      },
      "1615": {
        "fn": "LLMMarket.clearListAndReedemFunds",
        "offset": [
          2080,
          2122
        ],
        "op": "PUSH2",
        "path": "0",
        "value": "0x8FC"
      },
      "1618": {
        "fn": "LLMMarket.clearListAndReedemFunds",
        "offset": [
          2080,
          2122
        ],
        "op": "MUL",
        "path": "0"
      },
      "1619": {
        "fn": "LLMMarket.clearListAndReedemFunds",
        "offset": [
          2080,
          2122
        ],
        "op": "SWAP1",
        "path": "0"
      },
      "1620": {
        "fn": "LLMMarket.clearListAndReedemFunds",
        "offset": [
          2109,
          2121
        ],
        "op": "DUP4",
        "path": "0"
      },
      "1621": {
        "fn": "LLMMarket.clearListAndReedemFunds",
        "offset": [
          2109,
          2121
        ],
        "op": "SWAP1",
        "path": "0"
      },
      "1622": {
        "fn": "LLMMarket.clearListAndReedemFunds",
        "offset": [
          2080,
          2122
        ],
        "op": "PUSH1",
        "path": "0",
        "value": "0x0"
      },
      "1624": {
        "fn": "LLMMarket.clearListAndReedemFunds",
        "offset": [
          2080,
          2122
        ],
        "op": "DUP2",
        "path": "0"
      },
      "1625": {
        "fn": "LLMMarket.clearListAndReedemFunds",
        "offset": [
          2080,
          2122
        ],
        "op": "DUP2",
        "path": "0"
      },
      "1626": {
        "fn": "LLMMarket.clearListAndReedemFunds",
        "offset": [
          2080,
          2122
        ],
        "op": "DUP2",
        "path": "0"
      },
      "1627": {
        "fn": "LLMMarket.clearListAndReedemFunds",
        "offset": [
          2109,
          2121
        ],
        "op": "DUP6",
        "path": "0"
      },
      "1628": {
        "fn": "LLMMarket.clearListAndReedemFunds",
        "offset": [
          2088,
          2098
        ],
        "op": "DUP9",
        "path": "0"
      },
      "1629": {
        "fn": "LLMMarket.clearListAndReedemFunds",
        "offset": [
          2080,
          2122
        ],
        "op": "DUP9",
        "path": "0"
      },
      "1630": {
        "fn": "LLMMarket.clearListAndReedemFunds",
        "offset": [
          2080,
          2122
        ],
        "op": "CALL",
        "path": "0"
      },
      "1631": {
        "fn": "LLMMarket.clearListAndReedemFunds",
        "offset": [
          2080,
          2122
        ],
        "op": "SWAP4",
        "path": "0"
      },
      "1632": {
        "fn": "LLMMarket.clearListAndReedemFunds",
        "offset": [
          2080,
          2122
        ],
        "op": "POP",
        "path": "0"
      },
      "1633": {
        "fn": "LLMMarket.clearListAndReedemFunds",
        "offset": [
          2080,
          2122
        ],
        "op": "POP",
        "path": "0"
      },
      "1634": {
        "fn": "LLMMarket.clearListAndReedemFunds",
        "offset": [
          2080,
          2122
        ],
        "op": "POP",
        "path": "0"
      },
      "1635": {
        "fn": "LLMMarket.clearListAndReedemFunds",
        "offset": [
          2080,
          2122
        ],
        "op": "POP",
        "path": "0"
      },
      "1636": {
        "fn": "LLMMarket.clearListAndReedemFunds",
        "offset": [
          2080,
          2122
        ],
        "op": "ISZERO",
        "path": "0"
      },
      "1637": {
        "fn": "LLMMarket.clearListAndReedemFunds",
        "offset": [
          2080,
          2122
        ],
        "op": "DUP1",
        "path": "0"
      },
      "1638": {
        "fn": "LLMMarket.clearListAndReedemFunds",
        "offset": [
          2080,
          2122
        ],
        "op": "ISZERO",
        "path": "0"
      },
      "1639": {
        "fn": "LLMMarket.clearListAndReedemFunds",
        "offset": [
          2080,
          2122
        ],
        "op": "PUSH2",
        "path": "0",
        "value": "0x674"
      },
      "1642": {
        "fn": "LLMMarket.clearListAndReedemFunds",
        "offset": [
          2080,
          2122
        ],
        "op": "JUMPI",
        "path": "0"
      },
      "1643": {
        "fn": "LLMMarket.clearListAndReedemFunds",
        "offset": [
          2080,
          2122
        ],
        "op": "RETURNDATASIZE",
        "path": "0"
      },
      "1644": {
        "fn": "LLMMarket.clearListAndReedemFunds",
        "offset": [
          2080,
          2122
        ],
        "op": "PUSH1",
        "path": "0",
        "value": "0x0"
      },
      "1646": {
        "fn": "LLMMarket.clearListAndReedemFunds",
        "offset": [
          2080,
          2122
        ],
        "op": "DUP1",
        "path": "0"
      },
      "1647": {
        "fn": "LLMMarket.clearListAndReedemFunds",
        "offset": [
          2080,
          2122
        ],
        "op": "RETURNDATACOPY",
        "path": "0"
      },
      "1648": {
        "fn": "LLMMarket.clearListAndReedemFunds",
        "offset": [
          2080,
          2122
        ],
        "op": "RETURNDATASIZE",
        "path": "0"
      },
      "1649": {
        "fn": "LLMMarket.clearListAndReedemFunds",
        "offset": [
          2080,
          2122
        ],
        "op": "PUSH1",
        "path": "0",
        "value": "0x0"
      },
      "1651": {
        "fn": "LLMMarket.clearListAndReedemFunds",
        "offset": [
          2080,
          2122
        ],
        "op": "REVERT",
        "path": "0"
      },
      "1652": {
        "fn": "LLMMarket.clearListAndReedemFunds",
        "offset": [
          2080,
          2122
        ],
        "op": "JUMPDEST",
        "path": "0"
      },
      "1653": {
        "fn": "LLMMarket.clearListAndReedemFunds",
        "offset": [
          2080,
          2122
        ],
        "op": "POP",
        "path": "0"
      },
      "1654": {
        "fn": "LLMMarket.clearListAndReedemFunds",
        "offset": [
          2139,
          2143
        ],
        "op": "PUSH1",
        "path": "0",
        "statement": 12,
        "value": "0x1"
      },
      "1656": {
        "fn": "LLMMarket.clearListAndReedemFunds",
        "offset": [
          2132,
          2143
        ],
        "op": "SWAP2",
        "path": "0"
      },
      "1657": {
        "fn": "LLMMarket.clearListAndReedemFunds",
        "offset": [
          2132,
          2143
        ],
        "op": "POP",
        "path": "0"
      },
      "1658": {
        "fn": "LLMMarket.clearListAndReedemFunds",
        "offset": [
          2132,
          2143
        ],
        "op": "POP",
        "path": "0"
      },
      "1659": {
        "fn": "LLMMarket.clearListAndReedemFunds",
        "offset": [
          1773,
          2150
        ],
        "op": "SWAP1",
        "path": "0"
      },
      "1660": {
        "fn": "LLMMarket.clearListAndReedemFunds",
        "jump": "o",
        "offset": [
          1773,
          2150
        ],
        "op": "JUMP",
        "path": "0"
      },
      "1661": {
        "fn": "LLMMarket.getActiveRequests",
        "offset": [
          2156,
          2282
        ],
        "op": "JUMPDEST",
        "path": "0"
      },
      "1662": {
        "op": "PUSH1",
        "value": "0x1"
      },
      "1664": {
        "op": "PUSH1",
        "value": "0x1"
      },
      "1666": {
        "op": "PUSH1",
        "value": "0xA0"
      },
      "1668": {
        "op": "SHL"
      },
      "1669": {
        "op": "SUB"
      },
      "1670": {
        "fn": "LLMMarket.getActiveRequests",
        "offset": [
          2255,
          2275
        ],
        "op": "DUP2",
        "path": "0",
        "statement": 13
      },
      "1671": {
        "fn": "LLMMarket.getActiveRequests",
        "offset": [
          2255,
          2275
        ],
        "op": "AND",
        "path": "0"
      },
      "1672": {
        "fn": "LLMMarket.getActiveRequests",
        "offset": [
          2255,
          2275
        ],
        "op": "PUSH1",
        "path": "0",
        "value": "0x0"
      },
      "1674": {
        "fn": "LLMMarket.getActiveRequests",
        "offset": [
          2255,
          2275
        ],
        "op": "SWAP1",
        "path": "0"
      },
      "1675": {
        "fn": "LLMMarket.getActiveRequests",
        "offset": [
          2255,
          2275
        ],
        "op": "DUP2",
        "path": "0"
      },
      "1676": {
        "fn": "LLMMarket.getActiveRequests",
        "offset": [
          2255,
          2275
        ],
        "op": "MSTORE",
        "path": "0"
      },
      "1677": {
        "fn": "LLMMarket.getActiveRequests",
        "offset": [
          2255,
          2269
        ],
        "op": "PUSH1",
        "path": "0",
        "value": "0x2"
      },
      "1679": {
        "fn": "LLMMarket.getActiveRequests",
        "offset": [
          2255,
          2275
        ],
        "op": "PUSH1",
        "path": "0",
        "value": "0x20"
      },
      "1681": {
        "fn": "LLMMarket.getActiveRequests",
        "offset": [
          2255,
          2275
        ],
        "op": "SWAP1",
        "path": "0"
      },
      "1682": {
        "fn": "LLMMarket.getActiveRequests",
        "offset": [
          2255,
          2275
        ],
        "op": "DUP2",
        "path": "0"
      },
      "1683": {
        "fn": "LLMMarket.getActiveRequests",
        "offset": [
          2255,
          2275
        ],
        "op": "MSTORE",
        "path": "0"
      },
      "1684": {
        "fn": "LLMMarket.getActiveRequests",
        "offset": [
          2255,
          2275
        ],
        "op": "PUSH1",
        "path": "0",
        "value": "0x40"
      },
      "1686": {
        "fn": "LLMMarket.getActiveRequests",
        "offset": [
          2255,
          2275
        ],
        "op": "DUP1",
        "path": "0"
      },
      "1687": {
        "fn": "LLMMarket.getActiveRequests",
        "offset": [
          2255,
          2275
        ],
        "op": "DUP4",
        "path": "0"
      },
      "1688": {
        "fn": "LLMMarket.getActiveRequests",
        "offset": [
          2255,
          2275
        ],
        "op": "KECCAK256",
        "path": "0"
      },
      "1689": {
        "fn": "LLMMarket.getActiveRequests",
        "offset": [
          2248,
          2275
        ],
        "op": "DUP1",
        "path": "0"
      },
      "1690": {
        "fn": "LLMMarket.getActiveRequests",
        "offset": [
          2248,
          2275
        ],
        "op": "SLOAD",
        "path": "0"
      },
      "1691": {
        "fn": "LLMMarket.getActiveRequests",
        "offset": [
          2248,
          2275
        ],
        "op": "DUP3",
        "path": "0"
      },
      "1692": {
        "fn": "LLMMarket.getActiveRequests",
        "offset": [
          2248,
          2275
        ],
        "op": "MLOAD",
        "path": "0"
      },
      "1693": {
        "fn": "LLMMarket.getActiveRequests",
        "offset": [
          2248,
          2275
        ],
        "op": "DUP2",
        "path": "0"
      },
      "1694": {
        "fn": "LLMMarket.getActiveRequests",
        "offset": [
          2248,
          2275
        ],
        "op": "DUP6",
        "path": "0"
      },
      "1695": {
        "fn": "LLMMarket.getActiveRequests",
        "offset": [
          2248,
          2275
        ],
        "op": "MUL",
        "path": "0"
      },
      "1696": {
        "fn": "LLMMarket.getActiveRequests",
        "offset": [
          2248,
          2275
        ],
        "op": "DUP2",
        "path": "0"
      },
      "1697": {
        "fn": "LLMMarket.getActiveRequests",
        "offset": [
          2248,
          2275
        ],
        "op": "ADD",
        "path": "0"
      },
      "1698": {
        "fn": "LLMMarket.getActiveRequests",
        "offset": [
          2248,
          2275
        ],
        "op": "DUP6",
        "path": "0"
      },
      "1699": {
        "fn": "LLMMarket.getActiveRequests",
        "offset": [
          2248,
          2275
        ],
        "op": "ADD",
        "path": "0"
      },
      "1700": {
        "fn": "LLMMarket.getActiveRequests",
        "offset": [
          2248,
          2275
        ],
        "op": "SWAP1",
        "path": "0"
      },
      "1701": {
        "fn": "LLMMarket.getActiveRequests",
        "offset": [
          2248,
          2275
        ],
        "op": "SWAP4",
        "path": "0"
      },
      "1702": {
        "fn": "LLMMarket.getActiveRequests",
        "offset": [
          2248,
          2275
        ],
        "op": "MSTORE",
        "path": "0"
      },
      "1703": {
        "fn": "LLMMarket.getActiveRequests",
        "offset": [
          2248,
          2275
        ],
        "op": "DUP1",
        "path": "0"
      },
      "1704": {
        "fn": "LLMMarket.getActiveRequests",
        "offset": [
          2248,
          2275
        ],
        "op": "DUP4",
        "path": "0"
      },
      "1705": {
        "fn": "LLMMarket.getActiveRequests",
        "offset": [
          2248,
          2275
        ],
        "op": "MSTORE",
        "path": "0"
      },
      "1706": {
        "fn": "LLMMarket.getActiveRequests",
        "offset": [
          2220,
          2236
        ],
        "op": "PUSH1",
        "path": "0",
        "value": "0x60"
      },
      "1708": {
        "fn": "LLMMarket.getActiveRequests",
        "offset": [
          2220,
          2236
        ],
        "op": "SWAP5",
        "path": "0"
      },
      "1709": {
        "fn": "LLMMarket.getActiveRequests",
        "offset": [
          2248,
          2275
        ],
        "op": "SWAP3",
        "path": "0"
      },
      "1710": {
        "fn": "LLMMarket.getActiveRequests",
        "offset": [
          2248,
          2275
        ],
        "op": "SWAP4",
        "path": "0"
      },
      "1711": {
        "fn": "LLMMarket.getActiveRequests",
        "offset": [
          2255,
          2275
        ],
        "op": "SWAP2",
        "path": "0"
      },
      "1712": {
        "fn": "LLMMarket.getActiveRequests",
        "offset": [
          2255,
          2275
        ],
        "op": "SWAP3",
        "path": "0"
      },
      "1713": {
        "fn": "LLMMarket.getActiveRequests",
        "offset": [
          2248,
          2275
        ],
        "op": "SWAP1",
        "path": "0"
      },
      "1714": {
        "fn": "LLMMarket.getActiveRequests",
        "offset": [
          2248,
          2275
        ],
        "op": "SWAP2",
        "path": "0"
      },
      "1715": {
        "fn": "LLMMarket.getActiveRequests",
        "offset": [
          2248,
          2275
        ],
        "op": "DUP5",
        "path": "0"
      },
      "1716": {
        "fn": "LLMMarket.getActiveRequests",
        "offset": [
          2248,
          2275
        ],
        "op": "ADD",
        "path": "0"
      },
      "1717": {
        "fn": "LLMMarket.getActiveRequests",
        "offset": [
          2248,
          2275
        ],
        "op": "JUMPDEST",
        "path": "0"
      },
      "1718": {
        "fn": "LLMMarket.getActiveRequests",
        "offset": [
          2248,
          2275
        ],
        "op": "DUP3",
        "path": "0"
      },
      "1719": {
        "fn": "LLMMarket.getActiveRequests",
        "offset": [
          2248,
          2275
        ],
        "op": "DUP3",
        "path": "0"
      },
      "1720": {
        "fn": "LLMMarket.getActiveRequests",
        "offset": [
          2248,
          2275
        ],
        "op": "LT",
        "path": "0"
      },
      "1721": {
        "fn": "LLMMarket.getActiveRequests",
        "offset": [
          2248,
          2275
        ],
        "op": "ISZERO",
        "path": "0"
      },
      "1722": {
        "fn": "LLMMarket.getActiveRequests",
        "offset": [
          2248,
          2275
        ],
        "op": "PUSH2",
        "path": "0",
        "value": "0x6FB"
      },
      "1725": {
        "fn": "LLMMarket.getActiveRequests",
        "offset": [
          2248,
          2275
        ],
        "op": "JUMPI",
        "path": "0"
      },
      "1726": {
        "fn": "LLMMarket.getActiveRequests",
        "offset": [
          2248,
          2275
        ],
        "op": "DUP4",
        "path": "0"
      },
      "1727": {
        "fn": "LLMMarket.getActiveRequests",
        "offset": [
          2248,
          2275
        ],
        "op": "DUP3",
        "path": "0"
      },
      "1728": {
        "fn": "LLMMarket.getActiveRequests",
        "offset": [
          2248,
          2275
        ],
        "op": "SWAP1",
        "path": "0"
      },
      "1729": {
        "fn": "LLMMarket.getActiveRequests",
        "offset": [
          2248,
          2275
        ],
        "op": "PUSH1",
        "path": "0",
        "value": "0x0"
      },
      "1731": {
        "fn": "LLMMarket.getActiveRequests",
        "offset": [
          2248,
          2275
        ],
        "op": "MSTORE",
        "path": "0"
      },
      "1732": {
        "fn": "LLMMarket.getActiveRequests",
        "offset": [
          2248,
          2275
        ],
        "op": "PUSH1",
        "path": "0",
        "value": "0x20"
      },
      "1734": {
        "fn": "LLMMarket.getActiveRequests",
        "offset": [
          2248,
          2275
        ],
        "op": "PUSH1",
        "path": "0",
        "value": "0x0"
      },
      "1736": {
        "fn": "LLMMarket.getActiveRequests",
        "offset": [
          2248,
          2275
        ],
        "op": "KECCAK256",
        "path": "0"
      },
      "1737": {
        "fn": "LLMMarket.getActiveRequests",
        "offset": [
          2248,
          2275
        ],
        "op": "SWAP1",
        "path": "0"
      },
      "1738": {
        "fn": "LLMMarket.getActiveRequests",
        "offset": [
          2248,
          2275
        ],
        "op": "PUSH1",
        "path": "0",
        "value": "0x2"
      },
      "1740": {
        "fn": "LLMMarket.getActiveRequests",
        "offset": [
          2248,
          2275
        ],
        "op": "MUL",
        "path": "0"
      },
      "1741": {
        "fn": "LLMMarket.getActiveRequests",
        "offset": [
          2248,
          2275
        ],
        "op": "ADD",
        "path": "0"
      },
      "1742": {
        "fn": "LLMMarket.getActiveRequests",
        "offset": [
          2248,
          2275
        ],
        "op": "PUSH1",
        "path": "0",
        "value": "0x40"
      },
      "1744": {
        "fn": "LLMMarket.getActiveRequests",
        "offset": [
          2248,
          2275
        ],
        "op": "MLOAD",
        "path": "0"
      },
      "1745": {
        "fn": "LLMMarket.getActiveRequests",
        "offset": [
          2248,
          2275
        ],
        "op": "DUP1",
        "path": "0"
      },
      "1746": {
        "fn": "LLMMarket.getActiveRequests",
        "offset": [
          2248,
          2275
        ],
        "op": "PUSH1",
        "path": "0",
        "value": "0x40"
      },
      "1748": {
        "fn": "LLMMarket.getActiveRequests",
        "offset": [
          2248,
          2275
        ],
        "op": "ADD",
        "path": "0"
      },
      "1749": {
        "fn": "LLMMarket.getActiveRequests",
        "offset": [
          2248,
          2275
        ],
        "op": "PUSH1",
        "path": "0",
        "value": "0x40"
      },
      "1751": {
        "fn": "LLMMarket.getActiveRequests",
        "offset": [
          2248,
          2275
        ],
        "op": "MSTORE",
        "path": "0"
      },
      "1752": {
        "fn": "LLMMarket.getActiveRequests",
        "offset": [
          2248,
          2275
        ],
        "op": "SWAP1",
        "path": "0"
      },
      "1753": {
        "fn": "LLMMarket.getActiveRequests",
        "offset": [
          2248,
          2275
        ],
        "op": "DUP2",
        "path": "0"
      },
      "1754": {
        "fn": "LLMMarket.getActiveRequests",
        "offset": [
          2248,
          2275
        ],
        "op": "PUSH1",
        "path": "0",
        "value": "0x0"
      },
      "1756": {
        "fn": "LLMMarket.getActiveRequests",
        "offset": [
          2248,
          2275
        ],
        "op": "DUP3",
        "path": "0"
      },
      "1757": {
        "fn": "LLMMarket.getActiveRequests",
        "offset": [
          2248,
          2275
        ],
        "op": "ADD",
        "path": "0"
      },
      "1758": {
        "fn": "LLMMarket.getActiveRequests",
        "offset": [
          2248,
          2275
        ],
        "op": "SLOAD",
        "path": "0"
      },
      "1759": {
        "fn": "LLMMarket.getActiveRequests",
        "offset": [
          2248,
          2275
        ],
        "op": "DUP2",
        "path": "0"
      },
      "1760": {
        "fn": "LLMMarket.getActiveRequests",
        "offset": [
          2248,
          2275
        ],
        "op": "MSTORE",
        "path": "0"
      },
      "1761": {
        "fn": "LLMMarket.getActiveRequests",
        "offset": [
          2248,
          2275
        ],
        "op": "PUSH1",
        "path": "0",
        "value": "0x20"
      },
      "1763": {
        "fn": "LLMMarket.getActiveRequests",
        "offset": [
          2248,
          2275
        ],
        "op": "ADD",
        "path": "0"
      },
      "1764": {
        "fn": "LLMMarket.getActiveRequests",
        "offset": [
          2248,
          2275
        ],
        "op": "PUSH1",
        "path": "0",
        "value": "0x1"
      },
      "1766": {
        "fn": "LLMMarket.getActiveRequests",
        "offset": [
          2248,
          2275
        ],
        "op": "DUP3",
        "path": "0"
      },
      "1767": {
        "fn": "LLMMarket.getActiveRequests",
        "offset": [
          2248,
          2275
        ],
        "op": "ADD",
        "path": "0"
      },
      "1768": {
        "fn": "LLMMarket.getActiveRequests",
        "offset": [
          2248,
          2275
        ],
        "op": "SLOAD",
        "path": "0"
      },
      "1769": {
        "fn": "LLMMarket.getActiveRequests",
        "offset": [
          2248,
          2275
        ],
        "op": "DUP2",
        "path": "0"
      },
      "1770": {
        "fn": "LLMMarket.getActiveRequests",
        "offset": [
          2248,
          2275
        ],
        "op": "MSTORE",
        "path": "0"
      },
      "1771": {
        "fn": "LLMMarket.getActiveRequests",
        "offset": [
          2248,
          2275
        ],
        "op": "POP",
        "path": "0"
      },
      "1772": {
        "fn": "LLMMarket.getActiveRequests",
        "offset": [
          2248,
          2275
        ],
        "op": "POP",
        "path": "0"
      },
      "1773": {
        "fn": "LLMMarket.getActiveRequests",
        "offset": [
          2248,
          2275
        ],
        "op": "DUP2",
        "path": "0"
      },
      "1774": {
        "fn": "LLMMarket.getActiveRequests",
        "offset": [
          2248,
          2275
        ],
        "op": "MSTORE",
        "path": "0"
      },
      "1775": {
        "fn": "LLMMarket.getActiveRequests",
        "offset": [
          2248,
          2275
        ],
        "op": "PUSH1",
        "path": "0",
        "value": "0x20"
      },
      "1777": {
        "fn": "LLMMarket.getActiveRequests",
        "offset": [
          2248,
          2275
        ],
        "op": "ADD",
        "path": "0"
      },
      "1778": {
        "fn": "LLMMarket.getActiveRequests",
        "offset": [
          2248,
          2275
        ],
        "op": "SWAP1",
        "path": "0"
      },
      "1779": {
        "fn": "LLMMarket.getActiveRequests",
        "offset": [
          2248,
          2275
        ],
        "op": "PUSH1",
        "path": "0",
        "value": "0x1"
      },
      "1781": {
        "fn": "LLMMarket.getActiveRequests",
        "offset": [
          2248,
          2275
        ],
        "op": "ADD",
        "path": "0"
      },
      "1782": {
        "fn": "LLMMarket.getActiveRequests",
        "offset": [
          2248,
          2275
        ],
        "op": "SWAP1",
        "path": "0"
      },
      "1783": {
        "fn": "LLMMarket.getActiveRequests",
        "offset": [
          2248,
          2275
        ],
        "op": "PUSH2",
        "path": "0",
        "value": "0x6B5"
      },
      "1786": {
        "fn": "LLMMarket.getActiveRequests",
        "offset": [
          2248,
          2275
        ],
        "op": "JUMP",
        "path": "0"
      },
      "1787": {
        "fn": "LLMMarket.getActiveRequests",
        "offset": [
          2248,
          2275
        ],
        "op": "JUMPDEST",
        "path": "0"
      },
      "1788": {
        "fn": "LLMMarket.getActiveRequests",
        "offset": [
          2248,
          2275
        ],
        "op": "POP",
        "path": "0"
      },
      "1789": {
        "fn": "LLMMarket.getActiveRequests",
        "offset": [
          2248,
          2275
        ],
        "op": "POP",
        "path": "0"
      },
      "1790": {
        "fn": "LLMMarket.getActiveRequests",
        "offset": [
          2248,
          2275
        ],
        "op": "POP",
        "path": "0"
      },
      "1791": {
        "fn": "LLMMarket.getActiveRequests",
        "offset": [
          2248,
          2275
        ],
        "op": "POP",
        "path": "0"
      },
      "1792": {
        "fn": "LLMMarket.getActiveRequests",
        "offset": [
          2248,
          2275
        ],
        "op": "SWAP1",
        "path": "0"
      },
      "1793": {
        "fn": "LLMMarket.getActiveRequests",
        "offset": [
          2248,
          2275
        ],
        "op": "POP",
        "path": "0"
      },
      "1794": {
        "fn": "LLMMarket.getActiveRequests",
        "offset": [
          2156,
          2282
        ],
        "op": "SWAP2",
        "path": "0"
      },
      "1795": {
        "fn": "LLMMarket.getActiveRequests",
        "offset": [
          2156,
          2282
        ],
        "op": "SWAP1",
        "path": "0"
      },
      "1796": {
        "fn": "LLMMarket.getActiveRequests",
        "offset": [
          2156,
          2282
        ],
        "op": "POP",
        "path": "0"
      },
      "1797": {
        "fn": "LLMMarket.getActiveRequests",
        "jump": "o",
        "offset": [
          2156,
          2282
        ],
        "op": "JUMP",
        "path": "0"
      },
      "1798": {
        "offset": [
          529,
          553
        ],
        "op": "JUMPDEST",
        "path": "0"
      },
      "1799": {
        "fn": "LLMMarket.getActiveRequests",
        "offset": [
          529,
          553
        ],
        "op": "PUSH1",
        "path": "0",
        "value": "0x1"
      },
      "1801": {
        "fn": "LLMMarket.getActiveRequests",
        "offset": [
          529,
          553
        ],
        "op": "DUP2",
        "path": "0"
      },
      "1802": {
        "fn": "LLMMarket.getActiveRequests",
        "offset": [
          529,
          553
        ],
        "op": "DUP2",
        "path": "0"
      },
      "1803": {
        "fn": "LLMMarket.getActiveRequests",
        "offset": [
          529,
          553
        ],
        "op": "SLOAD",
        "path": "0"
      },
      "1804": {
        "fn": "LLMMarket.getActiveRequests",
        "offset": [
          529,
          553
        ],
        "op": "DUP2",
        "path": "0"
      },
      "1805": {
        "fn": "LLMMarket.getActiveRequests",
        "offset": [
          529,
          553
        ],
        "op": "LT",
        "path": "0"
      },
      "1806": {
        "fn": "LLMMarket.getActiveRequests",
        "offset": [
          529,
          553
        ],
        "op": "PUSH2",
        "path": "0",
        "value": "0x716"
      },
      "1809": {
        "fn": "LLMMarket.getActiveRequests",
        "offset": [
          529,
          553
        ],
        "op": "JUMPI",
        "path": "0"
      },
      "1810": {
        "fn": "LLMMarket.getActiveRequests",
        "offset": [
          529,
          553
        ],
        "op": "PUSH1",
        "path": "0",
        "value": "0x0"
      },
      "1812": {
        "fn": "LLMMarket.getActiveRequests",
        "offset": [
          529,
          553
        ],
        "op": "DUP1",
        "path": "0"
      },
      "1813": {
        "fn": "LLMMarket.getActiveRequests",
        "offset": [
          529,
          553
        ],
        "op": "REVERT",
        "path": "0"
      },
      "1814": {
        "fn": "LLMMarket.getActiveRequests",
        "offset": [
          529,
          553
        ],
        "op": "JUMPDEST",
        "path": "0"
      },
      "1815": {
        "fn": "LLMMarket.getActiveRequests",
        "offset": [
          529,
          553
        ],
        "op": "SWAP1",
        "path": "0"
      },
      "1816": {
        "fn": "LLMMarket.getActiveRequests",
        "offset": [
          529,
          553
        ],
        "op": "PUSH1",
        "path": "0",
        "value": "0x0"
      },
      "1818": {
        "fn": "LLMMarket.getActiveRequests",
        "offset": [
          529,
          553
        ],
        "op": "MSTORE",
        "path": "0"
      },
      "1819": {
        "fn": "LLMMarket.getActiveRequests",
        "offset": [
          529,
          553
        ],
        "op": "PUSH1",
        "path": "0",
        "value": "0x20"
      },
      "1821": {
        "fn": "LLMMarket.getActiveRequests",
        "offset": [
          529,
          553
        ],
        "op": "PUSH1",
        "path": "0",
        "value": "0x0"
      },
      "1823": {
        "fn": "LLMMarket.getActiveRequests",
        "offset": [
          529,
          553
        ],
        "op": "KECCAK256",
        "path": "0"
      },
      "1824": {
        "fn": "LLMMarket.getActiveRequests",
        "offset": [
          529,
          553
        ],
        "op": "SWAP1",
        "path": "0"
      },
      "1825": {
        "fn": "LLMMarket.getActiveRequests",
        "offset": [
          529,
          553
        ],
        "op": "PUSH1",
        "path": "0",
        "value": "0x3"
      },
      "1827": {
        "fn": "LLMMarket.getActiveRequests",
        "offset": [
          529,
          553
        ],
        "op": "MUL",
        "path": "0"
      },
      "1828": {
        "fn": "LLMMarket.getActiveRequests",
        "offset": [
          529,
          553
        ],
        "op": "ADD",
        "path": "0"
      },
      "1829": {
        "fn": "LLMMarket.getActiveRequests",
        "offset": [
          529,
          553
        ],
        "op": "PUSH1",
        "path": "0",
        "value": "0x0"
      },
      "1831": {
        "fn": "LLMMarket.getActiveRequests",
        "offset": [
          529,
          553
        ],
        "op": "SWAP2",
        "path": "0"
      },
      "1832": {
        "fn": "LLMMarket.getActiveRequests",
        "offset": [
          529,
          553
        ],
        "op": "POP",
        "path": "0"
      },
      "1833": {
        "fn": "LLMMarket.getActiveRequests",
        "offset": [
          529,
          553
        ],
        "op": "SWAP1",
        "path": "0"
      },
      "1834": {
        "fn": "LLMMarket.getActiveRequests",
        "offset": [
          529,
          553
        ],
        "op": "POP",
        "path": "0"
      },
      "1835": {
        "fn": "LLMMarket.getActiveRequests",
        "offset": [
          529,
          553
        ],
        "op": "DUP1",
        "path": "0"
      },
      "1836": {
        "fn": "LLMMarket.getActiveRequests",
        "offset": [
          529,
          553
        ],
        "op": "PUSH1",
        "path": "0",
        "value": "0x0"
      },
      "1838": {
        "fn": "LLMMarket.getActiveRequests",
        "offset": [
          529,
          553
        ],
        "op": "ADD",
        "path": "0"
      },
      "1839": {
        "fn": "LLMMarket.getActiveRequests",
        "offset": [
          529,
          553
        ],
        "op": "DUP1",
        "path": "0"
      },
      "1840": {
        "fn": "LLMMarket.getActiveRequests",
        "offset": [
          529,
          553
        ],
        "op": "SLOAD",
        "path": "0"
      },
      "1841": {
        "fn": "LLMMarket.getActiveRequests",
        "offset": [
          529,
          553
        ],
        "op": "PUSH2",
        "path": "0",
        "value": "0x739"
      },
      "1844": {
        "fn": "LLMMarket.getActiveRequests",
        "offset": [
          529,
          553
        ],
        "op": "SWAP1",
        "path": "0"
      },
      "1845": {
        "fn": "LLMMarket.getActiveRequests",
        "offset": [
          529,
          553
        ],
        "op": "PUSH2",
        "path": "0",
        "value": "0xC1E"
      },
      "1848": {
        "fn": "LLMMarket.getActiveRequests",
        "jump": "i",
        "offset": [
          529,
          553
        ],
        "op": "JUMP",
        "path": "0"
      },
      "1849": {
        "fn": "LLMMarket.getActiveRequests",
        "offset": [
          529,
          553
        ],
        "op": "JUMPDEST",
        "path": "0"
      },
      "1850": {
        "fn": "LLMMarket.getActiveRequests",
        "offset": [
          529,
          553
        ],
        "op": "DUP1",
        "path": "0"
      },
      "1851": {
        "fn": "LLMMarket.getActiveRequests",
        "offset": [
          529,
          553
        ],
        "op": "PUSH1",
        "path": "0",
        "value": "0x1F"
      },
      "1853": {
        "fn": "LLMMarket.getActiveRequests",
        "offset": [
          529,
          553
        ],
        "op": "ADD",
        "path": "0"
      },
      "1854": {
        "fn": "LLMMarket.getActiveRequests",
        "offset": [
          529,
          553
        ],
        "op": "PUSH1",
        "path": "0",
        "value": "0x20"
      },
      "1856": {
        "fn": "LLMMarket.getActiveRequests",
        "offset": [
          529,
          553
        ],
        "op": "DUP1",
        "path": "0"
      },
      "1857": {
        "fn": "LLMMarket.getActiveRequests",
        "offset": [
          529,
          553
        ],
        "op": "SWAP2",
        "path": "0"
      },
      "1858": {
        "fn": "LLMMarket.getActiveRequests",
        "offset": [
          529,
          553
        ],
        "op": "DIV",
        "path": "0"
      },
      "1859": {
        "fn": "LLMMarket.getActiveRequests",
        "offset": [
          529,
          553
        ],
        "op": "MUL",
        "path": "0"
      },
      "1860": {
        "fn": "LLMMarket.getActiveRequests",
        "offset": [
          529,
          553
        ],
        "op": "PUSH1",
        "path": "0",
        "value": "0x20"
      },
      "1862": {
        "fn": "LLMMarket.getActiveRequests",
        "offset": [
          529,
          553
        ],
        "op": "ADD",
        "path": "0"
      },
      "1863": {
        "fn": "LLMMarket.getActiveRequests",
        "offset": [
          529,
          553
        ],
        "op": "PUSH1",
        "path": "0",
        "value": "0x40"
      },
      "1865": {
        "fn": "LLMMarket.getActiveRequests",
        "offset": [
          529,
          553
        ],
        "op": "MLOAD",
        "path": "0"
      },
      "1866": {
        "fn": "LLMMarket.getActiveRequests",
        "offset": [
          529,
          553
        ],
        "op": "SWAP1",
        "path": "0"
      },
      "1867": {
        "fn": "LLMMarket.getActiveRequests",
        "offset": [
          529,
          553
        ],
        "op": "DUP2",
        "path": "0"
      },
      "1868": {
        "fn": "LLMMarket.getActiveRequests",
        "offset": [
          529,
          553
        ],
        "op": "ADD",
        "path": "0"
      },
      "1869": {
        "fn": "LLMMarket.getActiveRequests",
        "offset": [
          529,
          553
        ],
        "op": "PUSH1",
        "path": "0",
        "value": "0x40"
      },
      "1871": {
        "fn": "LLMMarket.getActiveRequests",
        "offset": [
          529,
          553
        ],
        "op": "MSTORE",
        "path": "0"
      },
      "1872": {
        "fn": "LLMMarket.getActiveRequests",
        "offset": [
          529,
          553
        ],
        "op": "DUP1",
        "path": "0"
      },
      "1873": {
        "fn": "LLMMarket.getActiveRequests",
        "offset": [
          529,
          553
        ],
        "op": "SWAP3",
        "path": "0"
      },
      "1874": {
        "fn": "LLMMarket.getActiveRequests",
        "offset": [
          529,
          553
        ],
        "op": "SWAP2",
        "path": "0"
      },
      "1875": {
        "fn": "LLMMarket.getActiveRequests",
        "offset": [
          529,
          553
        ],
        "op": "SWAP1",
        "path": "0"
      },
      "1876": {
        "fn": "LLMMarket.getActiveRequests",
        "offset": [
          529,
          553
        ],
        "op": "DUP2",
        "path": "0"
      },
      "1877": {
        "fn": "LLMMarket.getActiveRequests",
        "offset": [
          529,
          553
        ],
        "op": "DUP2",
        "path": "0"
      },
      "1878": {
        "fn": "LLMMarket.getActiveRequests",
        "offset": [
          529,
          553
        ],
        "op": "MSTORE",
        "path": "0"
      },
      "1879": {
        "fn": "LLMMarket.getActiveRequests",
        "offset": [
          529,
          553
        ],
        "op": "PUSH1",
        "path": "0",
        "value": "0x20"
      },
      "1881": {
        "fn": "LLMMarket.getActiveRequests",
        "offset": [
          529,
          553
        ],
        "op": "ADD",
        "path": "0"
      },
      "1882": {
        "fn": "LLMMarket.getActiveRequests",
        "offset": [
          529,
          553
        ],
        "op": "DUP3",
        "path": "0"
      },
      "1883": {
        "fn": "LLMMarket.getActiveRequests",
        "offset": [
          529,
          553
        ],
        "op": "DUP1",
        "path": "0"
      },
      "1884": {
        "fn": "LLMMarket.getActiveRequests",
        "offset": [
          529,
          553
        ],
        "op": "SLOAD",
        "path": "0"
      },
      "1885": {
        "fn": "LLMMarket.getActiveRequests",
        "offset": [
          529,
          553
        ],
        "op": "PUSH2",
        "path": "0",
        "value": "0x765"
      },
      "1888": {
        "fn": "LLMMarket.getActiveRequests",
        "offset": [
          529,
          553
        ],
        "op": "SWAP1",
        "path": "0"
      },
      "1889": {
        "fn": "LLMMarket.getActiveRequests",
        "offset": [
          529,
          553
        ],
        "op": "PUSH2",
        "path": "0",
        "value": "0xC1E"
      },
      "1892": {
        "fn": "LLMMarket.getActiveRequests",
        "jump": "i",
        "offset": [
          529,
          553
        ],
        "op": "JUMP",
        "path": "0"
      },
      "1893": {
        "fn": "LLMMarket.getActiveRequests",
        "offset": [
          529,
          553
        ],
        "op": "JUMPDEST",
        "path": "0"
      },
      "1894": {
        "fn": "LLMMarket.getActiveRequests",
        "offset": [
          529,
          553
        ],
        "op": "DUP1",
        "path": "0"
      },
      "1895": {
        "fn": "LLMMarket.getActiveRequests",
        "offset": [
          529,
          553
        ],
        "op": "ISZERO",
        "path": "0"
      },
      "1896": {
        "fn": "LLMMarket.getActiveRequests",
        "offset": [
          529,
          553
        ],
        "op": "PUSH2",
        "path": "0",
        "value": "0x7B2"
      },
      "1899": {
        "fn": "LLMMarket.getActiveRequests",
        "offset": [
          529,
          553
        ],
        "op": "JUMPI",
        "path": "0"
      },
      "1900": {
        "fn": "LLMMarket.getActiveRequests",
        "offset": [
          529,
          553
        ],
        "op": "DUP1",
        "path": "0"
      },
      "1901": {
        "fn": "LLMMarket.getActiveRequests",
        "offset": [
          529,
          553
        ],
        "op": "PUSH1",
        "path": "0",
        "value": "0x1F"
      },
      "1903": {
        "fn": "LLMMarket.getActiveRequests",
        "offset": [
          529,
          553
        ],
        "op": "LT",
        "path": "0"
      },
      "1904": {
        "fn": "LLMMarket.getActiveRequests",
        "offset": [
          529,
          553
        ],
        "op": "PUSH2",
        "path": "0",
        "value": "0x787"
      },
      "1907": {
        "fn": "LLMMarket.getActiveRequests",
        "offset": [
          529,
          553
        ],
        "op": "JUMPI",
        "path": "0"
      },
      "1908": {
        "fn": "LLMMarket.getActiveRequests",
        "offset": [
          529,
          553
        ],
        "op": "PUSH2",
        "path": "0",
        "value": "0x100"
      },
      "1911": {
        "fn": "LLMMarket.getActiveRequests",
        "offset": [
          529,
          553
        ],
        "op": "DUP1",
        "path": "0"
      },
      "1912": {
        "fn": "LLMMarket.getActiveRequests",
        "offset": [
          529,
          553
        ],
        "op": "DUP4",
        "path": "0"
      },
      "1913": {
        "fn": "LLMMarket.getActiveRequests",
        "offset": [
          529,
          553
        ],
        "op": "SLOAD",
        "path": "0"
      },
      "1914": {
        "fn": "LLMMarket.getActiveRequests",
        "offset": [
          529,
          553
        ],
        "op": "DIV",
        "path": "0"
      },
      "1915": {
        "fn": "LLMMarket.getActiveRequests",
        "offset": [
          529,
          553
        ],
        "op": "MUL",
        "path": "0"
      },
      "1916": {
        "fn": "LLMMarket.getActiveRequests",
        "offset": [
          529,
          553
        ],
        "op": "DUP4",
        "path": "0"
      },
      "1917": {
        "fn": "LLMMarket.getActiveRequests",
        "offset": [
          529,
          553
        ],
        "op": "MSTORE",
        "path": "0"
      },
      "1918": {
        "fn": "LLMMarket.getActiveRequests",
        "offset": [
          529,
          553
        ],
        "op": "SWAP2",
        "path": "0"
      },
      "1919": {
        "fn": "LLMMarket.getActiveRequests",
        "offset": [
          529,
          553
        ],
        "op": "PUSH1",
        "path": "0",
        "value": "0x20"
      },
      "1921": {
        "fn": "LLMMarket.getActiveRequests",
        "offset": [
          529,
          553
        ],
        "op": "ADD",
        "path": "0"
      },
      "1922": {
        "fn": "LLMMarket.getActiveRequests",
        "offset": [
          529,
          553
        ],
        "op": "SWAP2",
        "path": "0"
      },
      "1923": {
        "fn": "LLMMarket.getActiveRequests",
        "offset": [
          529,
          553
        ],
        "op": "PUSH2",
        "path": "0",
        "value": "0x7B2"
      },
      "1926": {
        "fn": "LLMMarket.getActiveRequests",
        "offset": [
          529,
          553
        ],
        "op": "JUMP",
        "path": "0"
      },
      "1927": {
        "fn": "LLMMarket.getActiveRequests",
        "offset": [
          529,
          553
        ],
        "op": "JUMPDEST",
        "path": "0"
      },
      "1928": {
        "fn": "LLMMarket.getActiveRequests",
        "offset": [
          529,
          553
        ],
        "op": "DUP3",
        "path": "0"
      },
      "1929": {
        "fn": "LLMMarket.getActiveRequests",
        "offset": [
          529,
          553
        ],
        "op": "ADD",
        "path": "0"
      },
      "1930": {
        "fn": "LLMMarket.getActiveRequests",
        "offset": [
          529,
          553
        ],
        "op": "SWAP2",
        "path": "0"
      },
      "1931": {
        "fn": "LLMMarket.getActiveRequests",
        "offset": [
          529,
          553
        ],
        "op": "SWAP1",
        "path": "0"
      },
      "1932": {
        "fn": "LLMMarket.getActiveRequests",
        "offset": [
          529,
          553
        ],
        "op": "PUSH1",
        "path": "0",
        "value": "0x0"
      },
      "1934": {
        "fn": "LLMMarket.getActiveRequests",
        "offset": [
          529,
          553
        ],
        "op": "MSTORE",
        "path": "0"
      },
      "1935": {
        "fn": "LLMMarket.getActiveRequests",
        "offset": [
          529,
          553
        ],
        "op": "PUSH1",
        "path": "0",
        "value": "0x20"
      },
      "1937": {
        "fn": "LLMMarket.getActiveRequests",
        "offset": [
          529,
          553
        ],
        "op": "PUSH1",
        "path": "0",
        "value": "0x0"
      },
      "1939": {
        "fn": "LLMMarket.getActiveRequests",
        "offset": [
          529,
          553
        ],
        "op": "KECCAK256",
        "path": "0"
      },
      "1940": {
        "fn": "LLMMarket.getActiveRequests",
        "offset": [
          529,
          553
        ],
        "op": "SWAP1",
        "path": "0"
      },
      "1941": {
        "fn": "LLMMarket.getActiveRequests",
        "offset": [
          529,
          553
        ],
        "op": "JUMPDEST",
        "path": "0"
      },
      "1942": {
        "fn": "LLMMarket.getActiveRequests",
        "offset": [
          529,
          553
        ],
        "op": "DUP2",
        "path": "0"
      },
      "1943": {
        "fn": "LLMMarket.getActiveRequests",
        "offset": [
          529,
          553
        ],
        "op": "SLOAD",
        "path": "0"
      },
      "1944": {
        "fn": "LLMMarket.getActiveRequests",
        "offset": [
          529,
          553
        ],
        "op": "DUP2",
        "path": "0"
      },
      "1945": {
        "fn": "LLMMarket.getActiveRequests",
        "offset": [
          529,
          553
        ],
        "op": "MSTORE",
        "path": "0"
      },
      "1946": {
        "fn": "LLMMarket.getActiveRequests",
        "offset": [
          529,
          553
        ],
        "op": "SWAP1",
        "path": "0"
      },
      "1947": {
        "fn": "LLMMarket.getActiveRequests",
        "offset": [
          529,
          553
        ],
        "op": "PUSH1",
        "path": "0",
        "value": "0x1"
      },
      "1949": {
        "fn": "LLMMarket.getActiveRequests",
        "offset": [
          529,
          553
        ],
        "op": "ADD",
        "path": "0"
      },
      "1950": {
        "fn": "LLMMarket.getActiveRequests",
        "offset": [
          529,
          553
        ],
        "op": "SWAP1",
        "path": "0"
      },
      "1951": {
        "fn": "LLMMarket.getActiveRequests",
        "offset": [
          529,
          553
        ],
        "op": "PUSH1",
        "path": "0",
        "value": "0x20"
      },
      "1953": {
        "fn": "LLMMarket.getActiveRequests",
        "offset": [
          529,
          553
        ],
        "op": "ADD",
        "path": "0"
      },
      "1954": {
        "fn": "LLMMarket.getActiveRequests",
        "offset": [
          529,
          553
        ],
        "op": "DUP1",
        "path": "0"
      },
      "1955": {
        "fn": "LLMMarket.getActiveRequests",
        "offset": [
          529,
          553
        ],
        "op": "DUP4",
        "path": "0"
      },
      "1956": {
        "fn": "LLMMarket.getActiveRequests",
        "offset": [
          529,
          553
        ],
        "op": "GT",
        "path": "0"
      },
      "1957": {
        "fn": "LLMMarket.getActiveRequests",
        "offset": [
          529,
          553
        ],
        "op": "PUSH2",
        "path": "0",
        "value": "0x795"
      },
      "1960": {
        "fn": "LLMMarket.getActiveRequests",
        "offset": [
          529,
          553
        ],
        "op": "JUMPI",
        "path": "0"
      },
      "1961": {
        "fn": "LLMMarket.getActiveRequests",
        "offset": [
          529,
          553
        ],
        "op": "DUP3",
        "path": "0"
      },
      "1962": {
        "fn": "LLMMarket.getActiveRequests",
        "offset": [
          529,
          553
        ],
        "op": "SWAP1",
        "path": "0"
      },
      "1963": {
        "fn": "LLMMarket.getActiveRequests",
        "offset": [
          529,
          553
        ],
        "op": "SUB",
        "path": "0"
      },
      "1964": {
        "fn": "LLMMarket.getActiveRequests",
        "offset": [
          529,
          553
        ],
        "op": "PUSH1",
        "path": "0",
        "value": "0x1F"
      },
      "1966": {
        "fn": "LLMMarket.getActiveRequests",
        "offset": [
          529,
          553
        ],
        "op": "AND",
        "path": "0"
      },
      "1967": {
        "fn": "LLMMarket.getActiveRequests",
        "offset": [
          529,
          553
        ],
        "op": "DUP3",
        "path": "0"
      },
      "1968": {
        "fn": "LLMMarket.getActiveRequests",
        "offset": [
          529,
          553
        ],
        "op": "ADD",
        "path": "0"
      },
      "1969": {
        "fn": "LLMMarket.getActiveRequests",
        "offset": [
          529,
          553
        ],
        "op": "SWAP2",
        "path": "0"
      },
      "1970": {
        "fn": "LLMMarket.getActiveRequests",
        "offset": [
          529,
          553
        ],
        "op": "JUMPDEST",
        "path": "0"
      },
      "1971": {
        "op": "POP"
      },
      "1972": {
        "op": "POP"
      },
      "1973": {
        "op": "POP"
      },
      "1974": {
        "op": "POP"
      },
      "1975": {
        "offset": [
          529,
          553
        ],
        "op": "PUSH1",
        "path": "0",
        "value": "0x1"
      },
      "1977": {
        "fn": "LLMMarket.getActiveRequests",
        "offset": [
          529,
          553
        ],
        "op": "DUP4",
        "path": "0"
      },
      "1978": {
        "fn": "LLMMarket.getActiveRequests",
        "offset": [
          529,
          553
        ],
        "op": "ADD",
        "path": "0"
      },
      "1979": {
        "fn": "LLMMarket.getActiveRequests",
        "offset": [
          529,
          553
        ],
        "op": "SLOAD",
        "path": "0"
      },
      "1980": {
        "fn": "LLMMarket.getActiveRequests",
        "offset": [
          529,
          553
        ],
        "op": "PUSH1",
        "path": "0",
        "value": "0x2"
      },
      "1982": {
        "fn": "LLMMarket.getActiveRequests",
        "offset": [
          529,
          553
        ],
        "op": "SWAP1",
        "path": "0"
      },
      "1983": {
        "fn": "LLMMarket.getActiveRequests",
        "offset": [
          529,
          553
        ],
        "op": "SWAP4",
        "path": "0"
      },
      "1984": {
        "fn": "LLMMarket.getActiveRequests",
        "offset": [
          529,
          553
        ],
        "op": "ADD",
        "path": "0"
      },
      "1985": {
        "fn": "LLMMarket.getActiveRequests",
        "offset": [
          529,
          553
        ],
        "op": "SLOAD",
        "path": "0"
      },
      "1986": {
        "fn": "LLMMarket.getActiveRequests",
        "offset": [
          529,
          553
        ],
        "op": "SWAP2",
        "path": "0"
      },
      "1987": {
        "fn": "LLMMarket.getActiveRequests",
        "offset": [
          529,
          553
        ],
        "op": "SWAP3",
        "path": "0"
      },
      "1988": {
        "op": "PUSH1",
        "value": "0x1"
      },
      "1990": {
        "op": "PUSH1",
        "value": "0x1"
      },
      "1992": {
        "op": "PUSH1",
        "value": "0xA0"
      },
      "1994": {
        "op": "SHL"
      },
      "1995": {
        "op": "SUB"
      },
      "1996": {
        "offset": [
          529,
          553
        ],
        "op": "AND",
        "path": "0"
      },
      "1997": {
        "fn": "LLMMarket.getActiveRequests",
        "offset": [
          529,
          553
        ],
        "op": "SWAP2",
        "path": "0"
      },
      "1998": {
        "fn": "LLMMarket.getActiveRequests",
        "offset": [
          529,
          553
        ],
        "op": "SWAP1",
        "path": "0"
      },
      "1999": {
        "op": "POP"
      },
      "2000": {
        "offset": [
          529,
          553
        ],
        "op": "DUP4",
        "path": "0"
      },
      "2001": {
        "fn": "LLMMarket.getActiveRequests",
        "jump": "o",
        "offset": [
          529,
          553
        ],
        "op": "JUMP",
        "path": "0"
      },
      "2002": {
        "fn": "LLMMarket.removeHost",
        "offset": [
          860,
          1150
        ],
        "op": "JUMPDEST",
        "path": "0"
      },
      "2003": {
        "fn": "LLMMarket.removeHost",
        "offset": [
          925,
          929
        ],
        "op": "PUSH1",
        "path": "0",
        "value": "0x0"
      },
      "2005": {
        "offset": [
          200,
          206
        ],
        "op": "DUP1",
        "path": "0"
      },
      "2006": {
        "fn": "LLMMarket.removeHost",
        "offset": [
          200,
          206
        ],
        "op": "SLOAD",
        "path": "0"
      },
      "2007": {
        "op": "PUSH1",
        "value": "0x1"
      },
      "2009": {
        "op": "PUSH1",
        "value": "0x1"
      },
      "2011": {
        "op": "PUSH1",
        "value": "0xA0"
      },
      "2013": {
        "op": "SHL"
      },
      "2014": {
        "op": "SUB"
      },
      "2015": {
        "offset": [
          200,
          206
        ],
        "op": "AND",
        "path": "0"
      },
      "2016": {
        "offset": [
          188,
          198
        ],
        "op": "CALLER",
        "path": "0"
      },
      "2017": {
        "offset": [
          188,
          206
        ],
        "op": "EQ",
        "path": "0"
      },
      "2018": {
        "offset": [
          185,
          263
        ],
        "op": "PUSH2",
        "path": "0",
        "value": "0x800"
      },
      "2021": {
        "offset": [
          185,
          263
        ],
        "op": "JUMPI",
        "path": "0"
      },
      "2022": {
        "offset": [
          228,
          252
        ],
        "op": "PUSH1",
        "path": "0",
        "value": "0x40"
      },
      "2024": {
        "fn": "LLMMarket.removeHost",
        "offset": [
          228,
          252
        ],
        "op": "MLOAD",
        "path": "0"
      },
      "2025": {
        "op": "PUSH4",
        "value": "0x472511EB"
      },
      "2030": {
        "op": "PUSH1",
        "value": "0xE1"
      },
      "2032": {
        "op": "SHL"
      },
      "2033": {
        "offset": [
          228,
          252
        ],
        "op": "DUP2",
        "path": "0"
      },
      "2034": {
        "fn": "LLMMarket.removeHost",
        "offset": [
          228,
          252
        ],
        "op": "MSTORE",
        "path": "0"
      },
      "2035": {
        "offset": [
          241,
          251
        ],
        "op": "CALLER",
        "path": "0"
      },
      "2036": {
        "offset": [
          228,
          252
        ],
        "op": "PUSH1",
        "path": "0",
        "value": "0x4"
      },
      "2038": {
        "fn": "LLMMarket.removeHost",
        "offset": [
          228,
          252
        ],
        "op": "DUP3",
        "path": "0"
      },
      "2039": {
        "fn": "LLMMarket.removeHost",
        "offset": [
          228,
          252
        ],
        "op": "ADD",
        "path": "0"
      },
      "2040": {
        "op": "MSTORE"
      },
      "2041": {
        "op": "PUSH1",
        "value": "0x24"
      },
      "2043": {
        "op": "ADD"
      },
      "2044": {
        "offset": [
          228,
          252
        ],
        "op": "PUSH2",
        "path": "0",
        "value": "0x2F8"
      },
      "2047": {
        "op": "JUMP"
      },
      "2048": {
        "offset": [
          185,
          263
        ],
        "op": "JUMPDEST",
        "path": "0"
      },
      "2049": {
        "fn": "LLMMarket.removeHost",
        "offset": [
          945,
          954
        ],
        "op": "PUSH1",
        "path": "0",
        "value": "0x0"
      },
      "2051": {
        "fn": "LLMMarket.removeHost",
        "offset": [
          941,
          1123
        ],
        "op": "JUMPDEST",
        "path": "0"
      },
      "2052": {
        "fn": "LLMMarket.removeHost",
        "offset": [
          960,
          968
        ],
        "op": "PUSH1",
        "path": "0",
        "value": "0x1"
      },
      "2054": {
        "fn": "LLMMarket.removeHost",
        "offset": [
          960,
          975
        ],
        "op": "SLOAD",
        "path": "0"
      },
      "2055": {
        "fn": "LLMMarket.removeHost",
        "offset": [
          958,
          975
        ],
        "op": "DUP2",
        "path": "0"
      },
      "2056": {
        "fn": "LLMMarket.removeHost",
        "offset": [
          958,
          975
        ],
        "op": "LT",
        "path": "0"
      },
      "2057": {
        "fn": "LLMMarket.removeHost",
        "offset": [
          941,
          1123
        ],
        "op": "ISZERO",
        "path": "0"
      },
      "2058": {
        "fn": "LLMMarket.removeHost",
        "offset": [
          941,
          1123
        ],
        "op": "PUSH2",
        "path": "0",
        "value": "0x8A9"
      },
      "2061": {
        "fn": "LLMMarket.removeHost",
        "offset": [
          941,
          1123
        ],
        "op": "JUMPI",
        "path": "0"
      },
      "2062": {
        "fn": "LLMMarket.removeHost",
        "offset": [
          1025,
          1032
        ],
        "op": "DUP3",
        "path": "0"
      },
      "2063": {
        "op": "PUSH1",
        "value": "0x1"
      },
      "2065": {
        "op": "PUSH1",
        "value": "0x1"
      },
      "2067": {
        "op": "PUSH1",
        "value": "0xA0"
      },
      "2069": {
        "op": "SHL"
      },
      "2070": {
        "op": "SUB"
      },
      "2071": {
        "fn": "LLMMarket.removeHost",
        "offset": [
          998,
          1032
        ],
        "op": "AND",
        "path": "0"
      },
      "2072": {
        "fn": "LLMMarket.removeHost",
        "offset": [
          998,
          1006
        ],
        "op": "PUSH1",
        "path": "0",
        "value": "0x1"
      },
      "2074": {
        "fn": "LLMMarket.removeHost",
        "offset": [
          1007,
          1008
        ],
        "op": "DUP3",
        "path": "0"
      },
      "2075": {
        "fn": "LLMMarket.removeHost",
        "offset": [
          998,
          1009
        ],
        "op": "DUP2",
        "path": "0"
      },
      "2076": {
        "fn": "LLMMarket.removeHost",
        "offset": [
          998,
          1009
        ],
        "op": "SLOAD",
        "path": "0"
      },
      "2077": {
        "fn": "LLMMarket.removeHost",
        "offset": [
          998,
          1009
        ],
        "op": "DUP2",
        "path": "0"
      },
      "2078": {
        "fn": "LLMMarket.removeHost",
        "offset": [
          998,
          1009
        ],
        "op": "LT",
        "path": "0"
      },
      "2079": {
        "fn": "LLMMarket.removeHost",
        "offset": [
          998,
          1009
        ],
        "op": "PUSH2",
        "path": "0",
        "value": "0x82A"
      },
      "2082": {
        "fn": "LLMMarket.removeHost",
        "offset": [
          998,
          1009
        ],
        "op": "JUMPI",
        "path": "0"
      },
      "2083": {
        "fn": "LLMMarket.removeHost",
        "offset": [
          998,
          1009
        ],
        "op": "PUSH2",
        "path": "0",
        "value": "0x82A"
      },
      "2086": {
        "fn": "LLMMarket.removeHost",
        "offset": [
          998,
          1009
        ],
        "op": "PUSH2",
        "path": "0",
        "value": "0xD69"
      },
      "2089": {
        "fn": "LLMMarket.removeHost",
        "jump": "i",
        "offset": [
          998,
          1009
        ],
        "op": "JUMP",
        "path": "0"
      },
      "2090": {
        "fn": "LLMMarket.removeHost",
        "offset": [
          998,
          1009
        ],
        "op": "JUMPDEST",
        "path": "0"
      },
      "2091": {
        "fn": "LLMMarket.removeHost",
        "offset": [
          998,
          1009
        ],
        "op": "PUSH1",
        "path": "0",
        "value": "0x0"
      },
      "2093": {
        "fn": "LLMMarket.removeHost",
        "offset": [
          998,
          1009
        ],
        "op": "SWAP2",
        "path": "0"
      },
      "2094": {
        "fn": "LLMMarket.removeHost",
        "offset": [
          998,
          1009
        ],
        "op": "DUP3",
        "path": "0"
      },
      "2095": {
        "fn": "LLMMarket.removeHost",
        "offset": [
          998,
          1009
        ],
        "op": "MSTORE",
        "path": "0"
      },
      "2096": {
        "fn": "LLMMarket.removeHost",
        "offset": [
          998,
          1009
        ],
        "op": "PUSH1",
        "path": "0",
        "value": "0x20"
      },
      "2098": {
        "fn": "LLMMarket.removeHost",
        "offset": [
          998,
          1009
        ],
        "op": "SWAP1",
        "path": "0"
      },
      "2099": {
        "fn": "LLMMarket.removeHost",
        "offset": [
          998,
          1009
        ],
        "op": "SWAP2",
        "path": "0"
      },
      "2100": {
        "fn": "LLMMarket.removeHost",
        "offset": [
          998,
          1009
        ],
        "op": "KECCAK256",
        "path": "0"
      },
      "2101": {
        "fn": "LLMMarket.removeHost",
        "offset": [
          998,
          1021
        ],
        "op": "PUSH1",
        "path": "0",
        "value": "0x1"
      },
      "2103": {
        "fn": "LLMMarket.removeHost",
        "offset": [
          998,
          1009
        ],
        "op": "PUSH1",
        "path": "0",
        "value": "0x3"
      },
      "2105": {
        "fn": "LLMMarket.removeHost",
        "offset": [
          998,
          1009
        ],
        "op": "SWAP1",
        "path": "0"
      },
      "2106": {
        "fn": "LLMMarket.removeHost",
        "offset": [
          998,
          1009
        ],
        "op": "SWAP3",
        "path": "0"
      },
      "2107": {
        "fn": "LLMMarket.removeHost",
        "offset": [
          998,
          1009
        ],
        "op": "MUL",
        "path": "0"
      },
      "2108": {
        "fn": "LLMMarket.removeHost",
        "offset": [
          998,
          1009
        ],
        "op": "ADD",
        "path": "0"
      },
      "2109": {
        "fn": "LLMMarket.removeHost",
        "offset": [
          998,
          1021
        ],
        "op": "ADD",
        "path": "0"
      },
      "2110": {
        "fn": "LLMMarket.removeHost",
        "offset": [
          998,
          1021
        ],
        "op": "SLOAD",
        "path": "0"
      },
      "2111": {
        "op": "PUSH1",
        "value": "0x1"
      },
      "2113": {
        "op": "PUSH1",
        "value": "0x1"
      },
      "2115": {
        "op": "PUSH1",
        "value": "0xA0"
      },
      "2117": {
        "op": "SHL"
      },
      "2118": {
        "op": "SUB"
      },
      "2119": {
        "fn": "LLMMarket.removeHost",
        "offset": [
          998,
          1021
        ],
        "op": "AND",
        "path": "0"
      },
      "2120": {
        "branch": 20,
        "fn": "LLMMarket.removeHost",
        "offset": [
          998,
          1032
        ],
        "op": "SUB",
        "path": "0"
      },
      "2121": {
        "fn": "LLMMarket.removeHost",
        "offset": [
          995,
          1113
        ],
        "op": "PUSH2",
        "path": "0",
        "value": "0x8A1"
      },
      "2124": {
        "branch": 20,
        "fn": "LLMMarket.removeHost",
        "offset": [
          995,
          1113
        ],
        "op": "JUMPI",
        "path": "0"
      },
      "2125": {
        "fn": "LLMMarket.removeHost",
        "offset": [
          1058,
          1066
        ],
        "op": "PUSH1",
        "path": "0",
        "statement": 14,
        "value": "0x1"
      },
      "2127": {
        "fn": "LLMMarket.removeHost",
        "offset": [
          1067,
          1068
        ],
        "op": "DUP2",
        "path": "0"
      },
      "2128": {
        "fn": "LLMMarket.removeHost",
        "offset": [
          1058,
          1069
        ],
        "op": "DUP2",
        "path": "0"
      },
      "2129": {
        "fn": "LLMMarket.removeHost",
        "offset": [
          1058,
          1069
        ],
        "op": "SLOAD",
        "path": "0"
      },
      "2130": {
        "fn": "LLMMarket.removeHost",
        "offset": [
          1058,
          1069
        ],
        "op": "DUP2",
        "path": "0"
      },
      "2131": {
        "fn": "LLMMarket.removeHost",
        "offset": [
          1058,
          1069
        ],
        "op": "LT",
        "path": "0"
      },
      "2132": {
        "fn": "LLMMarket.removeHost",
        "offset": [
          1058,
          1069
        ],
        "op": "PUSH2",
        "path": "0",
        "value": "0x85F"
      },
      "2135": {
        "fn": "LLMMarket.removeHost",
        "offset": [
          1058,
          1069
        ],
        "op": "JUMPI",
        "path": "0"
      },
      "2136": {
        "fn": "LLMMarket.removeHost",
        "offset": [
          1058,
          1069
        ],
        "op": "PUSH2",
        "path": "0",
        "value": "0x85F"
      },
      "2139": {
        "fn": "LLMMarket.removeHost",
        "offset": [
          1058,
          1069
        ],
        "op": "PUSH2",
        "path": "0",
        "value": "0xD69"
      },
      "2142": {
        "fn": "LLMMarket.removeHost",
        "jump": "i",
        "offset": [
          1058,
          1069
        ],
        "op": "JUMP",
        "path": "0"
      },
      "2143": {
        "fn": "LLMMarket.removeHost",
        "offset": [
          1058,
          1069
        ],
        "op": "JUMPDEST",
        "path": "0"
      },
      "2144": {
        "fn": "LLMMarket.removeHost",
        "offset": [
          1058,
          1069
        ],
        "op": "PUSH1",
        "path": "0",
        "value": "0x0"
      },
      "2146": {
        "fn": "LLMMarket.removeHost",
        "offset": [
          1058,
          1069
        ],
        "op": "SWAP2",
        "path": "0"
      },
      "2147": {
        "fn": "LLMMarket.removeHost",
        "offset": [
          1058,
          1069
        ],
        "op": "DUP3",
        "path": "0"
      },
      "2148": {
        "fn": "LLMMarket.removeHost",
        "offset": [
          1058,
          1069
        ],
        "op": "MSTORE",
        "path": "0"
      },
      "2149": {
        "fn": "LLMMarket.removeHost",
        "offset": [
          1058,
          1069
        ],
        "op": "PUSH1",
        "path": "0",
        "value": "0x20"
      },
      "2151": {
        "fn": "LLMMarket.removeHost",
        "offset": [
          1058,
          1069
        ],
        "op": "DUP3",
        "path": "0"
      },
      "2152": {
        "fn": "LLMMarket.removeHost",
        "offset": [
          1058,
          1069
        ],
        "op": "KECCAK256",
        "path": "0"
      },
      "2153": {
        "fn": "LLMMarket.removeHost",
        "offset": [
          1058,
          1069
        ],
        "op": "PUSH1",
        "path": "0",
        "value": "0x3"
      },
      "2155": {
        "fn": "LLMMarket.removeHost",
        "offset": [
          1058,
          1069
        ],
        "op": "SWAP1",
        "path": "0"
      },
      "2156": {
        "fn": "LLMMarket.removeHost",
        "offset": [
          1058,
          1069
        ],
        "op": "SWAP2",
        "path": "0"
      },
      "2157": {
        "fn": "LLMMarket.removeHost",
        "offset": [
          1058,
          1069
        ],
        "op": "MUL",
        "path": "0"
      },
      "2158": {
        "fn": "LLMMarket.removeHost",
        "offset": [
          1058,
          1069
        ],
        "op": "ADD",
        "path": "0"
      },
      "2159": {
        "fn": "LLMMarket.removeHost",
        "offset": [
          1058,
          1069
        ],
        "op": "SWAP1",
        "path": "0"
      },
      "2160": {
        "fn": "LLMMarket.removeHost",
        "offset": [
          1051,
          1069
        ],
        "op": "PUSH2",
        "path": "0",
        "value": "0x879"
      },
      "2163": {
        "fn": "LLMMarket.removeHost",
        "offset": [
          1058,
          1069
        ],
        "op": "DUP3",
        "path": "0"
      },
      "2164": {
        "fn": "LLMMarket.removeHost",
        "offset": [
          1058,
          1069
        ],
        "op": "DUP3",
        "path": "0"
      },
      "2165": {
        "fn": "LLMMarket.removeHost",
        "offset": [
          1051,
          1069
        ],
        "op": "PUSH2",
        "path": "0",
        "value": "0x8D8"
      },
      "2168": {
        "fn": "LLMMarket.removeHost",
        "jump": "i",
        "offset": [
          1051,
          1069
        ],
        "op": "JUMP",
        "path": "0"
      },
      "2169": {
        "fn": "LLMMarket.removeHost",
        "offset": [
          1051,
          1069
        ],
        "op": "JUMPDEST",
        "path": "0"
      },
      "2170": {
        "op": "POP"
      },
      "2171": {
        "fn": "LLMMarket.removeHost",
        "offset": [
          1051,
          1069
        ],
        "op": "PUSH1",
        "path": "0",
        "value": "0x1"
      },
      "2173": {
        "fn": "LLMMarket.removeHost",
        "offset": [
          1051,
          1069
        ],
        "op": "DUP2",
        "path": "0"
      },
      "2174": {
        "fn": "LLMMarket.removeHost",
        "offset": [
          1051,
          1069
        ],
        "op": "DUP2",
        "path": "0"
      },
      "2175": {
        "fn": "LLMMarket.removeHost",
        "offset": [
          1051,
          1069
        ],
        "op": "ADD",
        "path": "0"
      },
      "2176": {
        "fn": "LLMMarket.removeHost",
        "offset": [
          1051,
          1069
        ],
        "op": "DUP1",
        "path": "0"
      },
      "2177": {
        "fn": "LLMMarket.removeHost",
        "offset": [
          1051,
          1069
        ],
        "op": "SLOAD",
        "path": "0"
      },
      "2178": {
        "op": "PUSH1",
        "value": "0x1"
      },
      "2180": {
        "op": "PUSH1",
        "value": "0x1"
      },
      "2182": {
        "op": "PUSH1",
        "value": "0xA0"
      },
      "2184": {
        "op": "SHL"
      },
      "2185": {
        "op": "SUB"
      },
      "2186": {
        "op": "NOT"
      },
      "2187": {
        "fn": "LLMMarket.removeHost",
        "offset": [
          1051,
          1069
        ],
        "op": "AND",
        "path": "0"
      },
      "2188": {
        "fn": "LLMMarket.removeHost",
        "offset": [
          1051,
          1069
        ],
        "op": "SWAP1",
        "path": "0"
      },
      "2189": {
        "fn": "LLMMarket.removeHost",
        "offset": [
          1051,
          1069
        ],
        "op": "SSTORE",
        "path": "0"
      },
      "2190": {
        "fn": "LLMMarket.removeHost",
        "offset": [
          1051,
          1069
        ],
        "op": "PUSH1",
        "path": "0",
        "value": "0x0"
      },
      "2192": {
        "fn": "LLMMarket.removeHost",
        "offset": [
          1051,
          1069
        ],
        "op": "PUSH1",
        "path": "0",
        "value": "0x2"
      },
      "2194": {
        "fn": "LLMMarket.removeHost",
        "offset": [
          1051,
          1069
        ],
        "op": "SWAP1",
        "path": "0"
      },
      "2195": {
        "fn": "LLMMarket.removeHost",
        "offset": [
          1051,
          1069
        ],
        "op": "SWAP3",
        "path": "0"
      },
      "2196": {
        "fn": "LLMMarket.removeHost",
        "offset": [
          1051,
          1069
        ],
        "op": "ADD",
        "path": "0"
      },
      "2197": {
        "fn": "LLMMarket.removeHost",
        "offset": [
          1051,
          1069
        ],
        "op": "SWAP2",
        "path": "0"
      },
      "2198": {
        "fn": "LLMMarket.removeHost",
        "offset": [
          1051,
          1069
        ],
        "op": "SWAP1",
        "path": "0"
      },
      "2199": {
        "fn": "LLMMarket.removeHost",
        "offset": [
          1051,
          1069
        ],
        "op": "SWAP2",
        "path": "0"
      },
      "2200": {
        "fn": "LLMMarket.removeHost",
        "offset": [
          1051,
          1069
        ],
        "op": "SSTORE",
        "path": "0"
      },
      "2201": {
        "fn": "LLMMarket.removeHost",
        "offset": [
          1051,
          1069
        ],
        "op": "SWAP2",
        "path": "0"
      },
      "2202": {
        "op": "POP"
      },
      "2203": {
        "fn": "LLMMarket.removeHost",
        "offset": [
          1087,
          1098
        ],
        "op": "PUSH2",
        "path": "0",
        "statement": 15,
        "value": "0x8AF"
      },
      "2206": {
        "fn": "LLMMarket.removeHost",
        "offset": [
          1087,
          1098
        ],
        "op": "SWAP1",
        "path": "0"
      },
      "2207": {
        "op": "POP"
      },
      "2208": {
        "fn": "LLMMarket.removeHost",
        "offset": [
          1087,
          1098
        ],
        "op": "JUMP",
        "path": "0"
      },
      "2209": {
        "fn": "LLMMarket.removeHost",
        "offset": [
          995,
          1113
        ],
        "op": "JUMPDEST",
        "path": "0"
      },
      "2210": {
        "fn": "LLMMarket.removeHost",
        "offset": [
          977,
          980
        ],
        "op": "PUSH1",
        "path": "0",
        "statement": 16,
        "value": "0x1"
      },
      "2212": {
        "fn": "LLMMarket.removeHost",
        "offset": [
          977,
          980
        ],
        "op": "ADD",
        "path": "0"
      },
      "2213": {
        "fn": "LLMMarket.removeHost",
        "offset": [
          941,
          1123
        ],
        "op": "PUSH2",
        "path": "0",
        "value": "0x803"
      },
      "2216": {
        "fn": "LLMMarket.removeHost",
        "offset": [
          941,
          1123
        ],
        "op": "JUMP",
        "path": "0"
      },
      "2217": {
        "fn": "LLMMarket.removeHost",
        "offset": [
          941,
          1123
        ],
        "op": "JUMPDEST",
        "path": "0"
      },
      "2218": {
        "fn": "LLMMarket.removeHost",
        "offset": [
          941,
          1123
        ],
        "op": "POP",
        "path": "0"
      },
      "2219": {
        "fn": "LLMMarket.removeHost",
        "offset": [
          1139,
          1143
        ],
        "op": "PUSH1",
        "path": "0",
        "statement": 17,
        "value": "0x1"
      },
      "2221": {
        "fn": "LLMMarket.removeHost",
        "offset": [
          1132,
          1143
        ],
        "op": "SWAP1",
        "path": "0"
      },
      "2222": {
        "fn": "LLMMarket.removeHost",
        "offset": [
          1132,
          1143
        ],
        "op": "POP",
        "path": "0"
      },
      "2223": {
        "offset": [
          272,
          273
        ],
        "op": "JUMPDEST",
        "path": "0"
      },
      "2224": {
        "fn": "LLMMarket.removeHost",
        "offset": [
          860,
          1150
        ],
        "op": "SWAP2",
        "path": "0"
      },
      "2225": {
        "fn": "LLMMarket.removeHost",
        "offset": [
          860,
          1150
        ],
        "op": "SWAP1",
        "path": "0"
      },
      "2226": {
        "fn": "LLMMarket.removeHost",
        "offset": [
          860,
          1150
        ],
        "op": "POP",
        "path": "0"
      },
      "2227": {
        "fn": "LLMMarket.removeHost",
        "jump": "o",
        "offset": [
          860,
          1150
        ],
        "op": "JUMP",
        "path": "0"
      },
      "2228": {
        "op": "JUMPDEST"
      },
      "2229": {
        "op": "POP"
      },
      "2230": {
        "op": "DUP1"
      },
      "2231": {
        "op": "SLOAD"
      },
      "2232": {
        "op": "PUSH1",
        "value": "0x0"
      },
      "2234": {
        "op": "DUP3"
      },
      "2235": {
        "op": "SSTORE"
      },
      "2236": {
        "op": "PUSH1",
        "value": "0x2"
      },
      "2238": {
        "op": "MUL"
      },
      "2239": {
        "op": "SWAP1"
      },
      "2240": {
        "op": "PUSH1",
        "value": "0x0"
      },
      "2242": {
        "op": "MSTORE"
      },
      "2243": {
        "op": "PUSH1",
        "value": "0x20"
      },
      "2245": {
        "op": "PUSH1",
        "value": "0x0"
      },
      "2247": {
        "op": "KECCAK256"
      },
      "2248": {
        "op": "SWAP1"
      },
      "2249": {
        "op": "DUP2"
      },
      "2250": {
        "op": "ADD"
      },
      "2251": {
        "op": "SWAP1"
      },
      "2252": {
        "op": "PUSH2",
        "value": "0x8D5"
      },
      "2255": {
        "op": "SWAP2"
      },
      "2256": {
        "op": "SWAP1"
      },
      "2257": {
        "op": "PUSH2",
        "value": "0x912"
      },
      "2260": {
        "jump": "i",
        "op": "JUMP"
      },
      "2261": {
        "op": "JUMPDEST"
      },
      "2262": {
        "op": "POP"
      },
      "2263": {
        "jump": "o",
        "op": "JUMP"
      },
      "2264": {
        "op": "JUMPDEST"
      },
      "2265": {
        "op": "POP"
      },
      "2266": {
        "op": "DUP1"
      },
      "2267": {
        "op": "SLOAD"
      },
      "2268": {
        "op": "PUSH2",
        "value": "0x8E4"
      },
      "2271": {
        "op": "SWAP1"
      },
      "2272": {
        "op": "PUSH2",
        "value": "0xC1E"
      },
      "2275": {
        "jump": "i",
        "op": "JUMP"
      },
      "2276": {
        "op": "JUMPDEST"
      },
      "2277": {
        "op": "PUSH1",
        "value": "0x0"
      },
      "2279": {
        "op": "DUP3"
      },
      "2280": {
        "op": "SSTORE"
      },
      "2281": {
        "op": "DUP1"
      },
      "2282": {
        "op": "PUSH1",
        "value": "0x1F"
      },
      "2284": {
        "op": "LT"
      },
      "2285": {
        "op": "PUSH2",
        "value": "0x8F4"
      },
      "2288": {
        "op": "JUMPI"
      },
      "2289": {
        "op": "POP"
      },
      "2290": {
        "op": "POP"
      },
      "2291": {
        "jump": "o",
        "op": "JUMP"
      },
      "2292": {
        "op": "JUMPDEST"
      },
      "2293": {
        "op": "PUSH1",
        "value": "0x1F"
      },
      "2295": {
        "op": "ADD"
      },
      "2296": {
        "op": "PUSH1",
        "value": "0x20"
      },
      "2298": {
        "op": "SWAP1"
      },
      "2299": {
        "op": "DIV"
      },
      "2300": {
        "op": "SWAP1"
      },
      "2301": {
        "op": "PUSH1",
        "value": "0x0"
      },
      "2303": {
        "op": "MSTORE"
      },
      "2304": {
        "op": "PUSH1",
        "value": "0x20"
      },
      "2306": {
        "op": "PUSH1",
        "value": "0x0"
      },
      "2308": {
        "op": "KECCAK256"
      },
      "2309": {
        "op": "SWAP1"
      },
      "2310": {
        "op": "DUP2"
      },
      "2311": {
        "op": "ADD"
      },
      "2312": {
        "op": "SWAP1"
      },
      "2313": {
        "op": "PUSH2",
        "value": "0x8D5"
      },
      "2316": {
        "op": "SWAP2"
      },
      "2317": {
        "op": "SWAP1"
      },
      "2318": {
        "op": "PUSH2",
        "value": "0x931"
      },
      "2321": {
        "jump": "i",
        "op": "JUMP"
      },
      "2322": {
        "op": "JUMPDEST"
      },
      "2323": {
        "op": "JUMPDEST"
      },
      "2324": {
        "op": "DUP1"
      },
      "2325": {
        "op": "DUP3"
      },
      "2326": {
        "op": "GT"
      },
      "2327": {
        "op": "ISZERO"
      },
      "2328": {
        "op": "PUSH2",
        "value": "0x92D"
      },
      "2331": {
        "op": "JUMPI"
      },
      "2332": {
        "op": "PUSH1",
        "value": "0x0"
      },
      "2334": {
        "op": "DUP1"
      },
      "2335": {
        "op": "DUP3"
      },
      "2336": {
        "op": "SSTORE"
      },
      "2337": {
        "op": "PUSH1",
        "value": "0x1"
      },
      "2339": {
        "op": "DUP3"
      },
      "2340": {
        "op": "ADD"
      },
      "2341": {
        "op": "SSTORE"
      },
      "2342": {
        "op": "PUSH1",
        "value": "0x2"
      },
      "2344": {
        "op": "ADD"
      },
      "2345": {
        "op": "PUSH2",
        "value": "0x913"
      },
      "2348": {
        "op": "JUMP"
      },
      "2349": {
        "op": "JUMPDEST"
      },
      "2350": {
        "op": "POP"
      },
      "2351": {
        "op": "SWAP1"
      },
      "2352": {
        "jump": "o",
        "op": "JUMP"
      },
      "2353": {
        "op": "JUMPDEST"
      },
      "2354": {
        "op": "JUMPDEST"
      },
      "2355": {
        "op": "DUP1"
      },
      "2356": {
        "op": "DUP3"
      },
      "2357": {
        "op": "GT"
      },
      "2358": {
        "op": "ISZERO"
      },
      "2359": {
        "op": "PUSH2",
        "value": "0x92D"
      },
      "2362": {
        "op": "JUMPI"
      },
      "2363": {
        "op": "PUSH1",
        "value": "0x0"
      },
      "2365": {
        "op": "DUP2"
      },
      "2366": {
        "op": "SSTORE"
      },
      "2367": {
        "op": "PUSH1",
        "value": "0x1"
      },
      "2369": {
        "op": "ADD"
      },
      "2370": {
        "op": "PUSH2",
        "value": "0x932"
      },
      "2373": {
        "op": "JUMP"
      },
      "2374": {
        "op": "JUMPDEST"
      },
      "2375": {
        "op": "DUP1"
      },
      "2376": {
        "op": "CALLDATALOAD"
      },
      "2377": {
        "op": "PUSH1",
        "value": "0x1"
      },
      "2379": {
        "op": "PUSH1",
        "value": "0x1"
      },
      "2381": {
        "op": "PUSH1",
        "value": "0xA0"
      },
      "2383": {
        "op": "SHL"
      },
      "2384": {
        "op": "SUB"
      },
      "2385": {
        "op": "DUP2"
      },
      "2386": {
        "op": "AND"
      },
      "2387": {
        "op": "DUP2"
      },
      "2388": {
        "op": "EQ"
      },
      "2389": {
        "op": "PUSH2",
        "value": "0x8AF"
      },
      "2392": {
        "op": "JUMPI"
      },
      "2393": {
        "op": "PUSH1",
        "value": "0x0"
      },
      "2395": {
        "op": "DUP1"
      },
      "2396": {
        "op": "REVERT"
      },
      "2397": {
        "op": "JUMPDEST"
      },
      "2398": {
        "op": "PUSH1",
        "value": "0x0"
      },
      "2400": {
        "op": "DUP1"
      },
      "2401": {
        "op": "PUSH1",
        "value": "0x40"
      },
      "2403": {
        "op": "DUP4"
      },
      "2404": {
        "op": "DUP6"
      },
      "2405": {
        "op": "SUB"
      },
      "2406": {
        "op": "SLT"
      },
      "2407": {
        "op": "ISZERO"
      },
      "2408": {
        "op": "PUSH2",
        "value": "0x970"
      },
      "2411": {
        "op": "JUMPI"
      },
      "2412": {
        "op": "PUSH1",
        "value": "0x0"
      },
      "2414": {
        "op": "DUP1"
      },
      "2415": {
        "op": "REVERT"
      },
      "2416": {
        "op": "JUMPDEST"
      },
      "2417": {
        "op": "DUP3"
      },
      "2418": {
        "op": "CALLDATALOAD"
      },
      "2419": {
        "op": "SWAP2"
      },
      "2420": {
        "op": "POP"
      },
      "2421": {
        "op": "PUSH2",
        "value": "0x980"
      },
      "2424": {
        "op": "PUSH1",
        "value": "0x20"
      },
      "2426": {
        "op": "DUP5"
      },
      "2427": {
        "op": "ADD"
      },
      "2428": {
        "op": "PUSH2",
        "value": "0x946"
      },
      "2431": {
        "jump": "i",
        "op": "JUMP"
      },
      "2432": {
        "op": "JUMPDEST"
      },
      "2433": {
        "op": "SWAP1"
      },
      "2434": {
        "op": "POP"
      },
      "2435": {
        "op": "SWAP3"
      },
      "2436": {
        "op": "POP"
      },
      "2437": {
        "op": "SWAP3"
      },
      "2438": {
        "op": "SWAP1"
      },
      "2439": {
        "op": "POP"
      },
      "2440": {
        "jump": "o",
        "op": "JUMP"
      },
      "2441": {
        "op": "JUMPDEST"
      },
      "2442": {
        "op": "PUSH1",
        "value": "0x0"
      },
      "2444": {
        "op": "PUSH1",
        "value": "0x20"
      },
      "2446": {
        "op": "DUP3"
      },
      "2447": {
        "op": "DUP5"
      },
      "2448": {
        "op": "SUB"
      },
      "2449": {
        "op": "SLT"
      },
      "2450": {
        "op": "ISZERO"
      },
      "2451": {
        "op": "PUSH2",
        "value": "0x99B"
      },
      "2454": {
        "op": "JUMPI"
      },
      "2455": {
        "op": "PUSH1",
        "value": "0x0"
      },
      "2457": {
        "op": "DUP1"
      },
      "2458": {
        "op": "REVERT"
      },
      "2459": {
        "op": "JUMPDEST"
      },
      "2460": {
        "op": "PUSH2",
        "value": "0x9A4"
      },
      "2463": {
        "op": "DUP3"
      },
      "2464": {
        "op": "PUSH2",
        "value": "0x946"
      },
      "2467": {
        "jump": "i",
        "op": "JUMP"
      },
      "2468": {
        "op": "JUMPDEST"
      },
      "2469": {
        "op": "SWAP4"
      },
      "2470": {
        "op": "SWAP3"
      },
      "2471": {
        "op": "POP"
      },
      "2472": {
        "op": "POP"
      },
      "2473": {
        "op": "POP"
      },
      "2474": {
        "jump": "o",
        "op": "JUMP"
      },
      "2475": {
        "op": "JUMPDEST"
      },
      "2476": {
        "op": "PUSH4",
        "value": "0x4E487B71"
      },
      "2481": {
        "op": "PUSH1",
        "value": "0xE0"
      },
      "2483": {
        "op": "SHL"
      },
      "2484": {
        "op": "PUSH1",
        "value": "0x0"
      },
      "2486": {
        "op": "MSTORE"
      },
      "2487": {
        "op": "PUSH1",
        "value": "0x41"
      },
      "2489": {
        "op": "PUSH1",
        "value": "0x4"
      },
      "2491": {
        "op": "MSTORE"
      },
      "2492": {
        "op": "PUSH1",
        "value": "0x24"
      },
      "2494": {
        "op": "PUSH1",
        "value": "0x0"
      },
      "2496": {
        "op": "REVERT"
      },
      "2497": {
        "op": "JUMPDEST"
      },
      "2498": {
        "op": "PUSH1",
        "value": "0x0"
      },
      "2500": {
        "op": "DUP1"
      },
      "2501": {
        "op": "PUSH1",
        "value": "0x0"
      },
      "2503": {
        "op": "PUSH1",
        "value": "0x60"
      },
      "2505": {
        "op": "DUP5"
      },
      "2506": {
        "op": "DUP7"
      },
      "2507": {
        "op": "SUB"
      },
      "2508": {
        "op": "SLT"
      },
      "2509": {
        "op": "ISZERO"
      },
      "2510": {
        "op": "PUSH2",
        "value": "0x9D6"
      },
      "2513": {
        "op": "JUMPI"
      },
      "2514": {
        "op": "PUSH1",
        "value": "0x0"
      },
      "2516": {
        "op": "DUP1"
      },
      "2517": {
        "op": "REVERT"
      },
      "2518": {
        "op": "JUMPDEST"
      },
      "2519": {
        "op": "DUP4"
      },
      "2520": {
        "op": "CALLDATALOAD"
      },
      "2521": {
        "op": "PUSH8",
        "value": "0xFFFFFFFFFFFFFFFF"
      },
      "2530": {
        "op": "DUP1"
      },
      "2531": {
        "op": "DUP3"
      },
      "2532": {
        "op": "GT"
      },
      "2533": {
        "op": "ISZERO"
      },
      "2534": {
        "op": "PUSH2",
        "value": "0x9EE"
      },
      "2537": {
        "op": "JUMPI"
      },
      "2538": {
        "op": "PUSH1",
        "value": "0x0"
      },
      "2540": {
        "op": "DUP1"
      },
      "2541": {
        "op": "REVERT"
      },
      "2542": {
        "op": "JUMPDEST"
      },
      "2543": {
        "op": "DUP2"
      },
      "2544": {
        "op": "DUP7"
      },
      "2545": {
        "op": "ADD"
      },
      "2546": {
        "op": "SWAP2"
      },
      "2547": {
        "op": "POP"
      },
      "2548": {
        "op": "DUP7"
      },
      "2549": {
        "op": "PUSH1",
        "value": "0x1F"
      },
      "2551": {
        "op": "DUP4"
      },
      "2552": {
        "op": "ADD"
      },
      "2553": {
        "op": "SLT"
      },
      "2554": {
        "op": "PUSH2",
        "value": "0xA02"
      },
      "2557": {
        "op": "JUMPI"
      },
      "2558": {
        "op": "PUSH1",
        "value": "0x0"
      },
      "2560": {
        "op": "DUP1"
      },
      "2561": {
        "op": "REVERT"
      },
      "2562": {
        "op": "JUMPDEST"
      },
      "2563": {
        "op": "DUP2"
      },
      "2564": {
        "op": "CALLDATALOAD"
      },
      "2565": {
        "op": "DUP2"
      },
      "2566": {
        "op": "DUP2"
      },
      "2567": {
        "op": "GT"
      },
      "2568": {
        "op": "ISZERO"
      },
      "2569": {
        "op": "PUSH2",
        "value": "0xA14"
      },
      "2572": {
        "op": "JUMPI"
      },
      "2573": {
        "op": "PUSH2",
        "value": "0xA14"
      },
      "2576": {
        "op": "PUSH2",
        "value": "0x9AB"
      },
      "2579": {
        "jump": "i",
        "op": "JUMP"
      },
      "2580": {
        "op": "JUMPDEST"
      },
      "2581": {
        "op": "PUSH1",
        "value": "0x40"
      },
      "2583": {
        "op": "MLOAD"
      },
      "2584": {
        "op": "PUSH1",
        "value": "0x1F"
      },
      "2586": {
        "op": "DUP3"
      },
      "2587": {
        "op": "ADD"
      },
      "2588": {
        "op": "PUSH1",
        "value": "0x1F"
      },
      "2590": {
        "op": "NOT"
      },
      "2591": {
        "op": "SWAP1"
      },
      "2592": {
        "op": "DUP2"
      },
      "2593": {
        "op": "AND"
      },
      "2594": {
        "op": "PUSH1",
        "value": "0x3F"
      },
      "2596": {
        "op": "ADD"
      },
      "2597": {
        "op": "AND"
      },
      "2598": {
        "op": "DUP2"
      },
      "2599": {
        "op": "ADD"
      },
      "2600": {
        "op": "SWAP1"
      },
      "2601": {
        "op": "DUP4"
      },
      "2602": {
        "op": "DUP3"
      },
      "2603": {
        "op": "GT"
      },
      "2604": {
        "op": "DUP2"
      },
      "2605": {
        "op": "DUP4"
      },
      "2606": {
        "op": "LT"
      },
      "2607": {
        "op": "OR"
      },
      "2608": {
        "op": "ISZERO"
      },
      "2609": {
        "op": "PUSH2",
        "value": "0xA3C"
      },
      "2612": {
        "op": "JUMPI"
      },
      "2613": {
        "op": "PUSH2",
        "value": "0xA3C"
      },
      "2616": {
        "op": "PUSH2",
        "value": "0x9AB"
      },
      "2619": {
        "jump": "i",
        "op": "JUMP"
      },
      "2620": {
        "op": "JUMPDEST"
      },
      "2621": {
        "op": "DUP2"
      },
      "2622": {
        "op": "PUSH1",
        "value": "0x40"
      },
      "2624": {
        "op": "MSTORE"
      },
      "2625": {
        "op": "DUP3"
      },
      "2626": {
        "op": "DUP2"
      },
      "2627": {
        "op": "MSTORE"
      },
      "2628": {
        "op": "DUP10"
      },
      "2629": {
        "op": "PUSH1",
        "value": "0x20"
      },
      "2631": {
        "op": "DUP5"
      },
      "2632": {
        "op": "DUP8"
      },
      "2633": {
        "op": "ADD"
      },
      "2634": {
        "op": "ADD"
      },
      "2635": {
        "op": "GT"
      },
      "2636": {
        "op": "ISZERO"
      },
      "2637": {
        "op": "PUSH2",
        "value": "0xA55"
      },
      "2640": {
        "op": "JUMPI"
      },
      "2641": {
        "op": "PUSH1",
        "value": "0x0"
      },
      "2643": {
        "op": "DUP1"
      },
      "2644": {
        "op": "REVERT"
      },
      "2645": {
        "op": "JUMPDEST"
      },
      "2646": {
        "op": "DUP3"
      },
      "2647": {
        "op": "PUSH1",
        "value": "0x20"
      },
      "2649": {
        "op": "DUP7"
      },
      "2650": {
        "op": "ADD"
      },
      "2651": {
        "op": "PUSH1",
        "value": "0x20"
      },
      "2653": {
        "op": "DUP4"
      },
      "2654": {
        "op": "ADD"
      },
      "2655": {
        "op": "CALLDATACOPY"
      },
      "2656": {
        "op": "PUSH1",
        "value": "0x0"
      },
      "2658": {
        "op": "PUSH1",
        "value": "0x20"
      },
      "2660": {
        "op": "DUP5"
      },
      "2661": {
        "op": "DUP4"
      },
      "2662": {
        "op": "ADD"
      },
      "2663": {
        "op": "ADD"
      },
      "2664": {
        "op": "MSTORE"
      },
      "2665": {
        "op": "DUP1"
      },
      "2666": {
        "op": "SWAP8"
      },
      "2667": {
        "op": "POP"
      },
      "2668": {
        "op": "POP"
      },
      "2669": {
        "op": "POP"
      },
      "2670": {
        "op": "POP"
      },
      "2671": {
        "op": "POP"
      },
      "2672": {
        "op": "POP"
      },
      "2673": {
        "op": "PUSH2",
        "value": "0xA7C"
      },
      "2676": {
        "op": "PUSH1",
        "value": "0x20"
      },
      "2678": {
        "op": "DUP6"
      },
      "2679": {
        "op": "ADD"
      },
      "2680": {
        "op": "PUSH2",
        "value": "0x946"
      },
      "2683": {
        "jump": "i",
        "op": "JUMP"
      },
      "2684": {
        "op": "JUMPDEST"
      },
      "2685": {
        "op": "SWAP2"
      },
      "2686": {
        "op": "POP"
      },
      "2687": {
        "op": "PUSH1",
        "value": "0x40"
      },
      "2689": {
        "op": "DUP5"
      },
      "2690": {
        "op": "ADD"
      },
      "2691": {
        "op": "CALLDATALOAD"
      },
      "2692": {
        "op": "SWAP1"
      },
      "2693": {
        "op": "POP"
      },
      "2694": {
        "op": "SWAP3"
      },
      "2695": {
        "op": "POP"
      },
      "2696": {
        "op": "SWAP3"
      },
      "2697": {
        "op": "POP"
      },
      "2698": {
        "op": "SWAP3"
      },
      "2699": {
        "jump": "o",
        "op": "JUMP"
      },
      "2700": {
        "op": "JUMPDEST"
      },
      "2701": {
        "op": "PUSH1",
        "value": "0x0"
      },
      "2703": {
        "op": "DUP2"
      },
      "2704": {
        "op": "MLOAD"
      },
      "2705": {
        "op": "DUP1"
      },
      "2706": {
        "op": "DUP5"
      },
      "2707": {
        "op": "MSTORE"
      },
      "2708": {
        "op": "PUSH1",
        "value": "0x0"
      },
      "2710": {
        "op": "JUMPDEST"
      },
      "2711": {
        "op": "DUP2"
      },
      "2712": {
        "op": "DUP2"
      },
      "2713": {
        "op": "LT"
      },
      "2714": {
        "op": "ISZERO"
      },
      "2715": {
        "op": "PUSH2",
        "value": "0xAB2"
      },
      "2718": {
        "op": "JUMPI"
      },
      "2719": {
        "op": "PUSH1",
        "value": "0x20"
      },
      "2721": {
        "op": "DUP2"
      },
      "2722": {
        "op": "DUP6"
      },
      "2723": {
        "op": "ADD"
      },
      "2724": {
        "op": "DUP2"
      },
      "2725": {
        "op": "ADD"
      },
      "2726": {
        "op": "MLOAD"
      },
      "2727": {
        "op": "DUP7"
      },
      "2728": {
        "op": "DUP4"
      },
      "2729": {
        "op": "ADD"
      },
      "2730": {
        "op": "DUP3"
      },
      "2731": {
        "op": "ADD"
      },
      "2732": {
        "op": "MSTORE"
      },
      "2733": {
        "op": "ADD"
      },
      "2734": {
        "op": "PUSH2",
        "value": "0xA96"
      },
      "2737": {
        "op": "JUMP"
      },
      "2738": {
        "op": "JUMPDEST"
      },
      "2739": {
        "op": "POP"
      },
      "2740": {
        "op": "PUSH1",
        "value": "0x0"
      },
      "2742": {
        "op": "PUSH1",
        "value": "0x20"
      },
      "2744": {
        "op": "DUP3"
      },
      "2745": {
        "op": "DUP7"
      },
      "2746": {
        "op": "ADD"
      },
      "2747": {
        "op": "ADD"
      },
      "2748": {
        "op": "MSTORE"
      },
      "2749": {
        "op": "PUSH1",
        "value": "0x20"
      },
      "2751": {
        "op": "PUSH1",
        "value": "0x1F"
      },
      "2753": {
        "op": "NOT"
      },
      "2754": {
        "op": "PUSH1",
        "value": "0x1F"
      },
      "2756": {
        "op": "DUP4"
      },
      "2757": {
        "op": "ADD"
      },
      "2758": {
        "op": "AND"
      },
      "2759": {
        "op": "DUP6"
      },
      "2760": {
        "op": "ADD"
      },
      "2761": {
        "op": "ADD"
      },
      "2762": {
        "op": "SWAP2"
      },
      "2763": {
        "op": "POP"
      },
      "2764": {
        "op": "POP"
      },
      "2765": {
        "op": "SWAP3"
      },
      "2766": {
        "op": "SWAP2"
      },
      "2767": {
        "op": "POP"
      },
      "2768": {
        "op": "POP"
      },
      "2769": {
        "jump": "o",
        "op": "JUMP"
      },
      "2770": {
        "op": "JUMPDEST"
      },
      "2771": {
        "op": "PUSH1",
        "value": "0x0"
      },
      "2773": {
        "op": "PUSH1",
        "value": "0x20"
      },
      "2775": {
        "op": "DUP1"
      },
      "2776": {
        "op": "DUP4"
      },
      "2777": {
        "op": "ADD"
      },
      "2778": {
        "op": "DUP2"
      },
      "2779": {
        "op": "DUP5"
      },
      "2780": {
        "op": "MSTORE"
      },
      "2781": {
        "op": "DUP1"
      },
      "2782": {
        "op": "DUP6"
      },
      "2783": {
        "op": "MLOAD"
      },
      "2784": {
        "op": "DUP1"
      },
      "2785": {
        "op": "DUP4"
      },
      "2786": {
        "op": "MSTORE"
      },
      "2787": {
        "op": "PUSH1",
        "value": "0x40"
      },
      "2789": {
        "op": "SWAP3"
      },
      "2790": {
        "op": "POP"
      },
      "2791": {
        "op": "PUSH1",
        "value": "0x40"
      },
      "2793": {
        "op": "DUP7"
      },
      "2794": {
        "op": "ADD"
      },
      "2795": {
        "op": "SWAP2"
      },
      "2796": {
        "op": "POP"
      },
      "2797": {
        "op": "PUSH1",
        "value": "0x40"
      },
      "2799": {
        "op": "DUP2"
      },
      "2800": {
        "op": "PUSH1",
        "value": "0x5"
      },
      "2802": {
        "op": "SHL"
      },
      "2803": {
        "op": "DUP8"
      },
      "2804": {
        "op": "ADD"
      },
      "2805": {
        "op": "ADD"
      },
      "2806": {
        "op": "DUP5"
      },
      "2807": {
        "op": "DUP9"
      },
      "2808": {
        "op": "ADD"
      },
      "2809": {
        "op": "PUSH1",
        "value": "0x0"
      },
      "2811": {
        "op": "JUMPDEST"
      },
      "2812": {
        "op": "DUP4"
      },
      "2813": {
        "op": "DUP2"
      },
      "2814": {
        "op": "LT"
      },
      "2815": {
        "op": "ISZERO"
      },
      "2816": {
        "op": "PUSH2",
        "value": "0xB50"
      },
      "2819": {
        "op": "JUMPI"
      },
      "2820": {
        "op": "PUSH1",
        "value": "0x3F"
      },
      "2822": {
        "op": "NOT"
      },
      "2823": {
        "op": "DUP10"
      },
      "2824": {
        "op": "DUP5"
      },
      "2825": {
        "op": "SUB"
      },
      "2826": {
        "op": "ADD"
      },
      "2827": {
        "op": "DUP6"
      },
      "2828": {
        "op": "MSTORE"
      },
      "2829": {
        "op": "DUP2"
      },
      "2830": {
        "op": "MLOAD"
      },
      "2831": {
        "op": "PUSH1",
        "value": "0x60"
      },
      "2833": {
        "op": "DUP2"
      },
      "2834": {
        "op": "MLOAD"
      },
      "2835": {
        "op": "DUP2"
      },
      "2836": {
        "op": "DUP7"
      },
      "2837": {
        "op": "MSTORE"
      },
      "2838": {
        "op": "PUSH2",
        "value": "0xB21"
      },
      "2841": {
        "op": "DUP3"
      },
      "2842": {
        "op": "DUP8"
      },
      "2843": {
        "op": "ADD"
      },
      "2844": {
        "op": "DUP3"
      },
      "2845": {
        "op": "PUSH2",
        "value": "0xA8C"
      },
      "2848": {
        "jump": "i",
        "op": "JUMP"
      },
      "2849": {
        "op": "JUMPDEST"
      },
      "2850": {
        "op": "DUP4"
      },
      "2851": {
        "op": "DUP12"
      },
      "2852": {
        "op": "ADD"
      },
      "2853": {
        "op": "MLOAD"
      },
      "2854": {
        "op": "PUSH1",
        "value": "0x1"
      },
      "2856": {
        "op": "PUSH1",
        "value": "0x1"
      },
      "2858": {
        "op": "PUSH1",
        "value": "0xA0"
      },
      "2860": {
        "op": "SHL"
      },
      "2861": {
        "op": "SUB"
      },
      "2862": {
        "op": "AND"
      },
      "2863": {
        "op": "DUP8"
      },
      "2864": {
        "op": "DUP13"
      },
      "2865": {
        "op": "ADD"
      },
      "2866": {
        "op": "MSTORE"
      },
      "2867": {
        "op": "SWAP3"
      },
      "2868": {
        "op": "DUP10"
      },
      "2869": {
        "op": "ADD"
      },
      "2870": {
        "op": "MLOAD"
      },
      "2871": {
        "op": "SWAP6"
      },
      "2872": {
        "op": "DUP10"
      },
      "2873": {
        "op": "ADD"
      },
      "2874": {
        "op": "SWAP6"
      },
      "2875": {
        "op": "SWAP1"
      },
      "2876": {
        "op": "SWAP6"
      },
      "2877": {
        "op": "MSTORE"
      },
      "2878": {
        "op": "POP"
      },
      "2879": {
        "op": "SWAP5"
      },
      "2880": {
        "op": "DUP8"
      },
      "2881": {
        "op": "ADD"
      },
      "2882": {
        "op": "SWAP5"
      },
      "2883": {
        "op": "SWAP3"
      },
      "2884": {
        "op": "POP"
      },
      "2885": {
        "op": "SWAP1"
      },
      "2886": {
        "op": "DUP7"
      },
      "2887": {
        "op": "ADD"
      },
      "2888": {
        "op": "SWAP1"
      },
      "2889": {
        "op": "PUSH1",
        "value": "0x1"
      },
      "2891": {
        "op": "ADD"
      },
      "2892": {
        "op": "PUSH2",
        "value": "0xAFB"
      },
      "2895": {
        "op": "JUMP"
      },
      "2896": {
        "op": "JUMPDEST"
      },
      "2897": {
        "op": "POP"
      },
      "2898": {
        "op": "SWAP1"
      },
      "2899": {
        "op": "SWAP9"
      },
      "2900": {
        "op": "SWAP8"
      },
      "2901": {
        "op": "POP"
      },
      "2902": {
        "op": "POP"
      },
      "2903": {
        "op": "POP"
      },
      "2904": {
        "op": "POP"
      },
      "2905": {
        "op": "POP"
      },
      "2906": {
        "op": "POP"
      },
      "2907": {
        "op": "POP"
      },
      "2908": {
        "op": "POP"
      },
      "2909": {
        "jump": "o",
        "op": "JUMP"
      },
      "2910": {
        "op": "JUMPDEST"
      },
      "2911": {
        "op": "PUSH1",
        "value": "0x0"
      },
      "2913": {
        "op": "DUP1"
      },
      "2914": {
        "op": "PUSH1",
        "value": "0x40"
      },
      "2916": {
        "op": "DUP4"
      },
      "2917": {
        "op": "DUP6"
      },
      "2918": {
        "op": "SUB"
      },
      "2919": {
        "op": "SLT"
      },
      "2920": {
        "op": "ISZERO"
      },
      "2921": {
        "op": "PUSH2",
        "value": "0xB71"
      },
      "2924": {
        "op": "JUMPI"
      },
      "2925": {
        "op": "PUSH1",
        "value": "0x0"
      },
      "2927": {
        "op": "DUP1"
      },
      "2928": {
        "op": "REVERT"
      },
      "2929": {
        "op": "JUMPDEST"
      },
      "2930": {
        "op": "PUSH2",
        "value": "0xB7A"
      },
      "2933": {
        "op": "DUP4"
      },
      "2934": {
        "op": "PUSH2",
        "value": "0x946"
      },
      "2937": {
        "jump": "i",
        "op": "JUMP"
      },
      "2938": {
        "op": "JUMPDEST"
      },
      "2939": {
        "op": "SWAP5"
      },
      "2940": {
        "op": "PUSH1",
        "value": "0x20"
      },
      "2942": {
        "op": "SWAP4"
      },
      "2943": {
        "op": "SWAP1"
      },
      "2944": {
        "op": "SWAP4"
      },
      "2945": {
        "op": "ADD"
      },
      "2946": {
        "op": "CALLDATALOAD"
      },
      "2947": {
        "op": "SWAP4"
      },
      "2948": {
        "op": "POP"
      },
      "2949": {
        "op": "POP"
      },
      "2950": {
        "op": "POP"
      },
      "2951": {
        "jump": "o",
        "op": "JUMP"
      },
      "2952": {
        "op": "JUMPDEST"
      },
      "2953": {
        "op": "PUSH1",
        "value": "0x20"
      },
      "2955": {
        "op": "DUP1"
      },
      "2956": {
        "op": "DUP3"
      },
      "2957": {
        "op": "MSTORE"
      },
      "2958": {
        "op": "DUP3"
      },
      "2959": {
        "op": "MLOAD"
      },
      "2960": {
        "op": "DUP3"
      },
      "2961": {
        "op": "DUP3"
      },
      "2962": {
        "op": "ADD"
      },
      "2963": {
        "op": "DUP2"
      },
      "2964": {
        "op": "SWAP1"
      },
      "2965": {
        "op": "MSTORE"
      },
      "2966": {
        "op": "PUSH1",
        "value": "0x0"
      },
      "2968": {
        "op": "SWAP2"
      },
      "2969": {
        "op": "SWAP1"
      },
      "2970": {
        "op": "PUSH1",
        "value": "0x40"
      },
      "2972": {
        "op": "SWAP1"
      },
      "2973": {
        "op": "DUP2"
      },
      "2974": {
        "op": "DUP6"
      },
      "2975": {
        "op": "ADD"
      },
      "2976": {
        "op": "SWAP1"
      },
      "2977": {
        "op": "DUP7"
      },
      "2978": {
        "op": "DUP5"
      },
      "2979": {
        "op": "ADD"
      },
      "2980": {
        "op": "DUP6"
      },
      "2981": {
        "op": "JUMPDEST"
      },
      "2982": {
        "op": "DUP3"
      },
      "2983": {
        "op": "DUP2"
      },
      "2984": {
        "op": "LT"
      },
      "2985": {
        "op": "ISZERO"
      },
      "2986": {
        "op": "PUSH2",
        "value": "0xBCA"
      },
      "2989": {
        "op": "JUMPI"
      },
      "2990": {
        "op": "DUP2"
      },
      "2991": {
        "op": "MLOAD"
      },
      "2992": {
        "op": "DUP1"
      },
      "2993": {
        "op": "MLOAD"
      },
      "2994": {
        "op": "DUP6"
      },
      "2995": {
        "op": "MSTORE"
      },
      "2996": {
        "op": "DUP7"
      },
      "2997": {
        "op": "ADD"
      },
      "2998": {
        "op": "MLOAD"
      },
      "2999": {
        "op": "DUP7"
      },
      "3000": {
        "op": "DUP6"
      },
      "3001": {
        "op": "ADD"
      },
      "3002": {
        "op": "MSTORE"
      },
      "3003": {
        "op": "SWAP3"
      },
      "3004": {
        "op": "DUP5"
      },
      "3005": {
        "op": "ADD"
      },
      "3006": {
        "op": "SWAP3"
      },
      "3007": {
        "op": "SWAP1"
      },
      "3008": {
        "op": "DUP6"
      },
      "3009": {
        "op": "ADD"
      },
      "3010": {
        "op": "SWAP1"
      },
      "3011": {
        "op": "PUSH1",
        "value": "0x1"
      },
      "3013": {
        "op": "ADD"
      },
      "3014": {
        "op": "PUSH2",
        "value": "0xBA5"
      },
      "3017": {
        "op": "JUMP"
      },
      "3018": {
        "op": "JUMPDEST"
      },
      "3019": {
        "op": "POP"
      },
      "3020": {
        "op": "SWAP2"
      },
      "3021": {
        "op": "SWAP8"
      },
      "3022": {
        "op": "SWAP7"
      },
      "3023": {
        "op": "POP"
      },
      "3024": {
        "op": "POP"
      },
      "3025": {
        "op": "POP"
      },
      "3026": {
        "op": "POP"
      },
      "3027": {
        "op": "POP"
      },
      "3028": {
        "op": "POP"
      },
      "3029": {
        "op": "POP"
      },
      "3030": {
        "jump": "o",
        "op": "JUMP"
      },
      "3031": {
        "op": "JUMPDEST"
      },
      "3032": {
        "op": "PUSH1",
        "value": "0x0"
      },
      "3034": {
        "op": "PUSH1",
        "value": "0x20"
      },
      "3036": {
        "op": "DUP3"
      },
      "3037": {
        "op": "DUP5"
      },
      "3038": {
        "op": "SUB"
      },
      "3039": {
        "op": "SLT"
      },
      "3040": {
        "op": "ISZERO"
      },
      "3041": {
        "op": "PUSH2",
        "value": "0xBE9"
      },
      "3044": {
        "op": "JUMPI"
      },
      "3045": {
        "op": "PUSH1",
        "value": "0x0"
      },
      "3047": {
        "op": "DUP1"
      },
      "3048": {
        "op": "REVERT"
      },
      "3049": {
        "op": "JUMPDEST"
      },
      "3050": {
        "op": "POP"
      },
      "3051": {
        "op": "CALLDATALOAD"
      },
      "3052": {
        "op": "SWAP2"
      },
      "3053": {
        "op": "SWAP1"
      },
      "3054": {
        "op": "POP"
      },
      "3055": {
        "jump": "o",
        "op": "JUMP"
      },
      "3056": {
        "op": "JUMPDEST"
      },
      "3057": {
        "op": "PUSH1",
        "value": "0x60"
      },
      "3059": {
        "op": "DUP2"
      },
      "3060": {
        "op": "MSTORE"
      },
      "3061": {
        "op": "PUSH1",
        "value": "0x0"
      },
      "3063": {
        "op": "PUSH2",
        "value": "0xC03"
      },
      "3066": {
        "op": "PUSH1",
        "value": "0x60"
      },
      "3068": {
        "op": "DUP4"
      },
      "3069": {
        "op": "ADD"
      },
      "3070": {
        "op": "DUP7"
      },
      "3071": {
        "op": "PUSH2",
        "value": "0xA8C"
      },
      "3074": {
        "jump": "i",
        "op": "JUMP"
      },
      "3075": {
        "op": "JUMPDEST"
      },
      "3076": {
        "op": "PUSH1",
        "value": "0x1"
      },
      "3078": {
        "op": "PUSH1",
        "value": "0x1"
      },
      "3080": {
        "op": "PUSH1",
        "value": "0xA0"
      },
      "3082": {
        "op": "SHL"
      },
      "3083": {
        "op": "SUB"
      },
      "3084": {
        "op": "SWAP5"
      },
      "3085": {
        "op": "SWAP1"
      },
      "3086": {
        "op": "SWAP5"
      },
      "3087": {
        "op": "AND"
      },
      "3088": {
        "op": "PUSH1",
        "value": "0x20"
      },
      "3090": {
        "op": "DUP4"
      },
      "3091": {
        "op": "ADD"
      },
      "3092": {
        "op": "MSTORE"
      },
      "3093": {
        "op": "POP"
      },
      "3094": {
        "op": "PUSH1",
        "value": "0x40"
      },
      "3096": {
        "op": "ADD"
      },
      "3097": {
        "op": "MSTORE"
      },
      "3098": {
        "op": "SWAP2"
      },
      "3099": {
        "op": "SWAP1"
      },
      "3100": {
        "op": "POP"
      },
      "3101": {
        "jump": "o",
        "op": "JUMP"
      },
      "3102": {
        "op": "JUMPDEST"
      },
      "3103": {
        "op": "PUSH1",
        "value": "0x1"
      },
      "3105": {
        "op": "DUP2"
      },
      "3106": {
        "op": "DUP2"
      },
      "3107": {
        "op": "SHR"
      },
      "3108": {
        "op": "SWAP1"
      },
      "3109": {
        "op": "DUP3"
      },
      "3110": {
        "op": "AND"
      },
      "3111": {
        "op": "DUP1"
      },
      "3112": {
        "op": "PUSH2",
        "value": "0xC32"
      },
      "3115": {
        "op": "JUMPI"
      },
      "3116": {
        "op": "PUSH1",
        "value": "0x7F"
      },
      "3118": {
        "op": "DUP3"
      },
      "3119": {
        "op": "AND"
      },
      "3120": {
        "op": "SWAP2"
      },
      "3121": {
        "op": "POP"
      },
      "3122": {
        "op": "JUMPDEST"
      },
      "3123": {
        "op": "PUSH1",
        "value": "0x20"
      },
      "3125": {
        "op": "DUP3"
      },
      "3126": {
        "op": "LT"
      },
      "3127": {
        "op": "DUP2"
      },
      "3128": {
        "op": "SUB"
      },
      "3129": {
        "op": "PUSH2",
        "value": "0xC52"
      },
      "3132": {
        "op": "JUMPI"
      },
      "3133": {
        "op": "PUSH4",
        "value": "0x4E487B71"
      },
      "3138": {
        "op": "PUSH1",
        "value": "0xE0"
      },
      "3140": {
        "op": "SHL"
      },
      "3141": {
        "op": "PUSH1",
        "value": "0x0"
      },
      "3143": {
        "op": "MSTORE"
      },
      "3144": {
        "op": "PUSH1",
        "value": "0x22"
      },
      "3146": {
        "op": "PUSH1",
        "value": "0x4"
      },
      "3148": {
        "op": "MSTORE"
      },
      "3149": {
        "op": "PUSH1",
        "value": "0x24"
      },
      "3151": {
        "op": "PUSH1",
        "value": "0x0"
      },
      "3153": {
        "op": "REVERT"
      },
      "3154": {
        "op": "JUMPDEST"
      },
      "3155": {
        "op": "POP"
      },
      "3156": {
        "op": "SWAP2"
      },
      "3157": {
        "op": "SWAP1"
      },
      "3158": {
        "op": "POP"
      },
      "3159": {
        "jump": "o",
        "op": "JUMP"
      },
      "3160": {
        "op": "JUMPDEST"
      },
      "3161": {
        "op": "PUSH1",
        "value": "0x1F"
      },
      "3163": {
        "op": "DUP3"
      },
      "3164": {
        "op": "GT"
      },
      "3165": {
        "op": "ISZERO"
      },
      "3166": {
        "op": "PUSH2",
        "value": "0xCA4"
      },
      "3169": {
        "op": "JUMPI"
      },
      "3170": {
        "op": "PUSH1",
        "value": "0x0"
      },
      "3172": {
        "op": "DUP2"
      },
      "3173": {
        "op": "PUSH1",
        "value": "0x0"
      },
      "3175": {
        "op": "MSTORE"
      },
      "3176": {
        "op": "PUSH1",
        "value": "0x20"
      },
      "3178": {
        "op": "PUSH1",
        "value": "0x0"
      },
      "3180": {
        "op": "KECCAK256"
      },
      "3181": {
        "op": "PUSH1",
        "value": "0x1F"
      },
      "3183": {
        "op": "DUP6"
      },
      "3184": {
        "op": "ADD"
      },
      "3185": {
        "op": "PUSH1",
        "value": "0x5"
      },
      "3187": {
        "op": "SHR"
      },
      "3188": {
        "op": "DUP2"
      },
      "3189": {
        "op": "ADD"
      },
      "3190": {
        "op": "PUSH1",
        "value": "0x20"
      },
      "3192": {
        "op": "DUP7"
      },
      "3193": {
        "op": "LT"
      },
      "3194": {
        "op": "ISZERO"
      },
      "3195": {
        "op": "PUSH2",
        "value": "0xC81"
      },
      "3198": {
        "op": "JUMPI"
      },
      "3199": {
        "op": "POP"
      },
      "3200": {
        "op": "DUP1"
      },
      "3201": {
        "op": "JUMPDEST"
      },
      "3202": {
        "op": "PUSH1",
        "value": "0x1F"
      },
      "3204": {
        "op": "DUP6"
      },
      "3205": {
        "op": "ADD"
      },
      "3206": {
        "op": "PUSH1",
        "value": "0x5"
      },
      "3208": {
        "op": "SHR"
      },
      "3209": {
        "op": "DUP3"
      },
      "3210": {
        "op": "ADD"
      },
      "3211": {
        "op": "SWAP2"
      },
      "3212": {
        "op": "POP"
      },
      "3213": {
        "op": "JUMPDEST"
      },
      "3214": {
        "op": "DUP2"
      },
      "3215": {
        "op": "DUP2"
      },
      "3216": {
        "op": "LT"
      },
      "3217": {
        "op": "ISZERO"
      },
      "3218": {
        "op": "PUSH2",
        "value": "0xCA0"
      },
      "3221": {
        "op": "JUMPI"
      },
      "3222": {
        "op": "DUP3"
      },
      "3223": {
        "op": "DUP2"
      },
      "3224": {
        "op": "SSTORE"
      },
      "3225": {
        "op": "PUSH1",
        "value": "0x1"
      },
      "3227": {
        "op": "ADD"
      },
      "3228": {
        "op": "PUSH2",
        "value": "0xC8D"
      },
      "3231": {
        "op": "JUMP"
      },
      "3232": {
        "op": "JUMPDEST"
      },
      "3233": {
        "op": "POP"
      },
      "3234": {
        "op": "POP"
      },
      "3235": {
        "op": "POP"
      },
      "3236": {
        "op": "JUMPDEST"
      },
      "3237": {
        "op": "POP"
      },
      "3238": {
        "op": "POP"
      },
      "3239": {
        "op": "POP"
      },
      "3240": {
        "jump": "o",
        "op": "JUMP"
      },
      "3241": {
        "op": "JUMPDEST"
      },
      "3242": {
        "op": "DUP2"
      },
      "3243": {
        "op": "MLOAD"
      },
      "3244": {
        "op": "PUSH8",
        "value": "0xFFFFFFFFFFFFFFFF"
      },
      "3253": {
        "op": "DUP2"
      },
      "3254": {
        "op": "GT"
      },
      "3255": {
        "op": "ISZERO"
      },
      "3256": {
        "op": "PUSH2",
        "value": "0xCC3"
      },
      "3259": {
        "op": "JUMPI"
      },
      "3260": {
        "op": "PUSH2",
        "value": "0xCC3"
      },
      "3263": {
        "op": "PUSH2",
        "value": "0x9AB"
      },
      "3266": {
        "jump": "i",
        "op": "JUMP"
      },
      "3267": {
        "op": "JUMPDEST"
      },
      "3268": {
        "op": "PUSH2",
        "value": "0xCD7"
      },
      "3271": {
        "op": "DUP2"
      },
      "3272": {
        "op": "PUSH2",
        "value": "0xCD1"
      },
      "3275": {
        "op": "DUP5"
      },
      "3276": {
        "op": "SLOAD"
      },
      "3277": {
        "op": "PUSH2",
        "value": "0xC1E"
      },
      "3280": {
        "jump": "i",
        "op": "JUMP"
      },
      "3281": {
        "op": "JUMPDEST"
      },
      "3282": {
        "op": "DUP5"
      },
      "3283": {
        "op": "PUSH2",
        "value": "0xC58"
      },
      "3286": {
        "jump": "i",
        "op": "JUMP"
      },
      "3287": {
        "op": "JUMPDEST"
      },
      "3288": {
        "op": "PUSH1",
        "value": "0x20"
      },
      "3290": {
        "op": "DUP1"
      },
      "3291": {
        "op": "PUSH1",
        "value": "0x1F"
      },
      "3293": {
        "op": "DUP4"
      },
      "3294": {
        "op": "GT"
      },
      "3295": {
        "op": "PUSH1",
        "value": "0x1"
      },
      "3297": {
        "op": "DUP2"
      },
      "3298": {
        "op": "EQ"
      },
      "3299": {
        "op": "PUSH2",
        "value": "0xD0C"
      },
      "3302": {
        "op": "JUMPI"
      },
      "3303": {
        "op": "PUSH1",
        "value": "0x0"
      },
      "3305": {
        "op": "DUP5"
      },
      "3306": {
        "op": "ISZERO"
      },
      "3307": {
        "op": "PUSH2",
        "value": "0xCF4"
      },
      "3310": {
        "op": "JUMPI"
      },
      "3311": {
        "op": "POP"
      },
      "3312": {
        "op": "DUP6"
      },
      "3313": {
        "op": "DUP4"
      },
      "3314": {
        "op": "ADD"
      },
      "3315": {
        "op": "MLOAD"
      },
      "3316": {
        "op": "JUMPDEST"
      },
      "3317": {
        "op": "PUSH1",
        "value": "0x0"
      },
      "3319": {
        "op": "NOT"
      },
      "3320": {
        "op": "PUSH1",
        "value": "0x3"
      },
      "3322": {
        "op": "DUP7"
      },
      "3323": {
        "op": "SWAP1"
      },
      "3324": {
        "op": "SHL"
      },
      "3325": {
        "op": "SHR"
      },
      "3326": {
        "op": "NOT"
      },
      "3327": {
        "op": "AND"
      },
      "3328": {
        "op": "PUSH1",
        "value": "0x1"
      },
      "3330": {
        "op": "DUP6"
      },
      "3331": {
        "op": "SWAP1"
      },
      "3332": {
        "op": "SHL"
      },
      "3333": {
        "op": "OR"
      },
      "3334": {
        "op": "DUP6"
      },
      "3335": {
        "op": "SSTORE"
      },
      "3336": {
        "op": "PUSH2",
        "value": "0xCA0"
      },
      "3339": {
        "op": "JUMP"
      },
      "3340": {
        "op": "JUMPDEST"
      },
      "3341": {
        "op": "PUSH1",
        "value": "0x0"
      },
      "3343": {
        "op": "DUP6"
      },
      "3344": {
        "op": "DUP2"
      },
      "3345": {
        "op": "MSTORE"
      },
      "3346": {
        "op": "PUSH1",
        "value": "0x20"
      },
      "3348": {
        "op": "DUP2"
      },
      "3349": {
        "op": "KECCAK256"
      },
      "3350": {
        "op": "PUSH1",
        "value": "0x1F"
      },
      "3352": {
        "op": "NOT"
      },
      "3353": {
        "op": "DUP7"
      },
      "3354": {
        "op": "AND"
      },
      "3355": {
        "op": "SWAP2"
      },
      "3356": {
        "op": "JUMPDEST"
      },
      "3357": {
        "op": "DUP3"
      },
      "3358": {
        "op": "DUP2"
      },
      "3359": {
        "op": "LT"
      },
      "3360": {
        "op": "ISZERO"
      },
      "3361": {
        "op": "PUSH2",
        "value": "0xD3B"
      },
      "3364": {
        "op": "JUMPI"
      },
      "3365": {
        "op": "DUP9"
      },
      "3366": {
        "op": "DUP7"
      },
      "3367": {
        "op": "ADD"
      },
      "3368": {
        "op": "MLOAD"
      },
      "3369": {
        "op": "DUP3"
      },
      "3370": {
        "op": "SSTORE"
      },
      "3371": {
        "op": "SWAP5"
      },
      "3372": {
        "op": "DUP5"
      },
      "3373": {
        "op": "ADD"
      },
      "3374": {
        "op": "SWAP5"
      },
      "3375": {
        "op": "PUSH1",
        "value": "0x1"
      },
      "3377": {
        "op": "SWAP1"
      },
      "3378": {
        "op": "SWAP2"
      },
      "3379": {
        "op": "ADD"
      },
      "3380": {
        "op": "SWAP1"
      },
      "3381": {
        "op": "DUP5"
      },
      "3382": {
        "op": "ADD"
      },
      "3383": {
        "op": "PUSH2",
        "value": "0xD1C"
      },
      "3386": {
        "op": "JUMP"
      },
      "3387": {
        "op": "JUMPDEST"
      },
      "3388": {
        "op": "POP"
      },
      "3389": {
        "op": "DUP6"
      },
      "3390": {
        "op": "DUP3"
      },
      "3391": {
        "op": "LT"
      },
      "3392": {
        "op": "ISZERO"
      },
      "3393": {
        "op": "PUSH2",
        "value": "0xD59"
      },
      "3396": {
        "op": "JUMPI"
      },
      "3397": {
        "op": "DUP8"
      },
      "3398": {
        "op": "DUP6"
      },
      "3399": {
        "op": "ADD"
      },
      "3400": {
        "op": "MLOAD"
      },
      "3401": {
        "op": "PUSH1",
        "value": "0x0"
      },
      "3403": {
        "op": "NOT"
      },
      "3404": {
        "op": "PUSH1",
        "value": "0x3"
      },
      "3406": {
        "op": "DUP9"
      },
      "3407": {
        "op": "SWAP1"
      },
      "3408": {
        "op": "SHL"
      },
      "3409": {
        "op": "PUSH1",
        "value": "0xF8"
      },
      "3411": {
        "op": "AND"
      },
      "3412": {
        "op": "SHR"
      },
      "3413": {
        "op": "NOT"
      },
      "3414": {
        "op": "AND"
      },
      "3415": {
        "op": "DUP2"
      },
      "3416": {
        "op": "SSTORE"
      },
      "3417": {
        "op": "JUMPDEST"
      },
      "3418": {
        "op": "POP"
      },
      "3419": {
        "op": "POP"
      },
      "3420": {
        "op": "POP"
      },
      "3421": {
        "op": "POP"
      },
      "3422": {
        "op": "POP"
      },
      "3423": {
        "op": "PUSH1",
        "value": "0x1"
      },
      "3425": {
        "op": "SWAP1"
      },
      "3426": {
        "op": "DUP2"
      },
      "3427": {
        "op": "SHL"
      },
      "3428": {
        "op": "ADD"
      },
      "3429": {
        "op": "SWAP1"
      },
      "3430": {
        "op": "SSTORE"
      },
      "3431": {
        "op": "POP"
      },
      "3432": {
        "jump": "o",
        "op": "JUMP"
      },
      "3433": {
        "op": "JUMPDEST"
      },
      "3434": {
        "op": "PUSH4",
        "value": "0x4E487B71"
      },
      "3439": {
        "op": "PUSH1",
        "value": "0xE0"
      },
      "3441": {
        "op": "SHL"
      },
      "3442": {
        "op": "PUSH1",
        "value": "0x0"
      },
      "3444": {
        "op": "MSTORE"
      },
      "3445": {
        "op": "PUSH1",
        "value": "0x32"
      },
      "3447": {
        "op": "PUSH1",
        "value": "0x4"
      },
      "3449": {
        "op": "MSTORE"
      },
      "3450": {
        "op": "PUSH1",
        "value": "0x24"
      },
      "3452": {
        "op": "PUSH1",
        "value": "0x0"
      },
      "3454": {
        "op": "REVERT"
      },
      "3455": {
        "op": "JUMPDEST"
      },
      "3456": {
        "op": "DUP1"
      },
      "3457": {
        "op": "DUP3"
      },
      "3458": {
        "op": "ADD"
      },
      "3459": {
        "op": "DUP1"
      },
      "3460": {
        "op": "DUP3"
      },
      "3461": {
        "op": "GT"
      },
      "3462": {
        "op": "ISZERO"
      },
      "3463": {
        "op": "PUSH2",
        "value": "0x3A2"
      },
      "3466": {
        "op": "JUMPI"
      },
      "3467": {
        "op": "PUSH4",
        "value": "0x4E487B71"
      },
      "3472": {
        "op": "PUSH1",
        "value": "0xE0"
      },
      "3474": {
        "op": "SHL"
      },
      "3475": {
        "op": "PUSH1",
        "value": "0x0"
      },
      "3477": {
        "op": "MSTORE"
      },
      "3478": {
        "op": "PUSH1",
        "value": "0x11"
      },
      "3480": {
        "op": "PUSH1",
        "value": "0x4"
      },
      "3482": {
        "op": "MSTORE"
      },
      "3483": {
        "op": "PUSH1",
        "value": "0x24"
      },
      "3485": {
        "op": "PUSH1",
        "value": "0x0"
      },
      "3487": {
        "op": "REVERT"
      }
    },
    "sha1": "3c5679780f058878a6d45ad2b95e37a05b13ba49",
    "source": "pragma solidity >=0.8.2 <0.9.0;\n\ncontract LLMMarket{\n\n    address private _owner;\n    //bool public paused;\n\n    error Unauthorized(address account);\n\n    modifier onlyOwner(){\n        if(msg.sender!=_owner){\n            revert Unauthorized(msg.sender);\n        }\n        _;\n    }\n\n    constructor(address owner) {\n        _owner = owner;\n    }\n\n    struct Hoster{\n        string url;\n        address hostAccount;\n        uint256 price;\n    }\n\n    struct Request{\n        uint256 uniqueCode;\n        uint256 feesPaid;\n    }\n\n    Hoster[] public allHosts;\n\n    mapping(address host => Request[]) public activeRequests;\n    mapping(address host => bool) public paused;\n\n    function addHost(string memory url, address account, uint256 price) external onlyOwner returns (bool) {\n        allHosts.push(Hoster(url, account, price));\n        return true;\n    }\n\n    function removeHost(address account) external onlyOwner returns (bool) {\n        for(uint256 i=0; i<allHosts.length; i++){\n            if(allHosts[i].hostAccount == account){\n                delete allHosts[i];\n                return true;\n            }\n        }\n        return true;\n    }\n\n    function pause() external returns (bool){\n        paused[msg.sender] = true;\n        return true;\n    }\n\n    function unpause() external returns (bool){\n        paused[msg.sender] = false;\n        return true;\n    }\n\n    function getHosts() external view returns (Hoster[] memory){\n        return allHosts;\n    }\n\n    function addRequest(uint256 code, address host) external payable returns (bool) {\n        require(paused[host] == false, \"Currently paused!\");\n        require(msg.value >= 10**15, \"Insufficient funding!\");\n        activeRequests[host].push(Request(code, msg.value));\n        return true;\n    }\n\n    function clearListAndReedemFunds() external returns (bool) {\n        uint256 totalSendOut = 0;\n        for(uint i = 0; i < activeRequests[msg.sender].length; i++){\n            totalSendOut = totalSendOut + activeRequests[msg.sender][i].feesPaid;\n        }\n        delete activeRequests[msg.sender];\n        payable(msg.sender).transfer(totalSendOut);\n        return true;\n    }\n\n    function getActiveRequests(address host) external view returns (Request[] memory) {\n        return activeRequests[host];\n    }\n\n    function getPaused(address host) external view returns (bool){\n        return paused[host];\n    }\n\n}",
    "sourceMap": "33:2355:0:-:0;;;286:58;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;323:6;:14;;-1:-1:-1;;;;;;323:14:0;-1:-1:-1;;;;;323:14:0;;;;;;;;;;33:2355;;14:290:1;84:6;137:2;125:9;116:7;112:23;108:32;105:52;;;153:1;150;143:12;105:52;179:16;;-1:-1:-1;;;;;224:31:1;;214:42;;204:70;;270:1;267;260:12;204:70;293:5;14:290;-1:-1:-1;;;14:290:1:o;:::-;33:2355:0;;;;;;",
    "sourcePath": "contracts/LLMMarket.sol",
    "type": "contract"
  }
